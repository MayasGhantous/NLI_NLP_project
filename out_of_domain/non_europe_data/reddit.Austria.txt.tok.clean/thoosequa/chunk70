  it just wont be very cost effective . 
  i am not sure what you are saying , but here is how i 'd do it . 
  make a struct that stores folder name and size ( also maybe the exact location so you an find it again ) . 
  then start :, 
  have a function that takes a folder as argument . 
  pass it the first folder on c , store the name and size in your struct and look inside the folder . 
  are other directories in there as well ? 
  if yes pass the first folder to your function and run the same check again , if no return . 
  now move on to the second folder on c. 
  so basically in pseudo code you 'd want a, 
  for every folder on c, 
  while folder has directories, 
  edit and the openfolder function :, 
  if directory contains folder, 
  see if folder is larger than last saved folder, 
  openfolder ( folder ) ;, 
  else return, 
  when we assume that all guesses can be represented with a normal distribution then some guesses will be either way too little or way too many . 
  everything else will be `` more correct '' with the closest guesses being in the majority but still ( in theory ) being above and below the actual amount . 
  thus taking the average out of all guesses means you get the amount between all `` aboves '' an `` belows '' . 
  i hope you can make some sense of what i am saying . 
  java is just as good as any other modern oop language to make games . 
  minecraft was made in java for example . 
  as a beginner you are miles away from creating your first game anyway and by the time you become competent enough to also write games , you will be able to pick up other languages rather simple . 
  so my advice : stick with what you started . 
  as a side note : creating a game requires a ton of knowledge , not only the syntax of the language and its features but also a good chunk of algorithms and data structures , math , maybe even a tiny bit physics . 
  your goal should be to learn a language and be proficient with it , not to create program xyz, 
   c++ primer ~ ~ plus ~ ~ 6th edition . 
  ftfy, 
  3 hours guard duty sounds a terrific way to play this game , i will also do this in singleplayer now !, 
  for reals though , good for you for dropping out of a bad group but with that being said im not really a fan of lashing out to groups in public , especially when you only hear one side . 
   went through the three training courses to become a private . 
  i excelled at all of them , i was the best radio operator , the best at keeping formation and i was the only one in the guard post training to actually react to enemies approaching in the whole hour . 
  is your version of the story but i wonder what the 52nd gru has to say about you, 
  then do n't, 
  i 've seen the john purcell video series being recommended lately . 
  you seem to be knowledgable in c++ , maybe you 've seen it and could comment on if its any good ? 
  so i assume a learner is best off with the books from the stack overflow list . 
  i have done 2 semesters in c++ in university but its the same old `` use arrays and raw pointers '' thing all over again . 
  i want to become employable as a c++ dev and im trying to figure out the best course for this plan, 
  i do have primer 5th edition and the c++ programming language by bjarne , worked through the first couple hundred pages but its rather dry . 
  ill give accelerated c++ a whirl , ca n't hurt thank you for the suggestion, 
  the 7th cav has two or three public servers . 
  one with apex , one without and one modded i believe, 
  the modded server has ace i believe but no apex . 
  the apex one is purely vanilla, 
  how about keeping up with the news ? 
  they stated months ago that dx12 is not considered anymore since it would n't be cost effective and would bring practically no performance gain . 
  if you think people marry only for the looks you are probably a virgin, 
  your case 4 looks a bit empty there, 
  you have a lot of global variables , you should avoid these at all cost . 
  do you know how classes work ? 
  or structs ? 
  you could use a class to store the individual information and the functions of a class to clean up your code, 
  nice blog but i see the same stuff being posted here every other week , you do n't seem to mention anything new that has n't been already said . 
  i 'd like to read more of your blog but only if you bring some new points into the discussion , i hope my feedback helped you . 
  las question : you said you 've been coding a while now . 
  what is your background apart from your major ? 
  have you worked in the field ? 
  if so what specific jobs have you done ? 
  front end ? 
  back end ? 
  kernel development ? 
  yes lets not hurt ops feelings with constructive criticism , because what the programming world really needed was another blog from someone who just microwaves quotes we 've heard a million times before . 
  and on top of all that does n't even give the experience she has . 
  cs major , okay but any actual experience in the industry ? 
  yes ? 
  because if the latter the article is even less worth . 
  i 'm not saying it 's useless . 
  i 'm also not saying that op should take her blog elsewhere , quite the opposite actually . 
  but i do n't want to read a blog that just reuses knowledge that most noobs have anyway . 
  because it does n't sound as poetic, 
  see it does matter . 
  as a beginner you are flooded with resources and advices , determining what 's good and what 's bad advice is impossible without having the required knowledge , so we usually use other anchor points to determine if what someone is saying is good advice or bad, 
  if you read my first comment i actually stated that i would like to read more of your blogs , but only if they contain good , original material and not something you reheated from the rest of the `` coding blog world '', 
  ask yourself this : will you need the cluster after you finished your project ? 
  do you have any interest in building the cluster or are you solely building it for this project ? 
  do you have the necessary knowledge to build and configure the cluster in a reasonable time ? 
  if you answer no to at least two of those i would n't bother . 
  if you 're only going to run it for a week before shutting it down and disassembling it , it does n't seem worth it to me . 
  you could rent a server box for a week ( or month ) and just run your calculations there . 
  i do n't have a cluster running on my own but i did a little research when i was interested in the topic . 
  basically it would n't surprise me if the rpi was outperformed by almost any other solution . 
  then again the rpi 3 is a real power horse in comparison to the first iterations . 
  i can only tell you the conclusion i came to :, 
  it 's an interesting project with few practical applications ( remember that the program for your calculations need to be heavily multi threaded ) that is easily outperformed by professional server providers, 
  he bought himself a pc after playing the battlefield 1 beta and is now proclaimed as the new face of the pc masterrace . 
  he comes off as extremely nice and humble in the videos he is making about the topic , that 's all there is to it really, 
  useless advice if you 're not telling op why he should consider phat over phul or greyskull lp, 
  well yes . 
  the pcmr sub is pretty genuine and welcoming , but you will obviously find the extremists just like in any group, 
  which was liked a lot by the pcmr sub for obvious reasons . 
  thanks for adding that, 
  nothing can tell you how to fix your motivation . 
  you need to sit down and work through it , like we all did at one point . 
  but random number generators do n't , since they all have a different syntax, 
  nice ad , have some feedback . 
  your c++ tutorial consists of 1 video , not teaching anything . 
  your java video series is at least 4 videos long , but its structured awkwardly . 
  your first video is an introduction to java , the second one talks about oop , in your third video you show to install the jdk and only your fourth video is actual coding , but you use the whole 7 minutes of it to teach nothing but a hello world program .
