  this is terrible teaching at best . 
  i moved on to your c series , but i stopped when i saw while skipping through your videos , that you show more slideshows than actual code , and the code you show is in low resolution , partially blue background with a dark red font . 
  the thought of teaching others how to program was noble , but there are enough bad tutorials out there , we do n't need another . 
  of course its okay , hackerrank is just the name of the website , its there for you to practice, 
  as others have already pointed out ( on other threads of cours ) your methods of teaching and the technology you use is outdated by decades . 
  i 'm studying cs at bsc level right now , over the summer holiday i picked up an internship position at one of the big 4 ( accounting , not the software big 4 ) in one of their it departments . 
  i eventually want to end up in my life as a programmer , i have n't fully decided what direction specifically but i enjoy programming the most out of what i do in cs . 
  as i said i 'm currently working as intern in first level support . 
  over summer there are a lot of downtimes with very little to do . 
  how can i use this time efficiently to hone my programming skills . 
  i did c-style c++ at uni but i am already trying my hardest to rid myself of th bad habits we were taught , so i 'm thinking that 's what i currently want to practice and learn the most . 
  coding at work is more or less out of the question , as i ca n't really install a compiler on the work machine i am given . 
  i do have access to the internet though and i 'm trying already to read ebooks where i can . 
  anything else you would recommend ? 
  public vanilla pvp does exist and its one of the most popular gamemodes out there . 
  it works best in persistent missions where you can easily drop in / drop out , hence why koth is so popular . 
  if koth is not your style check out eutw cti warfare . 
  its like koth but without the experience system , so newer players stand the same chances against veterans . 
  it also works on a larger scale , instead of one town , so the usage of tanks and cas works a bit better imho . 
  as i said i 'd mostly like to stay in touch with c++ for now, 
  since the elements of your array never changes , i believe an enum would be a better choice instead of an array . 
  edit : so i looked at your code again , is there any reason why you have a populatearray function ? 
  you could easily automatically populate it in the class ' constructor, 
  past two or three gigabytes ram speed matters more than space . 
  you could throw 16 gb at the game but it would n't run faster, 
  username checks out, 
  funny , [ 12 days ago you said you do n't want to get a nvidia card ] ( https://www.reddit.com/r/amd/comments/4rywzn/just_went_4k_second_fury_x_cf_or_fury_with_x_cf/d55gpsx ) and further back you even claim you had a fury x setup [ for months now ] ( https://www.reddit.com/r/pcgaming/comments/3ymnjr/when_is_amd_going_to_fix_their_gpu_drivers_or_is/cyetzav ) . 
  so which is it ? 
  it would be good to know if you know any languages besides english and turkish ? 
  players complaining about unfair assets are such a pain in the ass imho . 
  i used to play small-ish tvts with my group and we always had to write down stupid rules like `` no scopes '' , `` no suppressors '' , `` no he m203 '' , `` no explosives including missiles and rockets '' etc etc. 
  tanks or cas where completely out of the equation . 
  it 's like taking core elements out of the game and playing arma 3 lite, 
  is it every 40 seconds the area is held or every 40 seconds on the clock ? 
  so if 39 seconds pass and suddenly all blufor rush into the objective , does blufor get a point ? 
  give both teams the same equipment . 
  or , if you go asymmetrical , level out any disadvantages yourself . 
  one team has apaches ? 
  give the other team manpads and armored aa . 
  one team has tanks ? 
  let the mission take place in hilly or dense urban terrain . 
  obviously if one team has two broken sticks and half a stone , while the other is sporting thermals strapped on every gun they have , the first team wo n't have an enjoyable experience, 
  that 's why i am a firm believer of `` mission maker decided loadout '', 
  if you know c and you want to learn modern c++ you need to forget a lot that you were taught . 
  i suggest you pick up a beginners book and work through it . 
  make sure it 's a good one from the list , c++ books can be really terrible really quick, 
  all the models are made from scratch obviously . 
  including vehicles and infantry , do n't forget the animations that had to be redone for arma 3 . 
  quite frankly you are talking out your ass here , chap . 
  yes let 's disregard all the new content that was made from scratch for arma 3 so it fits your narrative . 
  if you do n't like arma 3 or apex do n't pay for it . 
  vote with your wallet my friend, 
  if it 's for learning purposes is fine . 
  c++ is also overkill for writing something as simple as a command line based calculator but students still do it, 
  please go with your team red / green and fanboyism somewhere else . 
  this is not an appropriate subreddit for circle jerking over one piece of hardware over the other, 
  i do something similar , but different . 
  i let my desktop play the file and stream it via obs to my pi which is hooked up to my tv . 
  about a second input delay , but sound and image are completely synchronized at the tv , which makes it great for watching shows and movies but practically impossible to game on, 
  yes, 
   decent video, 
  which one is it ? 
  the website looks like it was thrown together in a hurry and not even proof read . 
  literally the first sentence :, 
   ... focus mostly on theory ? 
  here you will ... 
  flip a coin . 
  google should help you find out the advantages and disadvantages of one language over the other . 
  but if you know one of them inside out , the latter wo n't be a hassle to pick up at all . 
  learning a language is later on is not so much about how to declare a variable and where the brackets are in methods but more how the language does certain things . 
  are variables passed by value ? 
  is there a garbage collection ? 
  there is no shortcut to mastering any task . 
  it is hugely dependent on your previous experience , environment you 're working in ( do you have peers you can talk to ) and your willingness to commit / your availability . 
  as usual the best advice is to keep practicing , reading good resources and repetition . 
  c++ is really fun to learn but super in depth and complicated . 
  without a good resource you 're probably learning garbage and you have to start over . 
  the stack overflow c++ definitive book list does a very good job at proving you a list of solid c++ starting points . 
  other languages commonly used for making games ( thinking java or c # ) will be less complex and you will yield faster results , but c++ remains the king in game engine land . 
  with all that being said making games will not be your first or even second contact with any programming language . 
  creating a game that goes beyond command line interface requires a huge skill set far beyond just knowing a programming language . 
  if you 're dead set on accomplishing this than nothing should stop you , just be mindful that when learning to program you wo n't be making games within your first months, 
  your first source is regarded as low quality and generally discouraged . 
  i would stop watching him, 
  edit : talking about the new boston , who was edited out of the comment after i made my reply, 
  server-client or peer-to-peer chat applications come to mind . 
  small physics based games ( maybe with sfml or sdl ) . 
  a raytracer is supposed to be a grade a project to show off your skills . 
  [ here you go , just avoid him in general ] ( https://www.reddit.com/r/learnprogramming/comments/11ubro/28_ways_to_learn_programming/c6ppc38 ), 
  the new boston . 
  he was in / u/anon01ngm 's comment before he edited him out . 
  ill edit my comment, 
  this sub , check my other comment, 
  but as a junior dev you already understand core principles of programming : give variables , objects and classes names that make sense according to what they do . 
  you also understand that the features he teaches are essential to your work , not just funny gimmicks , that will make the output to console a bit different, 
  what argument are you using to compile ? 
  are you sure you 're in the correct path ? 
  might be an odd one but have you tried restarting and the compiling ? 
  there is very little information to work off here . 
  also why are you not using g + + ?
