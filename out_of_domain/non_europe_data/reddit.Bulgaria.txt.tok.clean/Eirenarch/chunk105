  in addition lets hope that there will be other options besides c++ . 
  yeah but last time i checked there were problems with implementing that but there were also ideas how to solve the problems . 
  for example languages with gc would not be effective unless they can use the gc of the browser but to achieve that they would need classes support from ecmascript 6 and so on . 
  well it seems like we disagree on the reason why the games are crappy . 
  i think they are crappy because of the technology . 
  last time i checked even asm.js was several times slower than c++ code and webgl is not anywhere as powerful as full opengl . 
  that may not be a big deal for line of business apps but several times slower for a game is a big deal . 
  in addition the platform is easy to target by crappy developers because it is much cheaper which results in a lot of noise . 
  even if there are good webgl games how the hell do i find them in the sea of crap ? 
  most web sockets use i have seen has been chat applications . 
  the worst problem here is that the choice of a tool is not because a perceived benefit for the project or the developer but simply because of portability . 
  yes this is a benefit but we made it the holy grail and we seem to be ready to sacrifice everything in the name of that portability . 
  if someone chose opengl and c++ because he wanted to remove layers of abstraction and improve performance that 's fine . 
  if someone wants to use c # because he likes the language better and prefers automatic memory management because he makes a lot of memory errors in his code that 's also fine . 
  however we are choosing web tech for things it sucks for just because it runs in the browser . 
  we do n't even try to create alternative tools that run everywhere , we just try to put them all in the browser . 
  except that i think about the pc and i have yet to see a webgl that is better than the crappiest native game i can buy . 
  because as far as i know at this point there are no ways to hook into the dom from asm.js . 
  i would be happy to be proven wrong but i vaguely remember that it was listed as one of the things asm.js has to solve going forward . 
  how do you hook into the dom from asm.js ? 
  so how do you work with the object , i mean how is it represented in the c++ code ? 
  maybe they updated it with some of the webgl features not supported in ie . 
  i have seen it on facebook . 
  seems production to me . 
  this is really cool . 
  is it new or i just completely missed it ? 
  mostly it makes me sad because i have to program in js and use html as the ui framework to get a job . 
  in addition it makes me sad because i think that as a user the software i get is inferior to what could be developed if the same effort was put in more native software . 
  and finally it makes me sad because every `` win '' like that makes the distributed application platform you propose more unlikely . 
  i do n't know . 
  ea made a browser based c&c game ... 
  yes , i know and this makes me sad . 
  i have done no webgl development . 
  so why are n't there any real aaa webgl games out there ? 
  i do n't see other browser vendors adopting dart and until this happens dart is also not a good enough option . 
  even if dart catches on it is still sad that we only get 2 options instead of being able to write in whatever language we want like we can on the desktop . 
  ok , i am waiting for the webgl applications that will blow my mind . 
  mind you that i run some quite cool games and applications on my pc . 
  i do n't have any problems with tech owned by a single organization . 
  i actually thing tech owned by a single organization is in general better . 
  i hated flash because it was used to run applications in the browser . 
  now flash is gone and i hate the web itself because it is used to run applications in my browser ... and flash was actually better . 
  of course i agree about asm.js . 
  there is still hope that we could run our apps in the browser without using web tech . 
  well if we are not writing javascript it is fine . 
  what if someone implemented lets say silverlight in webgl + asm.js - then we could write apps that run in the browser and not use html or javascript . 
  i think portability is overrated . 
  also i 'd take java over html and js for portability any day except that the tech nuclear peace is founded on html + js . 
  no , i learned to use web pages in the 90s . 
  in fact my professional programming career mainly consist of building the kind of web shit i dislike because this is what they pay for . 
  sadly i am familiar not only with using this type of software but also developing it . 
  also the internet is not the web . 
  i want to see sandboxing tools become common and standard so maybe at least some of them will not be tied to html and javascript . 
  i want to see 2 vs 2, 
  ryujit is still a jit and would probably not dig into expensive optimization with low return value . 
  i do n't mind that they pay for interactivity . 
  i am sad that they want their interactivity in the browser instead of the proper native application . 
  this is only important because windows got users so scared of installing apps . 
  this does n't seem to be a problem on mobile platforms . 
  there is quite a difference between being able to choose your tools and being forced into html and javascript and there is a big difference between having ux that is native to the platform and the mess of different uis that the web produces . 
  on the desktop pc you are not forced to use the tools on the platform . 
  well maybe some of the tools of the platform but basically you have a choice of ui toolkits and languages . 
  even on locked mobile platforms you have more choice than on the web . 
  well seems like the people who do this type of things think it is a problem in practice . 
  why do you think so ? 
  i think it makes the game ugly . 
  it does make things easier to see but it breaks the overall feeling . 
  that is what caught my attention . 
  personal opinion ? 
  wtf ?!?!, 
  i expected that he would say something about frustration or rage but this was even worse than what i thought of him before his apology . 
  so what about if the protoss is red ? 
  they have cool security features . 
  i am not sure how other clients compare to this but i was impressed by their voice encryption confirmation without pre-shared secret ( you read a couple of numbers aloud to confirm that the connection is not affected by a man in the middle attack ) . 
  well they link the code so ... 
  you are confusing j + + with j # and also that was a decade before oracle bought sun . 
  considering that taeja win at dreamhack is guaranteed it makes sense for him to focus on the important things and practice opening that champagne . 
  if we follow your logic why pay even if they do n't lie . 
  after all you will be playing a derivative . 
  why would you buy it when you can play a derivative for free ? 
  that makes no sense . 
  you either do n't need to pay because you play a derivative or you need to pay because you play their game . 
  lying does not have anything to do with it . 
  do you play their product or not ? 
  i would suggest taking up some activity where there is a community . 
  for example mine is the local starcraft competitive community . 
  you may buy a bike and get in a bikers club or whatever it is that you like . 
  being in some community of this type gives you a sense that you are a part of something larger , a secondary purpose in life ( maybe first for some people ) . 
  i am sure this works for people who are already in such a group but i do n't know if it will help someone who is currently down and trying to get into the group . 
  however may be useful keeping some hobby in the future . 
  but you can still play the derivative . 
  i thought your excuse for not paying was that it is not their product . 
  not listed :, 
  removed the e3 visuals files on pc so that players ca n't complain that they are locked . 
  probably creates too many objects for lambdas and iterators in a way that is not idiomatic to the jvm and therefore not optimized for . 
  i do n't think that . net will inline a delegate either and the . net languages still performed better . 
  or maybe they do inline hmmm ... 
  does it have generics , yet ? 
  obviously there were no off site backups . 
  i am wondering this too .
