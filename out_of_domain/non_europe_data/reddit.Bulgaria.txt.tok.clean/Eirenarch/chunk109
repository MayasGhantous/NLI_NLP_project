  can you provide an example where ms competes ethically ? 
  my hate for google should not be confused with love for microsoft . 
  i use ms products and develop for ms platforms simply because i believe ms is the company google hates the most . 
  that speaks a lot about vs. 
  if braindead developers can produce useful code then vs does a pretty good job . 
  well it ca n't possibly be the second after all there are windows and office . 
  also the dev business is part of server and tools but this also includes sql server which presumably makes a lot of money . 
  dev licenses on the other hand are probably not very profitable . 
  i am not sure they are intended to be a profit source . 
  maybe more like offset the loss . 
  the compiler is a separate process . 
  if compilation fails they should change the compiler not vs. 
  and by discounts you mean free . 
  who the hell deploys a blog on a vps ? 
  maybe you can but i ca n't . 
  i 'll lose more money if i do n't use vs. hell , if it was n't for c # and vs i 'd probably would n't be able to cross the line to professional programmer and i have studied c++ and java before i had heard of c #, 
  there is something very wrong with the idea that what pays the wages of web developers is typing text . 
  in fact i tend to look at it the other way around . 
  there is something very wrong with people obsessed with the way they edit text . 
  i do n't think my text editing speed was ever the bottleneck to my programming . 
  ok but then the ecosystem is better otherwise people would n't use it . 
  then let the managers worry . 
  it is not your project it is the company 's project . 
  why do you care if it will be locked in to the ms platform ? 
  yeah ... sudden ... 6-7 years in the making . 
  true . 
  except that remembering and discovering api methods and getting my mistakes fixed on the fly saves much more time than i can possibly ever lose from editing text inefficiently . 
  i will take an ide any day , thanks . 
  oh interesting , i did n't know that . 
  although windows was still more profitable at that time . 
  that 's true but currently you have to sacrifice other things that are more helpful like api autocomplete and edit time error reporting to get the benefits of the text editors . 
  currently it is ide vs text editor . 
  now of course if you use a dynamic language you have already sacrificed autocomplete so this probably explains why devs who use these languages tend to use text editors over ides much more often . 
  yeah , i will probably die of poverty in ms slavery or being beaten to death by my masters . 
  you can learn both but what is the use of text editors unless you are in an administrator/ops position ? 
  when would choose a text editor over an ide . 
  this is a good point but even if we learn all our lives we wo n't learn everything so the question is if one invests time in vim what does he not learn instead . 
  that 's only important if you use languages not supported in your ide, 
  and the other is due to what google added to android , 
  true . 
  however what do you do about earthquakes if you worry about them ? 
  the obvious value of an ide is autocomplete . 
  you have the api you work with right there . 
  that 's huge . 
  these seem to be popular on reddit . 
  maybe i should leave something or find and post some article about someone leaving something so i can get some karma . 
  i am certain that i am many times slower in js than i am in c # or java but i certainly would be even slower in c # and java without autocomplete . 
  btw vs supports insane amount of languages as does eclipse . 
  seems like this is the case . 
  some people do n't want to be slow when editing text others do n't want to browse apis, 
  i usually work on mid-sized enterprise web apps . 
  then again i do n't even know the string manipulation api of . net by heart and i have been using it for almost a decade . 
  generics or gtfo !, 
  for the time being they ca n't hardcode go as the language people move to but they should change it in a year or two , 
  on the other hand the use of ms tech is usually obvious when you apply for a job . 
  the job ad says things like `` asp.net '' , '' . net '' , `` c # '' , `` visual studio '' . 
  if someone does not like it how the hell did he end up in the company . 
  as for the trend ... everyone is free to choose their own misery . 
  tech is n't terribly static but neither is the company one works for . 
  five ? 
  if we learned anything from history ( i.e. 
  ruby to node to go ) it is more like 3 . 
  i am half-way through the article and i feel like his next article will be `` leaving . net for go '', 
  so what is the anti-ms equivalent ? 
  they are nit involved because they are nit selling phones, 
  i said an example where ms competes ethically . 
  i guess you read it wrong because i based on what you wrote so far i doubt you find microsoft 's legal actions regarding patents ethical . 
  or maybe i am wrong ? 
  what is the difference that makes visual studio unethical and azure ethical ? 
  i asked this in the comments on the blog post but i 'd like to copy it here as well, 
   why in the hell did it fall on one developer working at a startup in la and one independent developer in sweden to port one of the major , major cornerstones of distributed computing to . net ? 
  and why not ? 
  is there someone who has the responsibility for porting libraries to java and we should appoint one for . net ? 
  i thought this is how oss was built - the first to need it enough writes it . 
  generics ? 
  i pity the poor . net guy whose story got posted on reddit 4 days ago ( http://www.reddit.com/r/programming/comments/29ey6d/why_i_left_the_net_framework/ ) . 
  he switched to go , wrote a blog post and he still was not included in the list of cool kids who switched to go , 
  he did release a good amount of it but he is still complaining, 
  of course it is not impossible . 
  it was possible to use java before version 5 and c # before version 2 . 
  it is just much better with generics . 
  while this is mostly true there are reasons other than management decisions that make people choose microsoft alternative . 
  ms alternatives are usually easier to setup and have better documentation . 
  sometimes the ms alternative are simply better . 
  for example i will have to be paid a lot to ever use nhibernate again . 
  ef is better in every way i care and the most important thing is the linq provider . 
  seems like nobody cares about spring.net but it is not the ms alternative that people tend to choose . 
  they choose castle and ninject . 
  and finally log4net is in fact the most popular logging solution . 
  obviously we are not talking about implementation , but about signature . 
  if your signature is not type safe you have failed or rather your language has failed . 
  i am with sirlin on this one . 
  i played starcraft for many years ( started playing competitive multiplayer with warcraft ii and i actually lost to rekrul once on a wcg qualifier ) . 
  what rekrul says is actually correct in that it is what happened . 
  while what he describes has happened i do not agree that this is the ideal we should aim for . 
  i enjoyed the first years of sc1 more than the later years . 
  i love grrrr ... , i love ntt , i do n't really care about flash 's gameplay ( i enjoy his iconic status though ) . 
  i enjoyed the first year of wol and even the second more than i enjoy the game now . 
  what i find most annoying is that the community not only supports the status quo but we actively push the game towards the mechanics phase . 
  we made the maps bigger and actively hated on cheese to promote mechanical macro play .
