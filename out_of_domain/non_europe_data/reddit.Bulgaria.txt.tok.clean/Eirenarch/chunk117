  same with paying a company to develop an exclusive game . 
  it is the same if they will pay now for a game that is already created or will pay in advance for the next tomb raider . 
  people like you give me hope that bulgaria is not completely doomed . 
  i hope you do n't emigrate  oh and if you need programmers for a project i may be available , 
  well i guess if he had paid the guy more or hired more professional developer for more money maybe they could have streamlined the process . 
  on the other hand it was not obvious in the start that it would be worth it and later he already had accumulated the definitions so he did not need the change that much . 
  probably would have been worth it though but this guy did so many things right that picking about this particular failure is not very reasonable , 
  this is getting tiresome . 
  we do n't know what creates content . 
  only the market knows . 
  we do n't know where square enix will choose to invest the money . 
  maybe they can produce more content than the content destroyed with this money . 
  that 's true but failing expectations is not a problem in itself . 
  btw microsoft actually bought halo and turned it into exclusive . 
  it was not announced as an exclusive back in the day . 
  they certainly may be wrong and they will pay with their own money for it as did microsoft . 
  however one can not judge this move as evil or damaging to the industry or immoral . 
  they made a deal with their own property . 
  i will probably hit his failed enterprise and get paid 10 % of nothing instead of $ 5000 flat , 
  it is not novel at all - http://en.wikipedia.org/wiki/parable_of_the_broken_window, 
  more like 1 frame per 4 seconds . 
  then they zoom in and out to create the illusion of movement, 
  i do n't understand who thought client side analytics was a good idea . 
  analytics should be server side . 
  there should be packages easy to integrate into every web stack and analytics provided by hosting providers . 
  it is sad that arguably the best analytics tool is third party and from a big company :(, 
  in other news assignments to anything that is bigger than the native pointer type is not guaranteed to be atomic . 
  for example you can write half a variable of type decimal . 
  that 's right . 
  i actually do n't get what the issue is here . 
  the code behaves just as i would expect . 
  i do n't see how support in libraries matters . 
  all cites examples refer to what i would call data transfer objects . 
  weather it is something you said over the wire or something you use to stick your database record in i would not expect these to be immutable . 
  i ca n't fathom why anyone would think so . 
  after all expanding it to x = x + y is the simplest and most natural thing . 
  the counter-argument of - = beats all his other arguments as far as i am concerned . 
  the whole language is evaluated left to right it makes no sense to evaluate this particular expression right to left . 
  because java also has the community process bullshit, 
  that `` internet of things '' thing is getting pretty popular lately ... 
  stream ? 
  maybe with java 9 more of it will . 
  i have a better question . 
  if the building you host your service in is on fire how long does it take for you to restore the service ? 
  is n't the official line that typescript will support async/await when it targets an ecmascript version that supports generators which would allow for reasonable js output ? 
  api to access chat please !, 
  not obvious . 
  in theory you can make such a system and check the result of a match in the game history but there may be issues like the time it takes for the match to be available through the api . 
  also the api seems to be read-only ( at least i did not see anything that allows sending data to battle.net ) so you ca n't send notifications to players or anything . 
  it will have to be external to the game . 
  it allows developers to create sites with statistics or integrate your bnet profile on a forum much more easily than the way they had to do it up to now . 
  basically it makes it easier for a program to read data off of battle.net . 
  it was available for some time but they upgraded it and created a portal with resources . 
  this is true but we are back to simulating user input . 
  you need to run a client and what not . 
  things get significantly harder . 
  i am not saying it is impossible but it will surely reduce the quality and stability of the software in comparison to an api based approach . 
  the only reason this is a subject of an article or even a mention is that people who tell others that `` value/primitive types go on the stack , reference types go on the heap '' are still not prosecuted despite the damage they are doing . 
  to be honest this is an implementation detail and unless you go for performance you should not really care about it . 
  too bad it capitalizes `` the '' , `` of '' and similar words , 
  i was quite surprised it did not track this type of details because it comes from the cultureinfo class i expected it to be culture aware . 
  it is not . 
  i wonder if they think i am serious about prosecution , 
  `` custom campaigns '' is probably what these should be called . 
  other services reported to be under attack are lol servers , path of exile servers and psn, 
  is there a source for this ? 
  because when someone is doing a ddos attack the things that break may very well be the servers . 
  or to the moon ? 
  why ? 
  especially if the guy has windows forms experience web forms is quite likely the correct thing to do for internal web app . 
  i disagree with your professional and substantiated assessment that web forms is `` shitty '' . 
  just to be clear i have many years of web forms experience and several mvc projects behind them . 
  your points are mostly good but ... 
  i am not sure what you are talking about . 
  the routing engine works pretty much the same . 
  do you mean that events are effectively actions ? 
  do you know that you can easily post to another form ? 
  the mvc way of routing is better sure but with web forms you need much less routing anyway . 
  not more than the mvc pattern . 
  i have seen people do database queries in the view in mvc and i am not talking about the countless hidden lazy loading queries . 
  the problem with mvp is that very few people know about it while mvc is explained a lot to everyone . 
  in fact i think mvp is quite robust and in a way better than mvc . 
  i especially like that the view has its own code behind where you can put significant amount of view code without mixing it with the markup . 
  that 's true but why do i care ? 
  especially in this day and age where viewstate is off by default and i can just turn it on on demand . 
  that is very true and in my opinion the most serious reason for web form 's downfall in the late 2000s . 
  at that time people wanted to ajaxify the websites add jquery animations and so on and the lack of control over the html was a big problem . 
  however if you do n't want to do this i could n't care less about the quality of the html and you should n't do it either . 
  just treat it as compiler output . 
  on the other hand abstractions save time . 
  i have not cursed more as a programmer than when i was trying to build a checkbox list with mvc because checkboxes in html are just insanely stupid . 
  not sure what this means unless it is the same thing as the funky html . 
  while it is slower than mvc it is very reasonable . 
  i once built a search as you type list of users with update panel just to prove a point . 
  everyone but me was surprised by the performance . 
  my boss made me switch to raw ajax anyway because he held the same narrow minded position against update panels . 
  update panels are impressive when you have the type of page that has one grid in the middle and just static ( or cheap ) stuff around it . 
  if this grid needs filtering , paging , etc. 
  you just put it in an update panel and you are basically done and other ajax methods can not be much faster because producing the grid is the expensive part anyway and the amount of additional data sent is small compared to the actual grid . 
  what is more all other methods of doing ajax are there too so what is the problem ?
