  i find this quite interesting but the most interesting part is the motivation . 
  therefore i will post mine here . 
  i assume the oscars are for this year . 
  disclaimer : i am a c # developer, 
  programming language :, 
  java - because this year they released java 8 which was an impressive effort and they managed to put very important feature ( lambdas ) in a legacy compatible way . 
  the progress of java this year affects the greatest number of developers compared to the progress of any other language . 
  dynamically typed language :, 
  elixir - a language i believe will become very important in the future as it is nicer interface to the erlang vm ( i hope i did not mess up and elixir turns to be some completely different language ), 
  statically typed language :, 
  haskell - because static typing, 
  functional language :, 
  f # - at least in my view seems to be the most practical in the current environment, 
  oo language :, 
  c # - best combination of oo and other features while still being accessible to mortal men . 
  looking at you scala !, 
  new programming language :, 
  swift - seems like a nice language and is a life saver for developers currently suffering through objective-c, 
  syntax :, 
  c # - classic but powerful, 
  ecosystem :, 
  java - do i have to explain ? 
  macro system :, 
  nim ( via option other ) - the most powerful and understandable metaprogramming features i have seen . 
  package manager :, 
  nuget - honestly because i only have experience with nuget and npm and have had more problems with npm ( node_modules within node_modules within node_modules folders ) despite using nuget more . 
  you probably mean `` this is gentlemen !, 
  bitcoin will be in space ... '', 
  i do not expect it to catch up unless something drastic happens . 
  after all the java ecosystem has no reason to stop advancing . 
  the . net ecosystem will certainly catch up with java of today but as it stands java will move forward in the meantime . 
  that 's not as bad as it sounds since the . net ecosystem is very strong probably tied for third place with python behind java and c++ . 
  that 's not a bad place to be at all . 
  makes perfect sense to me . 
  if i was in charge for mlg i would do the same . 
  it is not like they gave her seed . 
  it makes much more sense to make a new league above masters and call the league you suggest masters since it would line with the meaning masters had for more than 2 years . 
  the achievements of the players would be comparable . 
  hah i did n't realize how this sounded , 
  true . 
  my girlfriend is a big jd fan . 
  i would watch if you make the episodes small . 
  15 minutes max and aim for 10 or even less . 
  i really do n't have time for an hour long show and i at work i can read but not watch . 
  as discussed in the recent api review meeting they wish ilist did not have that property and they had the read-only interfaces from the start . 
  however not implementing ilist will be effectively deprecating it and they do not want to do that . 
  the design of ilist is not good but they intend to keep it for backward compatibility . 
  it is not worth it . 
  there is not even an argument here . 
  the problems are very minor and the damage of breaking compatibility would be very big . 
  backward compatibility is always more important . 
  another framework will not win because it fixes these mistakes . 
  it has to be much much better at everything to justify building a new ecosystem . 
  it did n't exist at the start of the season but the season was like 9 months or something and they added it in the middle so we actually finished season 1 in masters . 
  i managed to do it for 15 and then dropped out when they shrank masters to strict 2 % ( according to third-party sites i was hovering between 2 and 3 % so i got cut out ) . 
  really killed my motivation and i play and watch the game because i was actually improving at the time :(, 
  i probably would if i was thinking about doing blockchain programming . 
  because you want things to be discoverable by search engines and you want facebook to extract images for preview when you post a link and so on . 
  there are also a lot of people with multiple accounts . 
  it seems like this did not happen that much at the start or it got lost in the larger player base . 
  i have a feeling that people in masters have on average 2 accounts in masters based on the people i know . 
  i think there is a virus going around in this subthread . 
  everyone is coughing . 
  there is visual studio community edition now . 
  no need for trials . 
  in addition i doubt this game requires more than express to begin with . 
  i have long maintained that if sc is to survive team games must be buffed . 
  if maps and tournaments for 2 vs 2 and 3 vs 3 are not enough to create a team scene then balance for 2 vs 2 with minor tweaks to the units . 
  maybe even add a unit only available in team games . 
  1 vs 1 games just die because people want to play with their friends and blame the loss on someone else . 
  more precisely moldova and ukraine . 
  i think the other eastern european countries actually want to be separated from the rest of europe . 
  i am talking about the practical side of things - countries that want to be in the eu and countries that do n't want to be in the eu . 
  remind you the thread is about a visa issue that is non-existent for citizens of eu . 
  i have done mostly web dev and just a couple of wp apps . 
  i wish i lived in a world where i was paid to do what i do in silverlight . 
  in fact i do n't know how anyone can not defend it from technology standpoint . 
  it does n't scale with team size , not as performance . 
  it is also terrible language on many points . 
  good thing you got the most important part . 
  take these wise words and treat them as holy truth . 
  you do n't need yo know the gory details . 
  first of all it was on two platforms and sources say they did everything possible to get it on ios but jobs refused ( note that silverlight was released before the mobile revolution so they basically covered all that mattered at the time ) . 
  of course all this has nothing to do with technology . 
  fuck politics !, 
  silverlight is vastly superior to the web platform of today and was infinitely better than the web platform of the time . 
  microsoft had the 3d street view working long before google . 
  sadly nobody paid attention so they stopped updating it . 
  i think they have an html version too but again nobody cares . 
  you can sacrifice things like readability and maintainability for `` getting things done '' although this is the very definition of `` does n't scale '' . 
  on the other hand even if you think getting things done is important some of the things in js are just shit . 
  they are bad and there is no trade off . 
  dynamic vs static typing is a trade off . 
  having shitty `` this '' and shitty scoping rules and the auto semicolumns and many many others are just bad design decisions that do not add any value . 
  they just make the language worse . 
  they certainly do get in the way of making applications . 
  people make unintended mistakes and produce buggy software or take more time to develop it because of these . 
  you may know what you are doing but not everyone on your team can read your mind . 
  this is why dynamic vs static is a trade-off . 
  i do n't understand the word `` lately '' .
