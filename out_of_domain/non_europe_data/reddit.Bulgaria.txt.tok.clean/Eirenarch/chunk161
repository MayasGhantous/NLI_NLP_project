  this is client side . 
  mvc and web forms are server side frameworks . 
  if we are going to discuss client side solutions both are entirely irrelevant ( i do claim that this is in fact true and currently server side frameworks are irrelevant but in the context of this argument this does n't matter ), 
  to be honest some of the things ie has over chrome are probably due to patents . 
  for example the rubber band functionality really improves the user experience with touch - makes it feel natural and gives nice feedback on when you reach the limit of the page or zoom . 
  google refuse to pay apple so they ca n't include it . 
  you have n't heard of it before ? 
  was a big thing in apple vs android cases . 
  they do . 
  they used to pay me to generate html on the server but now they pay me to write spas . 
  my problem with intellij was that the defaults were not user friendly at all . 
  it probably have many features that lack discoverability . 
  as an example both intellij and visual studio have the feature `` break on exception '' ( when an uncaught exception is thrown the debugger breaks so you can see the values of the variables ) . 
  in intellij this feature is off by default in visual studio it is on . 
  at the start i did not even realize why i was so annoyed developing in intellij . 
  this was a feature i never noticed in vs it just worked for me without me realizing it was there . 
  so it took me a week to realize what was missing and google how to enable it in intellij . 
  a counter example from visual studio - i have the habbit of browsing through code with a mouse ( probably gaming related habit ) and i do click on go to definition instead of using f12 . 
  so at one point they introduced peak to definition . 
  i did not remember to use it but in the context menu it was on the same place go to definition was so i started to use it without learning about it . 
  there are many examples where java ides fail in usability and discoverability by default and visual studio shines . 
  i do n't want to spend two years learning and customizing the ide i want to benefit from the features without putting an effort . 
  building this configurations requires time and is definitely something to consider when declaring one ide better than another . 
  note that even if you already have the configs you still need to discover new features and incorporate them so it is an ongoing process . 
  or according to the author - 6 times this . 
  ms are not the empire they once were . 
  they are recognizing this and adapting to the situation by trying to reconquer territory at the expense of immediate profits . 
  to be honest i thought part 3 was not as good as 1 and 2 . 
  not if he means legacy of the void, 
  i doubt coreclr will be ready for this in the next couple of years . 
  i find it funny how this article that is supposed to help you switch from unity to ue features c # vs c++ comparisons that are always shorter and more readable in c # . 
  almost serves as an anti-advertisement , 
  gdc - everyone is making their announcements . 
  so ting is a us mobile carrier ? 
  i may be stupid but i think it does not speak well for your website that i had to read / u/jakexsv 's review to understand that . 
  i hope the invited teams are not just 1 vs 1 pros but good 2 vs 2 teams ( obviously non-pro ) are invited too . 
  i do n't have any personal interest in this . 
  i just love watching the best rather than star players goofing around . 
  if anything it would be interesting to get a response from a blizzard engineer on this one . 
  i understand both the op argument and the counter-argument i just ca n't judge which one is correct . 
  even in lockstep simulation if all players have reduced cpu load we will get less `` user x is slowing down the game '' because the game does not desync when one player can not keep up , it slows down . 
  on the other hand if / u/kutvolbraaksel is correct then the graphics core is not maxed out anyway so this will have 0 effect . 
  however i can not even think of a way to test which one is the case . 
  sure but how do we know that the rendering is done on the non-maxed core ? 
  yeah might be . 
  sadly not my area of programming expertize and ca n't infer this on my own , 
  weeeell ... no . 
  c # would not inherit crappy scoping and other javascript shit . 
  i do n't understand . 
  does this mean that the angular project itself will be built using typescript ? 
  the text makes it sound like this but the examples are about using angular with typescript as if they built only type definitions . 
  you can do practically everything and keep the ability to transpile ( worst case you lose performance ) . 
  however typescript aims at 100 % compatibility with js code + transpiled output that looks ( and can be used as ) written by a human . 
  is n't generating dart from js kind of defeating the purpose of dart ? 
  one does not simply pick his own language over a language designed by anders hejlsberg, 
  i see . 
  i did not know about atscript . 
  since writing the original comment i have educated myself on the topic . 
  so i guess if angular 2 becomes big ( as big as angular 1 ) then typescript wins and becomes the de facto standard . 
  guys already have bad reputation so we do n't care . 
  we know how to internet and not be insulted by everyone and everything even when someone is indeed trying to insult us . 
  by contrast women are offended all the time from everything . 
  in my opinion there is no fault here . 
  there is simply no problem . 
  sure someone somewhere harassed a woman on a conference but i can bet this happens in it less often than in the average professional field . 
  btw my girlfriend is an experienced developer and she says she never had any problem being a woman in it . 
  she hates these type of articles and initiatives with passion . 
  she likes to joke that when she is bored of being a programmer she will become a boss . 
  it wo n't matter if she is qualified because the companies will have female quotas to fill , 
  it 's not solved . 
  it has never been a problem in it any more than in society in general . 
  this is not the only instance of `` same for men '' in this article . 
  for example this :, 
   but think of what comes to mind as traits for a woman being badass : loud , assertive , rides a motorcycle , maybe really good at martial arts . 
  well this is the definition of badass no matter if male or female . 
  so if women are underrepresented in stem it must be because of sexism ? 
  there are other fields that suffer from even more serious imbalances . 
  for example what is the ratio of male/female nurses ? 
  how about male/female ratio in garbage disposal ? 
  why ca n't we accept that some fields appeal to more men than women due to the nature of the field ? 
  i am looking at the conference linked in the article and they are talking about women game devs . 
  if 90 % of the people playing gta v are male does it make sense to have more than 10 % women working on the game ? 
   the world would probably be a better place if people 's competencies were n't decided based on their gender . 
  that would only be true if the discussions and efforts to fix the problem did not occupy more resources than the damage from the problem . 
  and sorry reading one article about `` women in tech '' today is enough resources spent for me so i will not read the other article , 
  this is true but i do n't see any problem with this and even if it was a problem it is certainly not a problem of the tech industry . 
  i disagree that `` strong woman '' is the same as `` badass '' as the author suggests but maybe if our culture values the kind of `` strong women '' it portrays is because we find them more valuable in practice than the one that save the world by being feminine ( whatever that means ) . 
  i mean in an action movie i can see why a michelle rodriguez character would be seen as more useful than a feminine character . 
  on a side note i am a huge michelle rodriguez fan . 
  especially like the interviews she gives . 
  like this last one - http://www.tmz.com/2015/02/28/michelle-rodriguez-minorities-white-superhero-roles-movies/, 
  sweet politically correct tears , 
  for years i thought that this is the single biggest problem with sc2 . 
  in my opinion this would fix the issues with early game too . 
  it will auto fix the death ball issue ( since you need to spread to defend all your bases ) and the issue with the supply cap being significant part of the game ( which i think is bad ) . 
  i really hope blizzard implements this instead of meaningless changes like starting with greater amount of workers . 
  even the amount of starting workers would not need change . 
  if 8 workers mine at 100 % efficiency strategies would branch before we get to absurdly high amount of workers so no need to start with more . 
  scoping is fixed in es6 if you use let . 
  the broken stuff with var is still there for backward compatibility .
