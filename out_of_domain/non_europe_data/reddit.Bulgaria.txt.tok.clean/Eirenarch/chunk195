  you can just spend it later or on more buildings at the same time . 
  i really want to see the importance of dumb clicks minimized . 
  i do n't know if blizzard want this when making these changes but i want players to win through better strategy , more clever decisions and tactics and not through better muscle memory, 
  sure if the queen was produced from eggs ... 
  you are correct but i see this as necessary evil if we want to have a rts . 
  what annoys me is that people want to emphasize on this rather than minimize its impact . 
  i know this is offtopic and very old so probably everybody knows about it but i feel like i should point this out every time someone mentions a band with sc related lyrics - https://www.youtube.com/watch?v=hcvpfbu9n14, 
  if i am not scaling to multiple web servers should i still use a backplain ? 
  i mean is it something i can easily add later and avoid the complexity until it is needed ? 
  i have built some 2 products with this assumption in the past ( one with signalr beta ) and i wonder if i did it wrong . 
  just for the record it is not microsoft signalr . 
  it is a community owned project so it is just signalr, 
  it is not obvious why that would result in more productive company ( assuming they learn on company time ) . 
  maybe it is enough to have you understand those things and have them do actual work or do more relevant learning . 
  come on , money has nothing to do with it . 
  the guy has mental issues , probably inherited . 
  according to reports he was depressed before minecraft . 
  his father committed suicide :, 
   persson is concerned about these patterns , since they mimic habits he saw in his father , who took medication for manic depression and committed suicide in 2011 . 
  do n't worry guys !, 
  if you have a chance make billions , i am sure you will be able to handle it and if you have mental issues i am sure it is better to have mental issues and a billion than mental issues and no money . 
  i bet there is not much need to introduce yourself with a different name if you made minecraft . 
  it is not like you are a famous football player . 
  the only problem is she might google you in the bathroom but the chances that a cute girl will recognize the creator of minecraft by name are pretty slim . 
  the internet explodes with random outbursts of hate against random people who do not even have a billion dollars . 
  if he gives money to the guys that made woolfe and went bankrupt i will never ever again talk against him for making an ugly game . 
  i am implying that the chances of random people recognizing the name markus persson is pretty slim . 
  it gets even lower with cute girls . 
  i do n't know about that actually . 
  i just know that it was one of the very few indie games i found to be beautiful and it was n't appreciated . 
  yes , i am implying that girls are less likely to be interested in the background of the games they play and that attractive girls are less likely to be geeky . 
  now of course i find geeky girls attractive by virtue of liking geeks but that 's not the point . 
  well he has to tell her at some point i guess . 
  maybe go just by first name the first two weeks ... 
  i am still stunned by the fact that they had the opportunity to rebuild their entire platform knowing that it was gon na be a huge project and they still chose to do it in php . 
  i would n't expect to find this since it will result in more complex code and the benefit will be measurable only for extremely specific tasks . 
  i ca n't imagine many js programs where the bottleneck is sorting small arrays . 
  so how do you fix the past bullshit ? 
  how do you make = = useful ? 
  how do you remove crappy functions , eval , variable variables and all that crap ? 
  what is more even if it is ok it is not the best choice ever no matter the criteria you choose ( maybe cheap hosting ? ) . 
  you want maximum portability and familiarity and largest pool if devs ? 
  go for javascript !, 
  you want performance and proven , stable platform - go for java !, 
  you want the best ( mainstream ) language you can still hire people with or you work in windows environment ? 
  go for c # !, 
  you want dynamic typing ( of course they should n't want dynamic typing on a project of this scale with so many devs but lets assume they do ) and non-crappy language ? 
  as i see it there is literally no use case where php is the right choice . 
  i read legacy of the void world premier and i think they announced launch date . 
  turns out this is like the teasers of trailers they do these days for movies . 
  what was the name of that journalist that always leaked their announcements ? 
  waiting for him to leak the lotv release date before the announcement . 
  java generics are actually more powerful in terms of covariance and contravariance and there is nothing in this area that requires type erasure . 
  it just happens that implementing it without type erasure is somewhat more difficult so the . net team decided it was not worth the effort and covariance and contravariance only work for interfaces and delegates . 
  in addition java generics allow the user to turn every type into co or contravariant type . 
  this could have been implemented in c # but it was n't . 
  i think it us better this way because it greatly reduces complexity for the user of the type but we must admit that the java way enables more scenarios and specifically enables scenarios where the dev of the type did bot think about variance . 
  they put it at interface ( and delegate ) level because they dis not want to do the required work in the clr to enable it on classes . 
  there is nothing wrong with having covariant or contravariant classes . 
  java generics are broken in many ways but this is not one of them . 
  type erasure is irrelevant to this example . 
  in java when you declare a covariant variable like that the compiler disables the contravariant methods of the type . 
  you will get a compiler error if you try adding a cat ( or adding at all ) . 
  basically this syntax extracts a covariant subset of the type . 
  what you say is true except for the variance part . 
  the whole point of variance is to be able to prove compile-time that the types are correct . 
  neither c # nor java needs additional runtime checks to prove variance correctness . 
  there is no runtime cost of treating a dog as an animal . 
  freelance ? 
  do n't you think that this is your problem ? 
  i have outright declined in my boss 's face to work on a saturday ( not even the whole weekend ) while everyone else agreed . 
  it was one month thing and the overtime was paid well . 
  nothing bad happened . 
  they did n't fire me . 
  in fact i believe it was one year later i was offered a team lead position which i also declined . 
  what is so interesting about this hitman guy ? 
  i saw a couple of threads excited about him but did not dig enough to understand why . 
  i am pretty sure this can only be a problem if you want to advance your career in some way but if you ask me it makes perfect sense that workaholics get promoted and make more money . 
  after all if work is the most important thing for someone chances are he does more work than people who do not work over the weekend . 
  let him be paid more money than me !, 
  its simple . 
  you treat the payment as one for a 60 hours position when you evaluate your options and eventually you do not apply for that position . 
  that 's sounds great !, 
  i will start watching the games of this guy . 
  i am one of those few who think cheese and all in is valid strategy and great to watch and the keyboard thing sounds like trolling . 
  `` i am gon na beat you with a wireless keyboard ! '', 
  that 's actually great . 
  almost decade as a . net dev i edited a build only once and for the first five years i was not aware the build system existed . 
  i was wondering what this `` make '' people talk about is for . 
  after all why not hit the build button in vs. just goes to show how well it is integrated . 
  the best tools are the invisible tools . 
  the blogpost does say `` drastic simplification of how you author and maintain build specs '' so maybe they will do something about that feeling of yours . 
  i do . 
  but i also pray that i will never have to deal with any build system by hand . 
  it was not like i was very happy dealing with gulp when i had to . 
  i think that switch is extremely ugly construct and it is not justified in any language . 
  i do use it because it is already there in c style languages but if i had to put together a language switch certainly would n't make it in ( better have something else ) . 
  i understand why it was invented in the ancient days just to have a jump table but not today . 
  i think the switch syntax is extremely heavy in c-style languages ( 2 keywords , braces , columns , breaks required , etc. ), 
  in fact i can not think of a construct that is heavier on syntax than the switch statement .
