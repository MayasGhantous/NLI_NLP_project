  just for the record do n't go for this shitty work around . 
  console apps should not block like this because in an actual console it is useless and in a script it is outright evil . 
  instead just start the app with ctrl + f5 in visual studio . 
  it will add `` press any key to continue '', 
  i play random because i paid for this game and i am going to use all the races in it . 
  blowing up your own units with disruptors is fun , 
  everyone is zerg . 
  probably the same thing in eu diamond ( i am random ), 
  their strength does not come from their muscles i guess . 
  the engine does not care about your human perception and metrics of time . 
  correct answer is quake . 
  the game is really hard and makes sure to insult you when you fail . 
  in this game if you are slightly worse than your opponent you can end up with negative score . 
  this is how hardcore quake is . 
  well json is a serialization format not a protocol . 
  reminds me of that joke - they said `` dress for the job you want not for the job you have ! '', 
  so i dressed as batman . 
  on a side note i 'd expect that these days if you happen to be called walter bright clothes would n't matter ( although a batman suit may be appropriate ), 
  you could hire them at shipyards i think but the competitive maps did n't have them . 
  warcraft ii water maps were super cool . 
  even cooler than sc air maps that the elitist community hates because ... 
  i do n't know ... not nice macro game ? 
  true but not every serialization format is a protocol, 
  if you have a different opinion you end up with negative score ( on reddit ), 
  it will happen even more when you climb higher but you do deserve your league . 
  i 'd add diamond to that stats based on personal experience and counting my own division . 
  definitely more zerg than anything else . 
  stats show percentage of zerg in higher leagues is higher than percentage of zerg players . 
  this time it is for real and statistically significant . 
  offtopic : how is bitcoin xt adoption going ? 
  is it going to succeed in increasing the block size ? 
  i guess gp is not a professional commenter anyway, 
  interesting . 
  one would think that people will want to use it `` just in case '' even if they do n't support the increase in block size . 
  well if the proposal is accepted by the majority would n't you want to be mining on the side that is the majority no matter which one it is ( which is what bitcoin xt would do ), 
  of course they are but as long as they are uniform they are good enough statistics . 
  also note this guy 's stats ( which my ladder stats mimic closely ) . 
  all sources point to overrepresentation of zergs in the higher leagues including the non-parting dreamhack group ( hell , even parting lost a game to bly ! ), 
   build a desktop app with github electron and couchbase, 
  no thanks, 
  just a reminder this is a tech site not an e-sports one . 
  do not expect something you do n't know . 
  sure , i love ars . 
  i think it is the best tech site and i am a paid subscriber . 
  i just thought a reminder that they do not specialize on e-sports and do not tweak the article for e-sports followers is due before people start complaining . 
  i love react 's concept . 
  i am a big fan of the component model and think it is superior to barebones mvc frameworks that have dumb views that redirect to random actions all over the place ( as opposed to events hooked to components ) . 
  however flux just beat me . 
  i just could n't understand what goes into actions , what goes into stores and what goes into react components . 
  i have n't used angular in a real world project yet ( i have used react ) but based on articles , tutorials and presentations it is pretty simple or at least familiar . 
  i know what goes in a service , what goes in a controller and what goes into a view and i know how to use dependency injection . 
  maybe this is a result of years of server-side programming where i got an idea how to organize things like this . 
  in addition react has minor annoyances like the fact that the jsx and the code to power it go into the same file . 
  react proponents claim that this is the right way but i simply do n't believe it . 
  after years of web forms and xaml i do n't see anything good in putting the markup and the code behind in the same file and i have seen my fair share of this in web forms . 
  hell they already faced problems with transpilers that needed to support jsx specifically but still refuse to admit that these things should be in separate files . 
  react just seems like a hobby project even if it is a hobby project of a genius, 
  nothing ? 
  typescript does exist and as far as i know does compile time validation for jsx stuff although i have not tried it personally . 
  i do n't mind special javascript i just think the input for generating special javascript should be separate from actual javascript . 
  thank you holy turing that i do n't have a job where this `` ide '' would be acceptable . 
  so what 's the problem ? 
  upload your code elsewhere !, 
  if they provide value better to use the value for some time than not use it ever . 
  like visual studio does these days . 
  you ever work in an environment where you ca n't install on the computer you work on ? 
  well i rarely uninstall any dev on the machines i do development either . 
  you may be a shitty developer but without providing information about your location and your tech background it is hard to say . 
  if you are very good with abap but there is just that one place in a 100km radius that works with sap you can have a hard time switching jobs . 
  i actually love working on legacy software as long as i am allowed to upgrade every library and framework to the latest version if i see fit . 
  of course that assumes that the legacy project is not in some dead technology like vb6 . 
  assuming 15 minutes average game length it is doable with 14 hours playing per day . 
  but he did count the beta i guess . 
  i do n't know how things work with sap but i have experience with client side tools ( grunt , gulp , npm , atom , etc. ), 
  and java . 
  the java case is by far the worse . 
  nothing is installed and you just do copy paste but then you have to setup a bunch of paths and when it does n't work ( always ) you do n't know which path is missing and where you should set it . 
  visual studio is the easiest of these . 
  my settings ( fonts , options , etc. ), 
  just come from my account and for the project you just click on the sln file . 
  only thing left is to setup external things like the database . 
  i imagine there can something better but the most popular things out there are inferior . 
   there really is n't a single thing sc1 did well that has n't been done better by other rts games . 
  [ citation needed ], 
  oh ... that guy who announced the `` sad day for the hacking community '' . 
  for a week ... 
  by far the best sc feature i enjoy is that it provided material for tournaments and competitive community . 
  now of course if you are only going to list games in the 90s i can point to many more purely technical features like the ratio graphics/system requirements , user interface , strategy depth , hell even the story was quite good although c&c probably beats it . 
  i think sc is strategically and tactically deep and this is why i play and watch a lot of it , go to tournaments and invest time and money in it but i really do n't want any of the mechanics aspect . 
  i do n't think it is fun to learn , execute and watch . 
  i have zero respect for what the sc community these days calls `` skill '' . 
  i do n't want to stutter step marines or larva inject , thank you . 
  please do n't make me do it . 
  it is easy to support their argument like this - if strategy deciding the fate of the battle is boring in a rts then the genre in general is boring and no amount of micro will save it as demonstrated by the stagnation of sc2 - practically the only relevant rts . 
  beware when people tell you that something is fun or boring . 
  by definition they are right on what is boring for them and if we think that the genre needs more fans maybe we should pay attention . 
  larva injects - literally the worst thing in starcraft ( including sc1 ) . 
  everything is better than the wol/hots larva inject . 
  and automatic injects are better than injects queue . 
  it was 50/50 and only people who participate in the community expressed their opinion which are probably higher level competitive players who care more about the differentiation factor .
