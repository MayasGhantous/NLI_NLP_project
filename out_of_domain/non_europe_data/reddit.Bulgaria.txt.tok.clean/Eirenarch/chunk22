  i am looking forward to future articles in the series since on at least one occasion i should have used message queue but the lack of experience pushed me towards database decision . 
  i asked the same question on infoq but no reasonable answer was given . 
  if the compiler does not force you to handle the null case of optional at compile time what is the use of optional to begin with ? 
  i do agree with him but according to the article this is related to the optional type . 
  i must ask if you are not going to turn java into scala in this respect why add the optional type at all ? 
  to me it seems totally useless without the language support . 
  hmm strange . 
  certainly does not seem worthwile to me but of course i may be wrong on this . 
  i am probably tilted by my past experience but i 'd prefer the optional nature communicated via the method name rather than the result type like c # 's firstordefault ( ), 
  i understand but java has no such support . 
  but java could not support this in a reasonable way could it ? 
  this would mean that optional should elevate the operations on the underlying type as operations on the optional type and this requires language support . 
  in a way it is the same with java lambdas and anonymous classes . 
  you will get nullpointerexception once you try to use the optional value . 
  same with null . 
  what does the second button do ? 
  but java has no safe way to retrieve the value . 
  also if i am not mistaken functional languages give you ways to elevate operators of the actual type to the maybe type . 
  nothing like this in java . 
  can you show examples ? 
  i am confused . 
  why is the oracle team defensive then ? 
  what are the actual shortcomings of java 's implementation ? 
  beautiful !, 
  i 'll use the opportunity to advertise my visual brainfuck interpreter for windows phone - http://www.windowsphone.com/s?appid=e6237950-dc39-45d6-ba3b-853d8caa5412, 
  complete with source code and post mortem - http://sietch.net/viewnewsitem.aspx?newsitemid=195, 
  just in case anyone cares ... 
  it is hard to search for brainfuck on wp because the word `` fuck '' is not allowed . 
  i searched for the word `` interpreter '' to find them . 
  there are several bf interpreters on the wp marketplace but i think mine and one other called brainwash are the best . 
  brainwash is better for writing programs ( has breakpoints , and some language extensions that make it easier to develop ) but mine is better when you show your programs since it has better visualization . 
  btw i looked at android brainfuck apps and the ones i found were obviously worse . 
  i wonder how ios does in this field , 
  any way to take a look at them from the web ( screenshots and feature lists ) ? 
  interestingly the wp keyboard puts all bf characters on one screen , 
  does n't look very interesting . 
  i think microsoft can rightfully claim that windows phone is the best for brainfuck although marketing may have difficult time with this message , 
  i may do a windows 8 version but i doubt it . 
  i did this one to get familiar with wp development . 
  i would have ported it to winrt with the same idea but things turned in such a way that i am about to publish a port of much more serious app . 
  i may still do it though if i find the time and there is big demand for bf interpreters on windows 8 . 
  interestingly the guy who published the most popular android app says he made it to get familiar with android development and the guy who made visual brainfuck says he made it to get familiar with borland c++ . 
  as a bulgarian i 'll switch sides depending on what foreign army currently occupies the country . 
  5th decade on earth starts at 40 , does n't it ? 
  he is a c # language designer . 
  anders ( hallowed be his name ! ), 
  is the c # language designer , 
  however eric lippert is the c # blogger and he splits the title of the stack overflow c # expert with jon skeet . 
  i somehow doubt he will stop replying on so especially since his new job also involves c # . 
  i wo n't miss him because i intend to read his new blog and his stack overflow answers , 
  he has said before ( years ago ) in an interview that he uses some of his time to write actual production code because language designers may become disconnected from the actual programming problems if they do n't . 
  you may actually be correct . 
  tiobe results are based on web searches and eric 's articles are most numerous and shared around the web . 
  if he blogs less chances are c # will fall back on tiobe , 
  yeah right . 
  it will only take 10 years for java to catch up with current c # features or scala to catch up with c # 's popularity and user base , 
  i am impressed by how far ahead the web technology has moved . 
  now we can play games from 1992 !, 
  at this point we will be able to play games that are only 10 years old !, 
  impressive !, 
  screenshots look like 10 + years old game but probably the best looking ( on screenshots ) web tech game i 've seen . 
  if you look at my posts you 'll probably find some of my projects however if you think i shit at people 's projects you are wrong . 
  i shit at the platform bullshit platform they use that is popular for purely political reasons . 
  yeah if you consider a desktop c/c + + game that gets started by a browser plugin `` web-based '' . 
  btw i totally hate that it runs in the browser . 
  so many bugs not present in actual quake 3 . 
  i see nothing in ie and opera . 
  is it a browser issue or i am doing something wrong ? 
  ie9 here . 
  i might test on ie10 tomorrow if i do n't forget . 
  it is amazing how two browsers are not enough to view all web pages these days . 
  read the comments . 
  if you think the dinosaur code is better than the functional one you are wrong . 
  let alone that the dinosaur in question makes the code more functional to make it marginally better without realizing it . 
  if you are serious i am ready to dispute this . 
  2012 did not present more important games than dune 2 for the development of the industry ( after all very few games are more important than dune 2 ) but i do believe that the overall quality of games increases every year . 
  most of the genres you quote are super obscure and there has n't been great investment in it . 
  while for some of them it is understandable i am completely puzzled why dunger keeper style games did n't catch on ( some consider minecraft a dk style game ) . 
  pointing out total annihilation as the high point of rts is quite strange to me unless you narrow the genre to the type of rts where you control thousands of units . 
  even then what about supreme commander ( have n't played either game enough to compare ) ? 
  i can certainly point out to many new games better than total annihilation in the rts genre as a whole like starcraft and company of heroes . 
  looking at the screenshots i doubt international karate would be better game than cadilacs and dinosaurs for example but then again i never heard of this game before you mentioned it . 
  i completely believe that the roguelike genre has not evolved much and for some reason the the turn based civilization style game shy away from the fantasy setting and i can not recall anything in the genre except master of magic . 
  i have a hard time believing transport tycoon is the best business strategy game out there ( do we count city builders in the same genre ? ), 
  but if it is is it because it is so good or because very few games are released in this niche ? 
  when did he switch to lol ? 
  i want to read the whole drama post followed by rage comments . 
  this is disputable . 
  although silverlight as technology is dead the development skills are still more useful than flash . 
  this is of course arguable but i know if i could choose past experience i would choose one with silverlight than one with flash . 
  i do n't think it embraced and extended the web . 
  it is just a plugin after all . 
  it does not extend html or anything . 
  they may have wanted to `` extinguish '' the open web but the strategy did not involve `` embrace and extend '' . 
  i am a fan of silverlight despite the fact that i never worked with the browser plugin ( i 've used the windows phone version but this is quite different and bares no relation to the web ) . 
  what people liked most was that it allowed client side development in the browser with c # instead of javascript . 
  xaml is also arguably better than html since the former was designed for user interfaces and the latter was designed for documents . 
  i am doing some xaml work these days after 5 years of web development and i find it liberating to throw around elements without thinking about semantics or different browser implementations . 
  true but i have easier time finding a job with c # and xaml skills than with pure flash skills . 
  while actionscript skills can relate to javascript skills without serious html knowledge you are not as employable as with c # and xaml .
