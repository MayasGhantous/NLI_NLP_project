  it sounds like a great place to get programming language development experience even if the language was as dead as delphi . 
  not that i support gp 's troll comment but someone on here called dart `` an expensive lars bak retention program '' , gilad is known to have left super important languages ( java ) to work on totally irrelevant but more interesting projects ( newspeak ) . 
  these names are not proof that the language is needed but it may be a great place for programming language designer masturbation . 
  i doubt it would be different . 
  you ca n't sell a js library with another huge standard library bundled into it . 
  good luck with that once they dropped the vm plans !, 
  i hang on here a lot and i often read these articles because they are interesting and i upvote them but in practice i do n't care for memory management in my everyday boring job and the granularity of memory decision i make is `` should i cache these thousand objects that i got from the db '' . 
  so even in proggit it may be the case that the discussions do not represent what people actually do in practice . 
  so what ? 
  typescript and babel/ecmascript 6/7 ate its lunch . 
  i am pretty sure dart can not capture the larger community . 
  of course google can use it internally as much as they want but this is like getting excited about abap . 
  javascript exists outside of web browsers and on more platforms, 
  dart has a standard library that is included when transpiled to js does n't it ? 
  well if i got to choose a language regardless of platform , prior experience and ecosystem dart with its `` you can write types but we wo n't bother reporting errors '' type system wo n't be any of my top choices . 
   we want the static type checking to be optimistic : assume code is valid unless we can be statically sure it is n't . 
  so is angular 2 transpiled to dart , transpiled to js smaller than the original minified angular 2 ? 
  oh so they fixed that . 
  good but still i 'd choose other languages even only on familiarity grounds . 
  so why wo n't i use java or c # wherever i would use dart ? 
  how about typescript ? 
  ( i.e. 
  languages i already know ), 
  why do people downvote this ? 
  it is extremely well written answer with great points for discussion . 
  he mentions naming consistency and better abstractions . 
  where can i read about the dreamhack structure ? 
  why is there a qualifier for an `` open '' dreamhack ? 
  last time i checked at an `` open '' dreamhack you just sign up and show up and get to play . 
  well first of all `` dead '' is a term we in the tech industry throw around lightly . 
  after all nothing is truly dead once it is released and even delphi is used and gets new releases . 
  what i was thinking about was that they dropped the browser vm implementation which was the big promise of dart - something to replace javascript . 
  now as i see it dart does n't have a clear niche and a big goal . 
  i ca n't imagine many new users coming to the ecosystem now . 
  i am pretty sure the larger js community will not embrace dart which will result in unpleasant holes in the dev experience . 
  for example what is the situation with react and dart ( i honestly do n't know i just assume it is not good ), 
  it seems that react-dart lacks jsx which makes it practically useless . 
  this is precisely the type of problem that i am talking about . 
  js interoperability is simply not enough . 
  you need ecosystem compatibility including preprocessors , ides , task runners , etc. 
  practice shows that the lack of those leads to harder development even with superior languages . 
  if this was n't the case js would n't be as strong as it is today infesting even the server . 
  btw i do n't get your argument about compilation . 
  you can use a lot of languages ( on the server ) without recompilation . 
  java has tools to do this ( although not flawless ) , with asp.net 5 c # would do it out of the box and python and ruby do it from the start . 
  wait does n't dart to js work the same way as all other * tojs transpilers ? 
  what is the difference in compilation ? 
  also on the jsx issue is a slippery slope . 
  this means that the react community ( currently the most popular js framework ) ignores dart and they go on to create more and more dart-incompatible things that may be useful with other js libraries other than react . 
  slowly dart becomes cut from the js ecosystem . 
  well being trained by luke does n't exclude her being no one . 
  after all anakin was no one before he got found by the jedi and trained . 
  there are no bad sc2 players . 
  just people who have gm understanding of the game but no time to improve their mechanics . 
  because the idea to convert them to 1 vs 1 is inherently stupid . 
  they should be trying to convert them to 2 vs 2 and 3 vs 3 ( i would add 4 vs 4 if the technology was there but that almost always ends up in severe lag ), 
  ca n't wait for the influx of random players abusing the option to win that tournament money with unfair advantage . 
  archon mode is useless except in the situation where experienced guy wants to teach significantly less experienced guy . 
  archon mode is much more frustrating than team games because the other guy can spend the money , grab your units or something . 
  that 's very wide definition of `` niche '', 
  well dartium is dead so i guess soon you wo n't be able to dart this way ( probably after some new feature is introduced ) . 
  on the other hand why do you care about that compilation step . 
  i guess you do refresh your page anyway after editing the file and the second or two required for compilation is not a big deal . 
  this is precisely why i clicked `` other '' and typed, 
  is n't this like a convention ? 
  java jedi , . net ninja , ruby mage ? 
  so how is the race op on ladder but not in tournaments ? 
  also do 600 games this season qualify me to post comments on / r/starcraft ? 
  obviously the answer to this question depends on how much money you have to spend on fun stuff . 
  for me starcraft ii definitely worth it but if you are in for the campaign i would advise getting sc1/bw ( it is relatively cheap these days ) and playing through it despite the outdated looks and ui . 
  also the story of sc1 is in general worse than ( most of ) reign of chaos but better than the bloated wow universe and even than frozen throne . 
  i would put wol on the level of frozen throne . 
  hots and lotv are slightly worse . 
  i would recommend you buy the sc1/bw and wol and playing through it . 
  then if you like it you can wait for the other parts to become cheaper . 
  if you like warcraft there is no strong reason to dislike sc . 
  the story elements are similar , they are both rtss built by the same people , the ui is similar , the community spills from one to the other . 
  i kind of feel that the only reason to dislike the other game is stubbornness even if you prefer one over the other . 
  the year of linux on the desktop !, 
  the games that got a good amount of money were indie games . 
  linux users love indie but they hate corporations . 
  so blizzard should port to android right ? 
  that would make linux users super happy , 
  that was absurdly stupid idea to be honest and i even think the game speed should be reduced a bit in general . 
  does n't make sense to be in ranked unless you want to have 4 separate ranks . 
  more importantly a new player would n't know the ladder is broken so how can he lose motivation without even trying . 
  like korean flair and foreigner flair ? 
  what would be the foreigner flair ? 
  i hit more inconsistencies now than 5-6 years ago . 
  maybe because people did n't expect me to write everything in crappy js back then so i had a lot less js code and therefore a lot less problems even if the compatibility is better now . 
  ah the good old `` prevent the opponent units from holding position '' hack, 
  still exactly as useless as the op suggested . 
  or maybe i should build my two forges not together but closer to separate nexuses . 
  yes , that 's what i do too but ironically that made chrono harder than it used to be and they were aiming at simplifying macro mechanics . 
  the late casting was a small problem since you just used the energy on more buildings later . 
  the simplification especially on chronoboost is insignificant on the highest level . 
  let alone that when chronoing for a timing like blink you do n't have much else to do anyway . 
  i am not excited about the actual ide either since i think vs is better than idea ( and idea is great ) . 
  however this should put an end to arguments that . net is not cross-platform because you can not develop on other platforms due to the lack of a good ide . 
  i am so glad that they adopted this philosophy .
