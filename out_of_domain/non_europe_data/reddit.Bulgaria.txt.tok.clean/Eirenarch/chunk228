  on the other hand if these are your requirements you need feature toggles anyway so there is no argument for feature branches . 
  i would take your ladder points if i knew you felt this way but in general i want to practice the style i would use in a tournament so i do n't go around threatening people with turtle mech just to get the ladder points, 
  and not crashing . 
  these would be my top reasons for using bool returning try * pattern . 
  there was but it did n't make it in . 
  and ddos , 
  and this is far greater story than the sugar bullshit of starcraft ii, 
  i found that having a mental queue of things to do makes me do them faster . 
  however it is not easy to keep this queue full on purpose for long while actually playing and trying to win . 
  i would agree that some matchups like tvt are better in bw , maybe other matchups too but i just ca n't watch it anymore . 
  no observer ui , bad graphics , the early stages being so slow ... 
  i am too used to everything being pretty and easy to see in sc2 . 
  are you implying that this is somehow a bad thing ? 
  windows for life . net, 
  the battles are ok but the economy build up at the start is frustrating . 
  through the years bw maps grew in size and what was acceptable starting worker count was not longer a good option . 
  same as sc2 . 
  as for the battles i am all in favor of slower battles . 
  i firmly believe that this will promote more micro as players will be able to control more units individually . 
  hell i even suspect that the faster battles in sc2 are one of the reasons we have the deathball styles . 
  you simply do n't have enough time to split . 
  i want ballmer back :(, 
  uhm ... so you expected that open sourcing some dev tech would somehow change the store support ( which used to be fine in windows 8 as op notes ) ? 
  i do develop for windows phone but not for windows 10 . 
  since i do n't expect any money and i do it for fun i do n't want to use the new shitty ui and i am happily writing my new app with the old wp8 .1 hubs , pivots , app bar , etc. 
  so because there is one negative news item `` nothing really changed '' ? 
  yeah they kind of caught up with silverlight although winrt started worse . 
  i kind of like the api know but dislike the controls and the layout and menus they are trying to push . 
  i do n't know why you dislike mvvm i think it is much better than mvc . 
  with mvc you ca n't really have self-contained components and widgets . 
  because i find the android dev tools ( the java language , the platform apis and the ui definition language ) inferior and not fun to work with and because i do n't own a mac and wo n't buy one simply to write ios apps in swift ( swift is fine , i would n't touch objective-c with a stick ) . 
  that being said when i finish my current app which has a good amount of data built in and is supposed to have significant logic ( not yet done ) i might buy a xamarin license and port it to android and ios while using the same business layer . 
  i am pretty sure no one can tell the difference between xamarin and native on android and ios . 
  of course i am not talking about xamarin forms but about the native ui bindings . 
  the backend apis are largely the same ( and extended ) . 
  the windows 10 ones are actually better because there are fewer gaps . 
  however the ui guidelines and even parts of the ui tech have changed . 
  the way you support multiple screen sizes has changed drastically and the controls you are advised to use are completely different . 
  the very core of the ui tech is the same but it is not like you build all the menus , layout managers and panels from scratch . 
  well if i get there i would probably try to do it right . 
  i mean i am not doing it for money anyway . 
  btw i forgot to mention that when i did research for similar apps ios had a great one that had even more things that i intended to build for mine . 
  windows phone had like 3-4 apps that were total crap . 
  android had like 20 apps that were crap , probably a couple that were slightly better than the rest of the windows phone and android ones but still nowhere near what i had imagined and ios actually had . 
  got a lot of respect for the ios ecosystem at that moment . 
  except that ms products under ballmer worked much better not like this beta build known as windows 10 . 
  also he delivered actual financial results in terms of profits . 
  i wonder what will happen when `` new microsoft '' hype wears off . 
  windows 8 was great . 
  windows 10 is a mess . 
  in windows 8 my touch browser had its address bar on the bottom and could save a fucking mp3 file . 
  also i do n't care about the supposed ibm-ification of microsoft . 
  under ballmer i liked using microsoft 's products . 
  under nadella i use them out of inertia or because things simply do n't work on other oss . 
  the only cool thing is `` save -  refresh '' development . 
  everything else is irrelevant for the majority of current asp.net devs . 
  i am not contributing nor forking so why do i care if it is open source ? 
  the design may be clean internally but i am not contributing and do not see it as any more cleaner than 4.6 . 
  modular is cool but i am not sure i care either . 
  i tend to stick to the standard stack mssql , ef , iis , asp.net mvc, 
  i can build you a control that you can use like < asp : input asp-for = ... 
  if history teaches us anything this would stick for a couple of months before they are out of sync again . 
  they did this with . net 4.0, 
  not for current devs . 
  apparently they did n't mind running it on windows . 
  exactly . 
  also note that the current . net has modularity even if not as advanced as the one in core . 
  the windows server thing was indeed bullshit . 
  for desktop devices windows 8 is better than windows 10 as it is far more stable and has far better browser . 
  windows 10 does not bring anything for desktop computers it just brings beta software and totally destroys the experience on touch devices . 
  it is a regress no matter how you look at it . 
  now to be honest they are slowly fixing it . 
  edge can now download mp3s and the mail app works but they have like 1 more year before they reach windows 8 quality and this is only if they do n't break more things . 
  i am talking as a user but as i already said if you want to talk about sales ballmer wins there too . 
  the only thing nadella does is generate good p.r. 
  and pump the share price based on good faith which in my opinion is not going to last . 
  first of all i do n't see why open source is a requirement for running on alternative platforms . 
  is there a ban on non-open source on mac or something ? 
  second i still do n't see why i should care as in `` how does it improve my life '' that it runs on other platforms . 
  i can see someone who did not use asp.net because it did not run on linux starting to use it now but for current devs it makes no difference . 
  we declared that we did n't care about alternative platforms by using it before it ran on alternative platforms . 
  of course the 5 users of asp.net on mono are an exception . 
  it was bad wording to say i do n't care . 
  i do care and follow the things they are doing with asp.net . 
  i am just not happy ( not sad either ) about it and i do n't see how it improves my life . 
  as for making it into linux i doubt asp.net will be included in any distributions no matter how open source they make it . 
  also i do not expect many if any linux or mac devs using asp.net . 
  the only strategic value for ms i see is when a company using linux environment needs some software a . net shop can now make a reasonable bid and compete with the java companies . 
  so basically you are arguing that there is no way to escape eee . 
  i guess ms is as good as any then . 
  the browser that made the web popular and gave us ajax ( ok i think in reality it was ie 5.5 or something ), 
  so what is the way to escape eee ? 
  not taking anything from a company named microsoft ? 
  in this case it is by definition behind a layer of abstraction called javascript language with node.js api . 
  it is not like you can write java ( which is great at compatibility ) with node.js . 
  downvoted for clickbait title . 
  the author knows perfectly well that these are just suggestions that the team is exploring in very early stages . 
  so with js you will always be a victim of eee so you can just as well go with ms tech . 
  the only context in which chakra ( a js engine ) can be discussed is js . 
  that 's a clickbait title .
