  no , quite different . 
  it has been in active development since then ( or at least it was when i last asked 3 years ago ) . 
  i worked on the classes that represent the main objects in the database ( like product and such ) . 
  despite all the changes through the years there must be some of my code left in the heart of this system , 
  are these all of linkedin users ? 
  does n't this require 15 % . 
  still seems far fetched . 
  i look forward to paying thousands of dollars for skins and such . 
  14 gas , 14 pool into speed remove the drones from gas when you have a 100 gas and expand while killing the opponent with your speedlings, 
  i still ca n't shake off the feeling that the whole core thing is going to be python 2 vs python 3 style train wreck . 
  i am willing to bet that we will see some form of wcf ( the soap part maybe not tcp binding ) as part of . net core . 
  wcf is just fine and soap is not an abomination no matter what the hipsters say . 
  . net naming has always been confusing but here is the rule of thumb - core is the new thing that is super fast and can work on linux and mac but ca n't do half the things a real world project needs . 
  of course the latter is going to change but the process will probably take years . 
  no it wo n't because the api copyright applies on a package level . 
  if you implement an interface you will be fine . 
  statements like this ( and larry page 's ) make me root for oracle . 
  your assembly code is borderline useless without the api and the api is super important for the development experience of whoever uses your api . 
  in fact on more than one occasion i have chosen a slower library with a better api over a faster library ( i.e. 
  superior implementation ) with worse api because it matters that much . 
  while . net core does not impose the same overhead on specific kind of libraries like say a machine learning library or a web api client it does impose pretty much the same or even worse overhead on everything web related . 
  web forms is simply gone and any real world project with asp.net mvc and even web api will need full-on porting . 
  the desktop stuff does not exist . 
  this is what gives me hope that it may all work . 
  still the amount of code out there that uses the old stack is insane and we will have to work on it for quite some time . 
  people who maintain libraries because they use them in their project wo n't have any incentive to port them to core because their projects are not on core . 
  the standard dark matter developer will not learn about core because his job does n't require it . 
  want to hire people ? 
  sorry you ca n't use core , everyone has experience with the full framework . 
  what is the difference in license ? 
  does it give a license for the apis specifically ? 
  so android will need to make their code gpl but are we sure that gpl grants a license on the apis ? 
  do people on ladder tell you to get cancer ? 
  if yes what do you respond ? 
  someone should test with typescript vs javascript or even better typescript vs babel-transpiled projects since the languages and the communities are otherwise equal . 
  blizzard did more about archon mode than they ever did for 2 vs 2 and 3 vs 3 . 
  tournaments , showmatches , gm league . 
  still it is dead because it is inferior to 2 vs 2 . 
  it was inferior in brood war ( where it was called team melee ) and it is inferior in sc2 . 
  of course i do n't . 
  so do they say anything after that ? 
  obviously this is not only my opinion . 
  consider your own experience . 
  you have found that more people are playing 2vs2 evident by the fact that you can easily queue it . 
  note that this is the case despite the fact that archon has several artificial advantages - being a novelty ( for those who do not remember team melee ) , being promoted by blizzard in the lotv push , having gm league , having actual tournaments for real money . 
  still people ignore it and go on playing 2vs2 . 
  now obviously what is fun is a personal thing and i have no doubt that for some people archon is the most fun thing ever . 
  after all i know this guy who claims that dune 2 is the best rts ever and sc is just a cheap copy that is not as fun . 
  the ui layer is always the most painful . 
  i will move my business logic but someone has to rewrite all the controllers and views or web forms . 
  also it seems like there is a strong lack of incentive to move forward . 
  as all devs i was thinking about upgrading various projects because we like to be on the latest tech but i really could not justify the work . 
  what do i really get from core even if i could port ? 
  works on linux ? 
  i do n't care , the . net community has self selected for people who do n't care about linux . 
  if i cared i would n't have a . net project to begin with . 
  more performance ? 
  great but i doubt this will matter that much when i throw in my fat real world queries . 
  great for those tests that return a line of text but in the real world that 's rarely the bottleneck . 
  the only thing that i really want from core is the save/refresh dev cycle but i ca n't justify an upgrade with that . 
  yeah , because they have nothing better to do than rewrite the framework they wrote for 3 years and break all their clients ... 
  i find it hard to believe that the ts version will produce precisely the same api if generated from dart . 
  because automatic tools usually expect to be used in one direction . 
  in this instance we have ts  dart  ts i.e. 
  to separate tools or even human code in the middle . 
  preserving compatibility will require among other things compatibility of the type systems, 
  but chances are angular 2 is not written in this way . 
  how does that justify asp.net core over asp.net full ? 
  to be honest the first retirement was from pro gaming and the second from streaming . 
  my biggest problem with coop . 
  what is even worse is that i do n't play with random people . 
  i play with people who also want to play on faster . 
  because some people do not care about competitive fast-paced play . 
  they just want to play the game with beer in one hand and the mouse in the other . 
  they want the game to be slow . 
  now why there is no coop option to select the speed is beyond me . 
  you are assuming that people who do not want to transition to ladder do not exist . 
  i think he unretired from pro-gaming . 
  he was never one of these `` no passion '' `` the game is not fun anymore '' retirees . 
  his reasons were always money ( i.e. 
  no team that would pay him the desired salary ) . 
  if he found a team to pay him what he wants it makes perfect sense to unretire . 
  at one point he mentioned health issues but never elaborated . 
  it transpiles to human readable and usable dart ? 
  strange ... 
  are the type systems compatibile ? 
  hmm then i guess they could port it to dart . 
  on the other hand if they did n't start with dart maybe the same reasons apply now . 
  there is obvious harm . 
  you may want to play slowly because you are a noob . 
  but dart did have a compiler targeting js from the start . 
  what 's the big difference with the new one ? 
  sorry activists , that 's not how the world works . 
  if you are a big enough market companies will serve your needs even if the laws are stupid . 
  this is possible but i doubt it will affect american laws . 
  uhm ... what about their database product ? 
  they can easily survive off of it . 
  if this proves to be true companies will just include license for the apis in whatever licenses they are using . 
  much easier than changing laws and gives you a competitive advantage for being the first one to notice . 
  also i do n't get the argument that companies will not buy the products of companies that file lawsuit against their competitors .
