  seems very limited . 
  the second sentence says it is not turing complete . 
  this kind of use case is simply not possible with bitcoin 's scripts . 
  that 's like unplugging your internet so you do n't get hacked . 
  i do n't know . 
  have n't dug through the code and i do n't know how complex it is . 
  on the ethereum forums there are calls for producing formal proofs for contracts . 
  note that a fifth of the ecosystem is only drained because it was owned by the same address . 
  some people claim that it was not properly audited because they wanted to be first to market . 
  i do n't think so . 
  the flaw is that people put $ 200 million in a single contract . 
  if this was a $ 200 contract we would n't be discussing it . 
  it is able to handle that . 
  what it is not able to handle is a contract worth 1/5 of the cryptocurrency . 
  i am sure there are bad contracts in the real world for over $ 200m but somebody swallows the loss and the world keeps on spinning . 
  i am in for the political statement ... and a tesla . 
  definitely buying like the first kind . 
  content-free article . 
  so which of these were not available in 2012 ? 
  if they were available how has the investment paid off since then ? 
  how to make a single threaded server . 
  indeed , why do you need to import basic functionality ? 
  visual studio imports it by default when you create a class . 
  i do n't see how the things about privacy can possibly be worse for microsoft . 
  microsoft simply does not have the usage share of data-driven services to be google level of evil . 
  for example if bing was censoring search suggestions about clinton nobody would notice . 
  the instrumentation is much less important compared to what i search on google and what is in my e-mail and where i go with my phone . 
  unless of course you somehow send the info on what i search on google and what i look at in my e-mail to your servers but i somehow doubt that . 
  now for the record i still use a windows phone and outlook.com but i was pretending to be in the situation of the regular user . 
  on the other hand i agree that the things under the indian are much worse than they were under ballmer . 
  for some reason the markets disagree :(, 
  well except that ms ca n't get the data because their products that can gather the important data ( location , search , e-mail ) have much fewer users than google 's . 
  come back , ballmer !, 
  all is forgiven . 
  well as i said you need users first . 
  if everyone suddenly bought windows phones they would have that data but for some reason they do not want to make phones . 
  you can put all the snooping in the world in your software but if you are depending on laptops with gps , phones from competitors and apps that people dislike using then you wo n't get much data . 
  if you see ms as pain in the ass you want them to fail . 
  they folded just when they cracked the market and reached 10 % in places like russia , italy and germany . 
  can someone explain why the btc community seems so negative towards eth . 
  i only own btc and no eth but it makes me sad that eth failed and i hope they can bounce back . 
  i find the idea of smart contracts exciting and i do hope that a couple of alternative cryptocurrencies can coexist and compete . 
  on top of all unlike most other cryptocurrencies ethereum does have a distinct feature . 
  so why would a btc believer want eth to fail ? 
  `` for every system s there exists a language l such that l is a better choice for implementing s than go '' - eirenarch 's axiom of go development . 
  i wish i could blame balance . 
  then i would just play the strongest race . 
  rust is probably better for ravendb today but rust was announced in 2010 and it seems that at that point development of ravendb had already started ( i ca n't find info on ravendb history but the company was founded in 2009 ), 
  edit : seems like ravendb was released in 2010 . 
  yes . 
  i can not buy that tesla with my 1 btc unless the price reaches ~ $ 50k, 
  non-nullable reference types is a serious backward compatibility problem . 
  i bought bitcoin as a political statement . 
  fuck the government and their armed theft they call taxes !, 
  it is even funnier if you imagine that the attacker is the actual guy from the video . 
  ~ 50 , with moustache and missing teeth . 
  the most interesting part for me is what options will they provide for legacy code for non-nullable reference types . 
  it seems like you can write your own with method . 
  i know that records are super useful and i do want to have them but i think the pascalcase argument names will drive me crazy . 
  i was so mad at the proposed primary constructors feature ( that was borderline useless ) and so happy that they dropped it but it is very hard to argue against records because of convention violation . 
  as far as i understand this is about the style tools . 
  this decision on a compiler level is more damaging . 
  - legacy codebases throw a million warnings and the nullability tracking is turned off forever in these codebases . 
  - best practices and conventions are divided on pre c # 7 and post c # 7, 
  - training materials and books accumulated in the past 15 years are obsolete and outright damaging . 
  the default implementation is good for most cases if you want more advanced implementation ( like / u/theanimus suggested ) you implement your own method . 
  you are comparing apples and oranges . 
  by introducing tuples you do n't make the old code generate warnings all over the place . 
  sadly i do n't see anything more optimal . 
  the suggestion to declare non-nullable types as string !, 
  works but the syntax is just too heavy . 
  no good way out . 
  maybe i should tweet facebook which leaves the tab as not responding and because edge is broken i can not switch to more than one tab . 
  or maybe when i try to use touch to tap in a textbox in facebook and then type with a keyboard and i am typing and using facebook keyboard shortcuts in the same time ( something that worked fine in ie ) . 
  sometimes i get the feeling that i am the only one using edge as a user and not testing features . 
  it seems like it is doing something since after a couple of seconds it works again . 
  what i find strange is that edge is a multiprocess browser but somehow the page can freeze the ui . 
  they did something about it and if a tab is frozen you can switch to another tab but you ca n't switch anymore until the first tab unfreezes . 
  it is so weird . 
  what are his grades ? 
  your statement is factually wrong - http://www.esportsearnings.com/players/3818-neeb-alex-sunderhaft, 
  brexit supporters are not homogenous group . 
  i am pretty sure there are libertarian reasons for brexit . 
  for example the eu does not remove national regulations it just adds more regulations on top . 
  as a libertarian do you want a lot regulation or a lot regulations + more regulations on top of them . 
  he is just now starting full-time progaming , 
  i do n't get the idea of this post . 
  c # vs f # is not really a competition at least not in the sense that c # vs java is a competition . 
  if one language wins the other wins too . 
  nightend is the best . 
  i am laughing out loud . 
  his voice is so funny but in the same time he somehow makes fun of other people successfully . 
  he is like a cartoon character . 
  sure but if the . net languages are strong chances are that both c # and f # will get more projects in absolute numbers even if they still need to split 100 % of . net projects . 
  it teaches us to never bet against anders ( hallowed be his name ), 
  from this day forth there is an open source , multiplatform . net framework with official support from microsoft . 
  so what are the people who type `` m$ '' going to complain about now ? 
  edit : i mean what are they going to complain about . net , it is still easy to complain about microsoft in the light of windows 10, 
  yeah but now you can run . net on linux so this does n't count as an argument against . net, 
  but how will they attack . net ,
