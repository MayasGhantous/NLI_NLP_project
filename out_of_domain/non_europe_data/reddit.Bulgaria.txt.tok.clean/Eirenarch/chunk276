  i would prefer : : of course most of all i would prefer . 
  of course , who 's to blame that . 
  means something else in this specific language ? 
  in fact the meaning of . 
  is another example of php sucking by going against the rules devs have internalized from most other languages out there including the mandatory language for php devs - javascript . 
  even then i 'll take : : over /, 
  so what do they say when you point the contradiction to them ? 
  great success !, 
  does this work in php and does anyone actually use it ? 
  i mean the up one level thing . 
  hmm but who will take the guns ? 
  i mean if i am a criminal and get a gun and not even the police have a gun who will take my gun ? 
  so the thing that would supposedly be awesome ( i am not sure that it will ) is not even in there . 
  no problem but then the liberals will want to ban drones and gas ( or explosives ) . 
  i just want to have access to the same tools that the government does . 
  but in the end it comes to implementing things with a tool and the one who has more experience with the tool has an advantage . 
  even if you hire in a tool-neutral way what happens in the 3 months test period ? 
  so special squads can be trusted but non-special cops cant ? 
  lets make all police that kind of honest and lawful police . 
  super police for all !, 
  please explain how js is more terrible on the server than php . 
  what is more with typescript you get js on the server that has better type system than php and has other nice things like async/await, 
   everyone expects these values to be scoped inside the loop, 
  everyone who does n't know what a closure is . 
  and by `` most developed nations '' you mean the uk ? 
  what are other countries with unarmed police . 
  germany and france policemen are armed i think . 
  but why do we need the other cops then ? 
  why not make every cop one of these cops . 
  and the standard library in php is not a joke ? 
  come on !, 
  it is working if you define your goals as `` less people shot '' but i am pretty sure you are not very likely to get shot in north korea either . 
  ( except by an anti-aircraft gun but this is different ), 
  again , why have any other kind of cop then ? 
  probably the same . 
  source maps map lines in code but they do not map variable names ( it seems , i have not checked ) . 
  so the variable is probably something like this.foo rather than foo . 
  i am pretty sure if you check the equivalent js you will see the name immediately and then you can put it in a watch or something . 
  of course you can always debug the resulting js . 
  it is only a problem to debug if you compile to downlevel javascript but then you have the same problem if you use babel anyway . 
  if you keep your typescript on the same level as the target js and only use types and simpler features like let/const then it is as if you wrote the js by hand . 
  i use statically typed languages which obviously requires less discipline . 
  ( do i have to explain why ? ) . 
  also languages with strong typing ( strong not static ) usually require less discipline therefore python requires less discipline than php . 
  also languages with less broken standard library ( so no need to introduce mysql_real_escape_string and tell the people not to use the old version pretty please ) require less experience . 
  you can also take javascript 's strict mode as an example of a language that is pretty similar to javascript but requires less discipline . 
  the `` shitty wrappers '' are in my opinion of quite high quality especially compared to php . 
  things like lodash , rx and immutable.js are pretty much on the top of the list when it comes to library quality . 
  yes , but for loops and foreach loops are pretty different . 
  it does n't make sense for `` for '' to work any other way ( this is why they did not change it in c # 5 ) but for foreach it is debatable how it should work . 
  yeah these are the types of problems with debugging and they are annoying but any transpiler will result in the same issues even if you use babel to transpile the future standard . 
  the good thing about typescript is that you get the most human-readable output of any transpiler ( as i said if you only use features from the same level ecmascript as the one you target it is pretty much what you would write by hand ), 
  wikipedia disagrees with you on the claim that php is strongly typed although the term is of course not well-defined . 
  javascript does provide static typing option it is called typescript and is literally that - type annotations and type checker for javascript . 
  of course i do n't understand why anyone prefers optional typing when they can get static typing ( on the server ) but this is besides the point . 
  so you are saying that php projects only use namespaced libraries with proper conventions now ? 
  i find this hard to believe . 
  the leftpad fiasco is in fact a tragedy but there 's been php failures too . 
  i do n't feel like compiling a proper survey where each fiasco is assigned weight and then the result are normalized by the size of the community which of course must be determined using github projects and stack overflow questions . 
  only then will we have reasonable data on where the bad quality of libraries causes more problems . 
  i on the other hand am on the opinion that people not getting shot should not be the highest goal . 
  i 'd rather take more freedom and the risk of being shot than more government and restriction to eliminate the already small risk of getting shot on the street . 
  i am from bulgaria . 
  we are disarmed ( not as severely as the uk since it is possible to buy a gun legally but requires a lot of permissions from the police and so on ) , with armed police and quite safe from murder ( although there are for example a lot of burglaries ) . 
  i agree that in the us it is damn-near impossible to disarm the population even if they gut the 2nd amendment . 
  how do you take all those guns people already own ? 
  so what would that be ? 
  chasing kids around to find a marijuana cigarette and ensuring that parents of 10 year olds who let them go to school on their own are punished ? 
  in c # it works exactly the same . 
  so based on your definition of when you want static typing and when you want dynamic typing you should c # is the language you should prefer . 
  its dynamic pseudotype is most often used to read and send json . 
  it is also nominal and has better performance than php . 
  your last point just adds one more bad thing about php . 
  apparently they are quite happy to break backward compatibility . 
  compare that to java , c # and javascript where they never broke compatibility for practical purposes ( java literally never , c # broke some very minor things you are not likely to even notice , and js only breaks for security issues and via strict mode which is not actually breaking anything ), 
  i doubt it is on par . 
  if something is removed as you mentioned it is not on par . 
  c # never removed anything . 
  i actually know of only two breaking changes - in they switched the default context from checked to unchecked and they changes how closures operate when capturing foreach variable . 
  by contrast php 5 changed ... everything . 
  . net never removed an api as far as i know . 
  profiles like silverlight , the phone or winrt include a subset of the full framework but the full framework itself contains all apis from v1 . 
  i do n't know about your question . 
  maybe i like the java way the most with the idea that the language will be replaced fully by a more capable one ( say kotlin ) at some point rather than half-assed improvements via breaking changes every 5 years or so . 
  well if you are looking for empirical examples i 'd say that java is doing much better than php ( i.e. 
  being much more popular and more money depend on it ) . 
  c++ has pretty much the same strategy . 
  depends on how you count . 
  certainly not 80 % of source code written , not 80 % of the dollar value behind the web and not 80 % of the developers who develop for a web client . 
  i think java will beat those phpbb forums and wordpress sites in any of these categories . 
  so all those wordpress blogs with 3 posts are counted . 
  got it . 
  also coldfusion is placed 5th ( presumably above python , perl , node.js , go ) which makes me doubt the whole methodology . 
  blog with a spa technology ( i.e. 
  bad seo ) . 
  great idea !, 
  and yes i know that some day angular 2 will get isomorphic rendering . 
  how many nodes and hash power needed to block segwit ? 
  i am willing to bet you wo n't get far on your seo ranking with this strategy . 
  also how does this angular 2 link of yours show up when shared on facebook ?
