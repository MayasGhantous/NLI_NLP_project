   the few we have are stars because they can take games off koreans and not because blizzard/tournament organizers/players themselves did a good job at marketing . 
  this !, 
  sometimes there are players that at one point beat some koreans and they keep their celebrity status after their prime but if a player never managed to beat koreans the community largely does n't care about him . 
  so just let the koreans play everywhere . 
  how can i root for both of them ? 
  also it removes the drama because one of them will surely win . 
  instead of being more excited i am just bored . 
  well , that 's not new , is it ? 
  when he announced that his cancer is incurable he said that prognosis is 2 years , outliers can reach 10 and he intends to be an outlier . 
  at least the plan seems to work for now . 
  i am impressed . 
  this thing works with not-entirely trivial code - http://deck.net/5330d5c66fdf3defba15c24bbac43745, 
  while i wo n't use it for development of apps because of the fact that if it is abandoned i am left in the cold and the lack of know-how it can be very useful if you want to share small amount of code between the client and the server ( say some super special validation logic and your dtos ) or if you really need a particular c # library in that js code . 
  it can also be used in node or mobile app . 
  in a system that has both . net and node part this can allow sharing of code . 
  i am still skeptical about using it as the main way to write js but there are a lot of cases where you need some sharing . 
  how big is the runtime ? 
  i understand nothing from this post but as a devoted starcraft fan i must upvote, 
  oh ... this article again . 
  1 year later so still the best place to ask programming questions . 
  so what if it is downvoted . 
  the downvote is pretty much symbolic action on so you do n't even lose significant amount of reputation . 
  yeah , that 's true but i do n't have eric lippert in my skype contact list so i ask him via stack overflow . 
  this would n't be a problem if closing a question was n't so easy while reopening is very hard . 
  everyone watches the main feed and votes to close and almost no one checks if the question should be reopened and watches the reopen queue . 
  they should make a reopen require only 2 or 3 votes . 
  i sometimes browse the reopen queue just to fight the dumb monkeys . 
  this is actually a post that has come up before . 
  it is a year old . 
  it seems like you were downvoted because the question is not suitable for so ( it is for technical questions only ) . 
  your question should go to programmers.stackexchange.com, 
  it is not `` yet another '' it is a repost of one of the 3 articles about that was discussed a year ago , 
  i once organized a reopen brigade for a question that a coworker of mine asked . 
  i have also seen a bit of reopening but this only happens on the reopen queue if you expect that nominating a question for reopening alone would do it you are out of luck . 
  edit : spelling, 
  well i only organized a reopen brigade because it was a coworker  we had 2 genuine reopen votes though only 3 were from the brigade ( mine included ), 
  yes this is a significant problem . 
  please post on meta and link here so i can upvote , 
   the idea is that general article quality will suffer if there are too many articles, 
  [ citation needed ], 
  i have noticed that the more notable the topic the higher the quality . 
  i think the important stuff is automatically high quality and i do n't see how more articles can damage the important ones . 
  i do n't understand why the articles need to be maintained . 
  the maintainers of wikipedia are not some stuffers they are the people who read wikipedia . 
  people who have interest in the articles will maintain them . 
  if nobody reads them then who cares if they are maintained properly ? 
  but lack of scrutiny means lack of readers . 
  if there are readers then they will scrutinize the articles . 
  and does a wikipedia article without readers make a noise ? 
  they should at least write new articles on the topic if they want to post it on reddit, 
  first of all wikipedia 's quality of a given article is directly proportional to the number of readers of that article . 
  the fact that most people do n't see the low quality articles is because they do not look for niche topics . 
  the trust in wikipedia will not change because now and in the hypothetical case where they allow articles on unimportant subjects people will still see what they search for and nothing more . 
  note that i do not suggest that they lower the criteria for article formatting or language . 
  they can still keep these requirements high . 
  i only dispute the notability requirement . 
  come on we had to fight two years to get an article on the nim programming language . 
  i was super frustrated that i ca n't find the article and thought i was spelling it wrong or something . 
  but he goal is not to have new contributors get reputation . 
  the goal is to have quality content . 
  btw it is not that hard for a new contributor to get reputation . 
  go answer questions about angular 2 , asp.net core and rust and see your reputation grow . 
  also there is the new documentation thing . 
  be the first to contribute to core topics and see the reputation flow . 
  that 's outright fud, 
  i am not aware of a way to mark an answer as a duplicate . 
  he is talking about an answer not a question . 
  exactly . 
  this not only happens but sometimes there is a newer answer that beats the accepted answer on upvotes . 
  i find these all the time . 
  while this usage is common it is pure bullshit . 
  there is no specific skill and no specific boundary where you pass from `` hack together this mostly-working website for cheap '' into `` design a robust and stable system and see it through to production '' . 
  this term is just word inflation used by some people to buff their cv . 
  and do n't get me started on software engineer and software architect . 
  are we going to still all professions ? 
  how about software general practitioner doctor instead of full stack developer ? 
  the notability requirement does not mean low quality is allowed . 
  your article about your friend steve will be rejected based on being opinion based and lacking sources . 
  also people do n't search for low-quality articles . 
  this is like saying people will stop using the web because there are low-quality websites . 
  i do n't think the demand for mostly working website for cheap is that high anyway . 
  very few people with the help of cms systems like drupal and wordpress cover this market . 
  everyone else at least thinks he needs `` a robust and stable system and see it through to production '', 
  core was about cross-platform support , increased modularity , self-contained deployment and getting rid of a bunch of legacy tech which allowed them to increase performance . 
  if they went all in on core i 'd be looking for a job with kotlin right now . 
  supporting existing tech is super important, 
  this is not generally true . 
  i can see why oss reduced the risk all else equal but it does n't mean that any oss project is less risky than any non-oss project . 
  well , . net core is also open source so i guess no problem there , 
  be silent , noob !, 
  mel is the greatest !, 
  i have never seen a react project that was not all out react . 
  so they suffered a lot because they did n't embrace typescript . 
  surrender to typescript !, 
  resistance is futile . 
  if you watch south park it is hard to believe they do n't at least lean libertarian . 
  they hate censorship and political correctness so much so they ca n't possibly be liberal and it takes a lot of imagination to see south park as a show about conservative values . 
  i do n't get why you are downvoted either even if i disagree with you . 
  btw you forget how old the show is . 
  even if only people under 30 became fans some of them will be in their late 40s now,
