  it is easy to be happy with a full js stack if you have never used a quality language or if you simply do n't care about the quality of languages . 
  sadly i care and i am spoiled forever . 
  could it be that people who have trouble getting a job to their requirements after certain age are the people who have not gone job hunting for a decade ? 
  would age matter if the person switched jobs every 2 years and was familiar with the process and better connected ? 
  this !, 
  the author does not mention this point which makes me doubt his expertize on the topic . 
  everyone knows that you should fizzbuzz the candidates so if you are fizzbuzzed you should not get offended . 
  depends . 
  do i need him for a year ? 
  in any case i think 4-5 years at a workplace is fine . 
  you can ask them to write something more appropriate but if you are interviewing for an architect position like the author suggested you ca n't effectively ask them to build a full system . 
  compared to a full system architecture any short interview coding question seems like fizzbuzz, 
  the article does not say he got literal fizzbuzz question and most people introduce small modifications even when they use fizzbuzz to avoid memorizing . 
  you are missing the point of fizzbuzz . 
  it is not to judge the level of skill of the candidate . 
  the goal of fizzbuzz is to find out if the candidate can write code at all . 
  any code . 
  no i am not and nobody advocated interviewing only on the basis of fizzbuzz . 
  that would be the case if the interview question was `` write fizzbuzz '' but it is not . 
  you would know that if you had read jeff atwood 's blogpost . 
  whatever you choose someone will be offended . 
  it is always a fizzbuzz to someone qualified enough . 
  for me the best things about the game were the level design and the story . 
  the gameplay itself was competent but without the level design it would n't be anything special . 
  and the story is great . 
  as a hardcore libertarian i rooted for andrew ryan all the way in all three games ( later games reveal more of his story ), 
  i remember implementing this for the coursera algorithms course . 
  my implementation worked and did pass the tests but took seconds to resize . 
  it passed the required timing tests for the course but it was unusable for real-time resizing like the one they have in apps like photoshop . 
  i wonder what optimizations they have but i have forgotten the algorithm now that there are good open source implementations i can compare against . 
  sadly this was years ago and it will take me significant amount of time to get up to speed with the matter . 
  https://www.coursera.org/learn/algorithms-part2 - this one . 
  might have been part 1 but i think it was grouped with the more advanced algorithms . 
  the old cobol hackers probably make good money writing cobol to this day . 
  oh come on !, 
  link the stupid app , we 're all curious !, 
  it used to be . 
  then they decided they needed numbers and they let you publish any crap you want right now . 
  this is true but devs are fleeing faster than projects are retired . 
  i am not advocating learning cobol now . 
  i am saying that it was a great career choice and sticking to it was not bad either, 
  alternatively he may have very small bitcoin position currently, 
  i wonder if americans are just insane or this is what happens in big companies . 
  the biggest company i worked for had a headcount of 100 and this all seems insane to me . 
  i have n't even heard stories like this for companies here ( bulgaria ) . 
  i have witnessed the reverse - a woman seducing manager/boss and getting power in the company but a boss demanding sex from a subordinate is so strange to me . 
  i am into the us vs them mentality . 
  i do n't see how this will make me abandon libertarianism . 
  the alt-right are kind of allies against the greater enemy . 
  can we at least throw them near the coast of cuba ? 
  pretty please !, 
  i do n't even understand the concept of left libertarians . 
  the left wants to take part of your private property and redistribute it . 
  on the other hand there are authoritarians who think that certain authority ( say an absolute monarch or a pinochet ) can ensure property rights and liberty for the subjects . 
  i still could n't understand what left libertarian is . 
  geolibertarianism seems much more clear - common ownership of land and natural resources . 
  still do n't see how this contradicts with say sympathizing with pinochet who did n't even privatize the copper industry . 
  uber 's p.r. 
  will have to work overtime this week . 
  the problem with this is that the way i am holding it i now feel the edge between the plastic and where the rubber used to be :(, 
  fuck ... it seems like there is no silver bullet and we have to think when to use exceptions and when to use result types . 
  i hate thinking . 
  it makes my head hurt . 
  to be honest my comment is semi-serious . 
  i was kind of hoping that when i learn f # i will be able to go exception-free . 
  obviously just like c # you should choose carefully . 
  reminds me of the time google decided to demote pages with the word nigga and 4chan had the genius idea to use `` google '' instead of `` nigga '' to beat censorship . 
  the result was hilarious . 
  i thought gp was ironic comment but what do i know ... 
  those noobs even spell hodl wrong !, 
  typescript is a superset of javascript therefore it is impossible to learn typescript without learning javascript in the process . 
  on the other hand a reasonable argument can be made that learning javascript first and then learning the ts features that are not part of js is the correct path to learning ts . 
  typescript does n't stop you from abusing the dynamic nature of javascript . 
  types are optional in typescript you know . 
  even then you still benefit from flow-based typing which will catch sure errors and tooling support based on the type definitions of different libraries that do not abuse js the way you do . 
  i mean if a library accepts string it accepts string , period . 
  it does n't matter how you want to abuse it . 
  yeah , i was there when the comment `` lets make this a meme '' was added to the thread . 
  ah the good old times . 
  i member, 
  from all the bullshit in the article and the comments my favorite part is that he calls bitcoin `` web-based '' . 
  this is one of these nice touches that if this was a movie one would think `` this is so great , such attention to detail '' . 
  in this case the author made sure to prove himself as completely incompetent by failing to distinguish the internet and the web . 
  as if we needed analysis to know that . 
  one headhunter that added me has more endorsements for c # because she once took a 2 months course or something than me with 10 years of experience with c # . 
  also she is prettier than me . 
  i immediately went to linkedin but i can not find a way to endorse someone for something he has not listed . 
  wrote a recommendation instead, 
  i always assumed that the idea of message queues was to achieve elasticity and be able to have several consumers that process ( different ) messages in parallel . 
  the only time i used a message queue it was to achieve this . 
  am i doing it wrong ? 
  if i was an american i 'd probably vote gary but between trump and hillary the libertarian choice is obviously trump . 
  crash sjws , make leftist cry , promise to lower taxes ( who knows maybe this would happen ) , abolished obamacare , signed a law to require removing regulations if new regulations are to be introduced and so on . 
  the only think more libertarian in hillary is that she probably would n't go after drugs so hard and would not step up on protectionism . 
  between lowering taxes + protectionism and increasing taxes and free trade abroad i 'd go for the former . 
  i have noticed that recently / r/bitcoin does not censor that much . 
  it seems like they just ca n't manage to ban everyone and have given up deleting comments on mentioning bu alone . 
  my favorite interview question for experienced people is `` what is the hardest technical challenge you have solved or hardest bug you have debugged . 
  sadly i do n't get to interview experienced people only noobs :(, 
  here is what my answer would be - http://sietch.net/viewnewsitem.aspx?newsitemid=164,
