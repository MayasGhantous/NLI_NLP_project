  the title on / r/programming is quite a bit different - `` breaking : wikileaks reveals cia is using malware on ios and android devices , targets windows , linux , routers and even smart tvs '' . 
  too lazy to read the full article and learn if windows is any worse than the rest, 
  i am using windows phone . 
  they do n't even know i exist !, 
  security through obscurity gets a bad rap but it works . 
  i have 19 downloads of the app i just released . 
  there must be at least 19 of us . 
  thanks . 
  you can download it here - https://www.microsoft.com/en-us/store/p/sc2-master/9n2cjmrsnd8l, 
  i wonder what size teams they are aiming for for their competitive play, 
  my problem with doom 's multiplayer is not the speed . 
  it is all the other crap they put in ( runes , team objectives , mutating into a demon , etc ), 
  yeah , turns out there are no separate permissions for downloading stuff and `` acting as a server '' . 
  probably an nsa requirement, 
  well this does not answer the question about qc , 
  the article title says `` high level languages '' . 
  why are we talking about this c with gc called go ? 
  is this patch live ? 
  i have finished ( released ) all my side projects . 
  i just released an app 5 years after i started it but i fucking finished it and i am really proud of it . 
  no problem i will buy bigger hard drive . 
  can someone explain what 's the use for the var pattern ? 
  i often drink when i ladder and almost always drink when playing team with friends ( lower leagues ) because otherwise i get angry easier when they fail . 
  but we already have a variable of that type . 
  i was pretty disappointed to find that you ca n't decompose tuples with pattern matching but maybe it is a preparation for the additional pattern matching features coming in the future, 
  it seems like the article says it is a placeholder pattern to enable the use of when ? 
  redditor for 21 days this is why he does n't know how to spell . 
  i am very happy they are on the pattern matching path ( my second favorite f # feature after automatic generalization a.k.a. 
  hindley -- milner type inference ) but the current version of pattern matching is borderline useless . 
  i mean that i already have a variable that i put into the switch . 
  why would i need another one that is literally the same ? 
  the type pattern is perfectly clear . 
  the question is what is the use of the var pattern . 
  i do n't think this is true . 
  with the var pattern you get the same static type as the original variable . 
  it is not possible for the compiler to invent another type . 
  1 is 2 evaluates to false in c # 7 and was illegal before c # 7, 
  also, 
  case var i :, 
  i do n't think it is `` the most useful parts '' . 
  it is more `` parts that are required by other parts '', 
  it should be noted that our apps ( admittedly casual games ) have more downloads on mobile than on desktop . 
  i hope ms realizes that without a phone their uwp strategy is dead . 
  even after they starved the phone it is still more alive than the desktop uwp, 
  i used to watch [ keitlyn 's stream ] ( https://www.twitch.tv/kaitlyn ) but it seems she is not playing much sc2 these days . 
  was a legit player back then ( gm ) and did explain strategies while playing . 
  yeah . 
  everyone but their indian boss ... 
  this guy is turning me into a racist :(, 
  uhm ... no . 
  she got gm on stream and regularly streamed from her gm account maintaining reasonable win/loss ratio . 
  i do n't like centralization but hard drive space is very cheap so i will buy enough decentralization thank you . 
  core failed . 
  the blocks are full , transactions are delayed , fees are rising . 
  these are the facts . 
  core had the simple option to increase the block size to 2mb and work on whatever they are working on to scale the network . 
  they did not increase the block size and did not deliver scaling solution - therefore they failed . 
  maybe bu will fail too , who knows but core failed for sure . 
  no problem . 
  whether i get it or not is irrelevant , 
  obviously did it too late . 
  i mean we would n't have this debate if they had increased the size on time , right ? 
  segwit is complex and could n't be implemented so fast ? 
  well then maybe an increase to 2mb 2 years ago to give themselves time to implement whatever they think is best would have been appropriate . 
  surely if the network can work with 1mb blocks it could work with 2mb blocks without the sky falling . 
  oh so it has been goldman sachs deleting comments from / r/bitcoin and ddosing people . 
  but there is no centralization , 
  i do not own any altcoins . 
  i own only bitcoin . 
  although i should probably buy altcoins too . 
  and this happened because blocks were too big ? 
  no , blizzard and the community must stomp 2 vs 2 . 
  they created archon as a specific kind of insult to people who like 2 vs 2 . 
  spent time developing and promoting a mode that has been tried in brood war and nobody liked it . 
  by comparison despite the lack of promotion much more people play 2 vs 2 but we should be insulted by being denied a gm which is available for archon . 
  yeah that `` title '' and all the money and power it symbolizes . 
  of course being gm on sea is totally legit because it is 1 vs 1, 
  if the name bothers you so much let 's create a 2 vs 2 top 200 league with the same rules as gm for 1 vs 1 and call it something else . 
  say top masters . 
  the `` title '' gm does n't mean much anyway so it can be given away freely to other game modes . 
  let alone that the very fact that archon gm exists means that 1 vs 1 gm is either unaffected or its value is already diminished . 
  therefore having a 2 vs 2 gm would not change `` the title '', 
  the gm title does not mean anything but i want to have a top 200 list . 
  also if you think plat players could make it into 2 vs 2 gm you have no idea about 2 vs 2 . 
  yes , i 'm sure , especially considering that there may be a lot of combinations of the same players . 
  which is very annoying because i have to keep 2015 for this reason alone . 
  the logic behind not comparing to true is to make the code sound more like a reasonable english sentence . 
  if ( store.isopen ) { dosomething ( ) ; }, 
  sounds like the english sentence `` if the store is open do something '', 
  if ( store.isopen = = true ) { dosomething ( ) ; }, 
  transferred to an english sentence is much more unnatural - `` if store is open is truth do something '' . 
  i think readable code resembles english sentences . 
  i even wrote about that a while ago - http://sietch.net/viewnewsitem.aspx?newsitemid=257, 
  there is a reason we have conventions for booleans . 
  they are supposed to start with is , has and can, 
  true multiple inheritance c++ style would be immediately banned with a threat of being fired . 
  now some form of mixins may be interesting but wo n't lead to drastic changes, 
  too bad . 
  i was hoping to exploit the strategy of blocking the enemy from building a nydus and in this way blocking a lot of supply which he ca n't use . 
  now the units will simply die :(,
