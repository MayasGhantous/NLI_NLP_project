  without any proof that you have the talent to become a pro player it is a stupid investment of time that will ( statistically ) lead to disappointment . 
  i 'm confused . 
  it says `` cross-platform '' right there in the title . 
  obviously you have not played pre-bw starcraft including competitive play , 
  maybe they were first because they ignored code quality . 
  in javascript = = = is short for = =, 
  interestingly dart is not on the list of approved languages . 
  great , this way the sjws wo n't infest it with their code of conduct bullshit, 
  it does n't say that the slide is about what is used at google but about what is approved ( whatever that means ) . 
  apparently they were using typescript before it got approved . 
  go is also on the list . 
  this is what i am thinking the whole season . 
  a society built like this will fall apart immediately if the leader is killed . 
  on the other hand people inside that society having their will broken by neagan may see it differently, 
  this would make sense if go was n't on the list . 
  and it was only usable in chrome . 
  wave was something that was crying to be a desktop app . 
  if vp-approved languages are on the list then dart was not vp approved because it is not on the list . 
  i agree . 
  they 've been explicitly warned . 
  on the other hand i ca n't understand how severe the issue is . 
  if i read the post correctly it is not proven that the implementation is flawed just that it is not provably correct . 
  this is a good example of why you do not do security if you are n't digging into security . 
  the difference between random and a cryptographic rng is like the difference between gethashcode and a cryptographic hash like sha, 
  it is approved . 
  go is on the list but dart is not . 
  also you ca n't bomb syria if you do not know what syria is . 
  when i become emperor of the word html and javascript will be banned for anything but actual web sites that display data and have simple actions like blogs , wikipedia or a system to buy airplane tickets . 
  anything more complex becomes a desktop app with proper tech . 
  anyone caught writing a desktop app in js and html is executed on the spot judge dredd style, 
  cross-platform should not be that high on the list of priorities . 
  quality should be of higher priority . 
  very large user base ... like maybe spotify ? 
  btw you make a good case for why competition in the os space is a bad thing , 
  in my opinion a wiki should stick to wikipedia design . 
  i am just so used to it from using wikipedia that when they move things around i am confused . 
  it is true that currently it is only good for developing on windows . 
  maybe that will change some day who knows . 
  that being said in the web world i do n't see why this is such a big deal . 
  if i run my servers why would i need to run them on more than one os ? 
  when you work for a company that web developers hate and your tool comes late to the party but you still manage to change the way the world writes javascript because you are anders motherfucking hejlsberg, 
  the portable version of . net is highly immature and there is not enough know-how . 
  the dev tools also favor windows . 
  if you are competing with other technologies and want to deploy on non-windows then your chances of success are better if you pick non - . net platform . 
  this makes me much more excited than the default methods proposal . 
  this is how co and contravariance in c # work and the community is fine with it . 
  they are somewhat complicated but this complexity rarely hits normal devs because the co and contravariance are on the declaration rather than on the usage ( like java ) . 
  you benefit from them without even knowing they are there because the library author knows . 
   do n't get fooled into thinking that typescript is as awkward and occasionally frustrating to use as java . 
  behind that java-like syntax is a language that is every bit as flexible and dynamic as javascript because , well , it is javascript . 
  as a matter of fact js frustrates me much more than java, 
  this all depends on how you define `` well '' . 
  for example i would n't say that ef core is usable in its current state . 
  the ooxml sdk does not work with core last time i checked and almost every project i worked on in the last 2 years required a word export . 
  if you want to be done now and have 8 hours per day to do this you should probably start ... somewhere in the middle of 2016, 
  i 'd like to see the combat stats nerfed . 
  not because of any particular imbalance but because i want to see more zealot usage . 
  i 'm having a hard time thinking of a case where i would use a tuple without deconstruction . 
  i do n't think proper code will ever see a tuple object variable because as soon as the tuple is returned it should be deconstructed . 
  why does he think you are black . 
  also why are you disturbed ? 
  for the most part i agree with your tuple guideline except that this part, 
   do use var when reading a tuple return without deconstructing it . 
  this avoids accidentally mislabeling fields . 
  you should replace it with something like avoid using tuples without deconstruction . 
  also why should the fields look like properties ? 
  is n't it better if they look like fields to point to the fact that they are not properties ? 
  of course that would be a non-issue if people always used deconstruction . 
  makes sense, 
  come on , flash was just poor software . 
  conceptually there was nothing wrong with it but the resource drain and the security problems were absurd . 
  even java did not have that amount of security flaws and performance issues and silverlight was much better than both . 
  lets face it flash was just bad ( not conceptually , technically ), 
  yeah . 
  when the indian became a ceo . 
  security will hardly be a problem . 
  hackers do n't know we exist . 
  i will . 
  i love the dev platform and i have built a couple of apps . 
  i want to continue to develop them and show them to people . 
  i am not doing it for the money i am doing it for fun . 
  as a developer android disgusts me and developing for ios requires a mac . 
  if there are no more windows phone devices i will just buy an iphone . 
  i do n't know if i will develop anything . 
   you 're not making sense, 
  he makes perfect sense . 
  microsoft 's clueless ceo does not make sense . 
  `` here is this uwp platform , please develop for it . 
  it can work on a lot of different devices . 
  one of them is absurdly expensive tech demo ( very cool but sold less than 10k units ) , the other is xbox one which you control with a controller and has 40 '' tv display and it works on mobile too . 
  btw we wo n't be releasing any phones but do n't worry , just do what we say and build uwp apps which nobody installs on their desktop pcs . 
  yeah man , developers are stupid . 
  again , you think what is obvious for everyone is obvious for the clueless ceo too . 
  with 2 billion pcs out there . 
  lets assume that he really believes homosexuals should have fewer rights than heterosexuals . 
  i still do n't see how this makes his technical decisions inferior and therefore sjws do ruin stuff . 
  now maybe if he was kicked out for creating the abomination javascript that would make sense . 
  go users keep saying that interfaces deal with some of the use cases for generics but i have not seen any example where the problems solved by generics are solved through interfaces . 
  let alone that go interfaces have nothing special in them except that they are implemented implicitly on structural basis and i ca n't see how this solves any of the problems that generics do . 
  i am not sure i understand you correctly but it sounds like interfaces do what object type does in c # / java not what generics do .
