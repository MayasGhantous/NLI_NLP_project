  i vaguely remember that i have asked you this once but are there any ais using machine learning ? 
  so definitely nowhere near 90 % of the players . 
  it will be interesting how long it takes google to beat the state machine bots and then humans . 
  i have a feeling that even that will take them an year . 
  do you think it will be easier to port the bots . 
  i realize they have baked in strategies but probably some ideas can be reused for sc2, 
  this is allowed by the . net standard but i got confused while trying to understand the details . 
  somehow a platform can be part of the standard but not implement it fully . 
  maybe this is why i do n't release libraries ... 
  they will certainly have a value somewhere that they can tweak . 
  why would the ai need to guess the opponent id ? 
  human players so not play against unknown opponents in tournaments so the ai should get the same info, 
  it also seems to me that most bots are not maintained and a new team of students starts their own not and abandon it in 2 years when they graduate and the next team again starts from scratch . 
  may be a perception thing, 
  the poll i posted a while ago disagrees . 
  most people would buy the warchest even if there was such an option, 
  unlike sc this would n't affect karpov because chess players on that level can play blindfold without any damage to their performance . 
  that being said throwing the opponent off-balance with the slightest weird things has been done in chess for decades, 
  me too but if they do n't implement the option i will consider not buying anything involving skins from now on . 
  on the other hand the us and sk have point defense drones which may or may not be able to stop nk 's nukes and parasitic bombs . 
  have n't been tested yet with the latest patches . 
  as a matter of fact in this ffa china is supporting nk not because they like them but because they do n't want sk to get too powerful . 
  or maybe look at the part of korea the us laid waste to , 
  i really wish blizzard showed less stuff in the public match history . 
  maybe more details for the player less for other people watching . 
  why the hell is the build order available to people who were not in the game ? 
  true . 
  on the other hand people with not even this amount of data are boldly declaring the opposite . 
  hunting players on battle.net to get their build orders from games with other people is hardly a good strategy to improve . 
  there are tutorials , replays from tournaments and what not . 
  it certainly shifts the burden of proof back to the person making the claim . 
  even then we should give people who invent build orders their advantage . 
  in any case the real bo researchers in the korean teams probably use account and maps that hide the bos . 
  we 're just artificially forcing people to jump through hoops which gives more advantage to organized team houses as opposed to other players . 
  i think that if segwit2x activates successfully and gets the support of the companies who signed it the core chain will die pretty fast . 
  they will effectively use the name bitcoin because coinbase , bitpay , etc. 
  will treat 2x as bitcoin and the lack of miner support will make the chain very slow for some time . 
  if you use a bo in a tournament you cash on it in a way . 
   freedom of information in a competitive game helps for strategies to be replicated/refined/predicted as quickly as possible, 
  this is true but i do n't understand why this is considered a good thing . 
  i want to be surprised by a new build that just crushes opponents at tournaments and not have this build already researched and countered by other players . 
  of course i am not . 
  we made sure to exhaust them `` as quickly as possible '', 
  either match history is useful for learning new builds or it is not . 
  yeah , sounds great . 
  the only thing left is for the ln to exist . 
  this will happen if miners split alone . 
  however if miners and services ( exchanges , bitpay , etc. ), 
  fork together it will be entirely different . 
  i do n't know why you are so sure they will follow through . 
  i expect them to but am not sure . 
  now that i think of it full blocks are literally destroying bitpay 's business . 
  i guess they need to go for a fork . 
  why is it good that we have the option to quickly see what style somebody plays ? 
  this is true but taking the brand bitcoin from core is far more important than the adoption of either fork . 
  the most pointless recall in history . 
  i do n't see communication as an issue . 
  after all if it is one type of ai they can just implement a protocol and effectively function as one mind . 
  therefore i think it is not even necessary to force them to run separate ais, 
  it is a nice first step but the real goal must be diversity of not only the programming language but the ui framework itself . 
  there should be implementations that compete with html and the dom probably implemented via webgl . 
  say xaml, 
  the xaml tooling has great accessibility story . 
  i see no reason why this ca n't be implemented on top of the current web platform . 
  if it ca n't then the web is inferior and additional standards that allow for it to be implemented should be introduced . 
  and why exactly ca n't this be fixed ? 
  as i already said if there are accessibility apis use them to implement accessibility in the future xaml-webgl framework . 
  if the apis do not exist create the apis . 
  i do not much about dota but watching the games it seemed that the bot simply hit the human player much more consistently when they traded shots . 
  yeah . 
  as if it was not obvious from his comment , 
  well this is what machine learning is good at is n't it . 
  also i think the rule is to hit the creeps for the last hit . 
  the body blocking of the creeps is quite interesting though, 
  yeah but that does n't make sense . 
  the ai can communicate very complex state with just a number . 
  what would `` human speed '' mean in this case . 
  also humans improve communication by practicing together and establishing protocol where a short word describes the situation . 
  even if we limit the ai to the same practice the amount of training that it can do will push its communication training far over what any human team can achieve . 
  this is quite insane requirement actually . 
  good for you that you can host elsewhere . 
  i agree that it will not happen fast . 
  first there needs to be a push to replace js and if this happens alternative ui frameworks can be tried . 
  provably games will be the first to push on this front, 
  you 've seen the c # web assembly demo , have n't you ? 
  because there are people with existing skill set in c # . 
  the great thing here is that every community can build an implementation for their language of choice . 
  there can be a competition for ui languages again like there was 10-15 years ago . 
  also note that the most discussed implementation does n't use a vm . 
  even some . net implementations do not use vms . 
  . net native and mono allow for non-jit compilation directly to native code, 
  sarcasm and trolling are not the same thing . 
  gc ! = vm . 
  also the . net runtime is never a separate process from the program . 
  technically we 're already above $ 4000 because if you had 1 btc before the fork the combine price of btc + bcc is far above $ 4000, 
  i do n't think gamers really want a productized ai to play against . 
  i mean it is not like anyone plays against the chess programs on the highest difficulty when people know they do n't stand a chance . 
  it has other value like research into the game . 
  yeah i understand that much from the game but this seems like something that can be implemented without machine learning . 
  you just put weights on each target and factor in the position of the creep the amount of hits needed to kill it , the thread from your own creeps to kill it and select the best option .
