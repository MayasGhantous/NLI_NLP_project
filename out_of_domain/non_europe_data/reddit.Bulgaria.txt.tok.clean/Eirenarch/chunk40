  as far as i know most of the apis do use async os apis and what is more i do not see why they would not . 
  ok i got that but i do n't see source or anything . 
  i 'm sure i 've read that async database calls use special io ( i can not remember if it was some kind of lightweight threads or the system io completion ports ), 
  no , i 'm not old enough for that but it turns out that my first programming experience was indeed turbo pascal when i was in 5th grade . 
  at the time i did not know that was tp but i asked my uncle years later , 
  ok but how do you know . net does not ? 
  more importantly which . net apis do not and which do ? 
  of course . 
  i 'll buy you reddit gold , 
  future is quite different from async/await and yes async/await bubbles the original exception . 
  the tpl does wrap the exception but this is because there may be many exceptions in parallel . 
  nah ... they only sue google . 
  i am against software patents except when they are used to sue google . 
  then i am ok with it . 
  they sue for android =  they make google pay via companies who make android devices . 
  in a way they put a price on android and take the money for it . 
  also in practice they only sue motorola and barnes and noble ( case dropped now ) since everyone else simply signed the agreement because they know it makes sense . 
  hmmm i did n't think of that . 
  turning it on only for metro apps or turning it off by default and forcing users to go into the registry to enable it would be consistent with their position about webgl security . 
  i am anders 's ( hallowed be his name ) fanboy not really ms 's . 
  and google hater . 
  suing with software patents is bad but after all they were much worse before . 
  inventing their own standards and not releasing documentation , etc. 
  i liked the evil ms more anyway . 
  mmm no . 
  they release open source shit , protocol specs etc. 
  this makes me sad . 
  except that it will not crash the browser . 
  it will crash the os . 
  i have seen claims that ms will actually have an advantage if they support webgl because windows is the only major os that can recover video driver in this way . 
  exploiting will be hard but it seems like crashing it will be very easy . 
  \u041e\u041a i wish they were the old non-compatible , closed source microsoft . 
  i think that made them more powerful and made the investment in their ecosystem more meaningful . 
  well everything might crash the browser but the whole idea of the browser is to prevent crashing the os . 
  the security issue is related to the driver security so in the context of the conversation the problem is that the os might crash if a web page exploits a bug in the driver . 
  this is very hard to do with normal html and supposedly very easy to do with webgl, 
  either i am reading this wrong or the performance boost is only for gtx 680 sli, 
  hmmm then is it possible that windows is the only os which can detect that the driver is not responding ( i.e. 
  infinite loop ) and restart it ? 
  i remember reading this on a google employee blog where he was complaining about ms 's position on webgl . 
  i mean investing in learning the technologies they produce . 
  has been paying pretty well for me thus far . 
  where i live this is not the case . 
  of course i am comparing to mainstream languages like java and php . 
  if you are an erlang expert you will probably get paid more but i have not seen a ( local ) erlang job offering . 
  this means that even if you try you will have a hard time becoming erlang expert . 
  bulgaria . 
  i am not saying there are not many . net devs but the money for a . net dev are in general on par with java and ~ 20 % above php . 
  of course my view can be tilted by the fact that we 're a country where others outsource projects because of the cheap workforce . 
  in addition my evidence is anecdotic but is shared by other people i 've talked to about this . 
  it is a fact that the most important factor when getting hired for a lot of money is not the technology and not even your skills but how well you can sell yourself . 
  the problem is they may not know how badly fucked they would be in advance and let him go . 
  i did not understand anything . 
  will the gsl be free on twitch now ? 
  will there be gsl/mlg/iem other than wcs events ? 
  so many questions ... 
  well ... leave . 
  that will teach them !, 
  i do n't see much of an issue with regions to be honest . 
  the koreans will probably split evenly between eu , na and korea if they are clever . 
  when will mike be promoted to a higher league ( he was silver right ? ), 
  also any plans to scale e-sports down to smaller events ( national tournaments and even city tournaments with smaller prize pools ) ? 
  if this is true then i declare the wcs a bad thing . 
  no because i think non-wcs events will be better events . 
  of course i agree that dreamhack has done much better job than esl for past events . 
  i think java generics support co/contravariance when used and not when declared . 
  you can take any generic collection and turn it in the appropriate co or contravariant variable ... 
  i think, 
  very few people use raw arrays in java and c # and this is why this error is not a big issue . 
  for collections in c # you do n't have to understand co/contravariance to use it . 
  you can just cast ienumerable < derived  to ienumerable < base  and it will just work, 
  tell us !, 
  tell us now !, 
  great idea . 
  remove different races . 
  if we have a single race it will be perfectly balanced on all levels . 
  i am not sure what the scala syntax is but i prefer the c # approach to the java way . 
  the c # approach allows simple casting to interfaces ( or delegates ) that are declared to be co or contravariant the most obvious example being ienumerable . 
  while this is not as powerful as the java way it moves all the complexity of variance in the interface itself so the interface designer is the only one who needs to understand how and why co/contravariance works . 
  the user code can then pass around and cast variables of the said type and they will automagically work when things are ok ( i.e. 
  the stackoverflow questions about na\u00efve variance will not exist ), 
  `` if you are in it and you are not a gamer then you are not true and you are only doing it for the money '' - my girlfriend, 
  i have been demoted out of masters twice and always managed to get back in a week . 
  that 's bullshit and even factually wrong ( i was there when zerg rush was invented and players learned how to stop it long before it was nerfed ) . 
  players do not quit the game in this way and cod sux , 
  many people in it are passionate about what they do . 
  what i meant was that cod is bad competitive game . 
  it is obvious that it is very successful but i am perfectly sure its success has nothing to do with good competitive gaming design . 
  btw do all cod games have equivalent weapon because all of them are successful ? 
  also i do n't like the idea of `` skill '' to begin with . 
  the skills competitive games should promote are strategy , tactics and decision making . 
  obviously if the game is real time there will be execution and speed involved but i hate it when games try to promote that . 
  i love street fighter and prefer it to mortal kombat ( i like mk as well ) but i still can not understand why sf moves should be so hard compared to mk . 
  the game should not be about your hand dexterity and speed but about your ability to quickly think how to outmaneuver your opponent . 
  i know most of the sc community disagree with me :(, 
  the article does talk of a future where higher level gc languages ( jvm and clr ones ) can be ported to asm.js quite successfully . 
  um javascript is compiled but it is compiled on the client and do i have to explain why non-native programs exist ? 
  this is the most impressive thing i 've seen in months and for the first time i feel like something has the chance to fix the mess with js . 
  the wrong thing about having to write javascript can be fixed by not writing javascript . 
  2 . asm.js does not add stuff .
