  the most important stream ) . 
  i do n't think that they should have played with lag since the lag was in fact severe but they should have either paused or remade the game until the issue is resolved . 
  as it happens this was the single most interesting game for me that night ( this one was interesting and close and in the next two i think stakiman was affected by that loss ) and i missed half of it before i figured out that i can go to the german stream and at least watch . 
  now to be honest i do n't think the whole thing is a big deal but i certainly disagree with the premise that tournaments should be optimized for the players and not the viewers . 
  yes , organizers should make sure to provide good conditions for both groups but if the interests conflict viewers should be more important . 
  btw i think nani did n't even know the person who lagged was the english stream caster . 
  uhm ... no it was n't me who started sports comparisons . 
  i do n't watch sports either ( well except starcraft ) and basketball is n't really popular around here anyway and vegans are n't either , 
  several parts of this post that i have experienced personally are factually wrong . 
  for example my windows phone 7 app works perfectly on wp8 and nobody ever told me it would n't . 
  btw even if he was right about all this ( and he is not ) i still would have preferred that dev div went their own way since otherwise we would n't have c # and i would have to write java for a living, 
  i am perfectly happy with writing c # for a living . 
  i ca n't think of any mainstream ( so i can find a job ) language i 'd rather use for a living . 
  well , to be honest microsoft did their best with silverlight . 
  if they knew iphone would take the world by storm they would have made windows mobile to be the iphone . 
  it was ios that killed silverlight not microsoft . 
  they deserve the $ for all the products they pulled ( so says the market , not me ), 
   why not learn js and move to node to expand your horizon, 
  at least that 's easy to answer . 
  as a . net web dev i actually know js . 
  problem is i do n't want to use it because c # is so much better . 
  i have  not that it is better than c # but at least it will ease the pain when i have to use javascript . 
  uhm ... no . 
  i said i know js . 
  how did you think i learned it ? 
  i have to use it because you know ... customers do n't want silverlight . 
  on the other hand i 'd take 30 % salary decrease rather than write js on the server ( i.e. 
  node ) without real technical reason ( open source vs microsoft is not technical reason ) . 
  btw you 'd be surprised how well update panels work despite their bad reputation if you know what you are doing . 
  we once build a filter as you type user list with pictures and all with an update panel and my boss who is as anti-update panel as it gets was stunned to find out that it works reasonably even though he tested from another continent . 
  we ended up rewriting it as pure client side js + service just because he was convinced that at some point the update panel would break . 
  xaml is not without flaws but it certainly feels better to write apps in xaml since you do n't need to care about semantics and different browsers . 
  wan na do the equivalent of html layout with table in xaml ? 
  go ahead , nothing bad can happen . 
  every time blizzard `` fix '' the ladder it gets worse . 
  i am heavily demotivated for being kicked out of masters after the redistribution to the point that i quit the game . 
  i really do n't see why blizzard should cut masters only because they did n't hit their original targets . 
  if they want exclusive league they should make a new one from the top . 
  well , it seems to me that . net devs are quite quick to accept what ms currently pushes . 
  so i would say that many . net devs these days are all about spas ( single page applications ) built with web api with async support for scalability and signalr for real time notifications . 
  oh yeah and typescript , 
  keep the map !, 
  balance is overrated . 
  the most interesting pvzs i watched this season were on this map . 
  yes . 
  i had great time watching these games . 
  had most fun of all gsl up to this point . 
  let 's start our revolutionary organization . 
  you and me , brother . 
  you and me against the world !, 
  ok , you get to be in our [ revolutionary organization ] ( http://www.reddit.com/r/starcraft/comments/1w0dku/as_a_zerg_player_remove_daedalus_point_please_or/cexkkgd ) too . 
  i had a perfect 15 seasons of masters streak before the ladder redistribution . 
  i hate to be a bitch whining for an icon but i am so demotivated by the fact that i have been kicked out that i stopped playing . 
  i usually hovered around ~ 3 % and i know i did n't deserve to be in masters if you define masters as top 2 % and i would n't care if i was in diamond from the start but after 3 years of conditioning i feel extremely annoyed by the fact that i got demoted despite playing greater amount of games and actually increasing my absolute and relative skill level . 
  interesting that the ladder was designed like this to motivate players and they managed to demotivate me . 
  i never felt demotivated from being at position 5000 in the warcraft iii ladder . 
  i have n't played much this season but i can assure you i would enjoy it . 
  in fact i am really annoyed by the fact that maps are clones of each other this days . 
  if i got to choose what maps to play i would bring back the wol launch map pool and add air maps . 
  i was actually thinking of putting on github an algorithm to distribute people in leagues based on percentages according to specific number ( the mmr ) since it seems that they have trouble implementing it and need to tweak mmr boundary values to get their percentages ... 
  i estimate i will need an evening to code it . 
  fun fact : they did it so we can be motivated to play more , 
  i was actually serious and was thinking of implementing caching of boundary values so that the sorting of several hundred thousand players is not done after every game , pessimistic promotion and demotion so you have to be seriously on one side of the border to be promoted/demoted and all the other things . 
  if their algorithm is really looking at set mmr values rather than percentages they will have to adjust it after every swing of the player activity . 
  hmmm ... ok this kind of motivates me to really do it but i do not promise anything i 'd rather use the limited time to play the game ( or other game ) . 
  btw i am against going for the percentage targets for leagues if it involves demoting . 
  4 % may be too big for masters but they set this expectation for 3 years . 
  if they set this expectation for such a long time they should not fix it since the result is just losing players . 
  why do they expect me to play if they demote me ? 
  if i just stop playing i will always say i was masters when i did play . 
  i 'd better stop playing than explain everyone who played before that i am better than ever but i am diamond and it is still better than their diamond when they played . 
  it was the other way around . 
  wol jumped to 8 % before hots . 
  and yes they have the same argument ( although it is weakened by being valid for only a couple of seasons ) blizzard should never demote . 
  if they fuck up they should swallow it or get rid of the leagues . 
  leagues are stupid , they make me act stupid and if they keep them the leagues should continue to be stupid as stupid as they ever were . 
  nope . 
  i tried , i failed . 
  i realize how stupid it is . 
  i blame blizzard for making me stupid . 
  i stopped playing sc2 . 
  or this one :, 
  i do n't remember such a thing . 
  f # used to work with the free visual studio shell but not with express editions . 
  the benefit of allowing express editions support to the f # tools is simplified installation ( i.e. 
  you do n't install vs shell ) and the fact that you can have a single solution where you have c # and f # projects . 
  you can have an asp.net website written in c # which uses class library written in f # and this was n't possible previously with express editions . 
  ah , interesting i had somehow missed that . 
  killing the java web plugin officially would be quite a good thing for java . 
  well history might have been different . 
  what if the whole world had gone the way of the java applets instead of the html+js app ? 
  in fact i would have preferred the java applet to win but once it has lost there is no need to flog a dead horse . 
  probably because things looked much different back then . 
  no one thought that people would build apps with html and js . 
  it happened a decade later . 
  what is more i have a vague memory that js was intended to be temporary solution because java was not ready to be embedded in netscape yet ( they intended to but needed something in the meantime ) . 
  but temporary things are forever . 
  i have a lot of problems with js but in the context of node i would say that the lack of a construct like async/await is the most serious problem . 
  when all your code is async it makes more sense than ever to get rid of callbacks . 
  it only looks like it is about . net because the example is . net .
