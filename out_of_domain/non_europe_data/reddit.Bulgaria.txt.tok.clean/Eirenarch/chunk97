  a statement which confirms that writing a good api is very hard ( harder than writing an implementation ) . 
  it makes sense for hard things to be copyrightable . 
  i am perfectly sure the implementation of java that comes from oracle has all the appropriate licenses to be used for creating programs . 
  because they are hard to write , they are useful ( as in good apis are more useful than bad apis ) and no two teams can produce the same api unless they purposefully copy it ? 
  strongly disagree . 
  especially when it comes to something of the scale and requirements ( like backward compatibility ) of java . 
  the court says yes . 
  i think you can track that back to what is called natural rights . 
  if a person creates something he has full rights over it . 
  see , 
  i do n't think your analogy is correct . 
  it is more like google making screws from different metal and claiming the idea of a screw is irrelevant because the metal is what matters . 
  i do n't think that 's true . 
  can you provide a link to explanation or confirmation that this is the case in the law . 
  well it is obvious to me that for once they will be paying . 
  no way anyone gets sued over copying php . 
  the very fact that they are using php is enough of a punishment . 
  yeah you can try that and then be surprised at the outcome the same way you are surprised by this outcome . 
  you probably explain this decision to yourself with bribed judges . 
  frankly i do n't know . 
  i just saw someone claiming the opposite in another comment thread on the same news . 
  also it does feel right to me . 
  like when two scientist independently discover something it is named after both of them, 
  so google is a consumer who needs to be protected ? 
  it 's not like they bought anything from oracle, 
  is it ? 
  maybe there were no claims because mercedes never tried to produce an engine for another company 's car, 
  are n't they sued sometimes . 
  i remember apple suing some hackintosh makers out of existence . 
  i do n't dispute that it can be controlled . 
  i am saying that they are explicitly giving permission . 
  interestingly the court used a book analogy but they came to very different conclusion . 
  as i understand the statement of the court an api is copyrightable as a whole although i do n't know what the unit is . 
  also work derived in this way is clearly a different expression of the same idea ( i.e. 
  not subject of copied in copyright terms ) . 
  i am not too worried about this . 
  it is quite obvious when the api is deliberately copied to achieve interoperability and when only the idea is copied . 
  reasonable jury will always make a the distinction easily . 
  but it is supposedly derived by natural rights . 
  now you can argue that it is derived in a way that is wrong but that 's another topic . 
  that 's why the court says that fair use may apply in this particular case . 
  the others in this case did not design the software they copied it . 
  literally . 
  which are not copyrightable . 
  iirc the court even mentions spelling as part of the copyrighted thing . 
  the court says it did n't , 
  the creation of alternative vms is subject to very specific rules which dalvik does not conform with . 
  yes , that 's what will happen . 
  i do n't think the consumers will be too affected by the lack of emulators for abandoned japanese computer models . 
  if anything increase in price of android phones will affect consumers much more . 
  well i think the creator of the platform should be free to patent it and close it if he wants to . 
  of course this is my personal opinion but this court seems to agree with me on some level , 
  maybe you can . 
  i certainly do n't think that is an easy task and judging by the apis i have used out there many other people ca n't . 
  btw i am not in awe of the apis in java but i do n't claim i can write much better ones . 
  and yes it is obvious that you can copyright bad stuff . 
  thanks . 
  i have seen some videos on the topic but when i try to do it in practice it turns out to be quite different , 
  as i said i believe the jre from oracle.com gives you a license to do that . 
  i would be really surprised if oracle 's lawyers did n't think of that as there would be a lot of harm to their business if they did n't . 
  let alone that they can easily add it now if they forgot to do it before . 
  so then good thing this happened so it can force the lawmakers to fix the copyright system . 
  if the whole idea of copyright is broken you should worry about that not about the effect on the software development industry . 
  if this is really bad then the usa will be forced to fix this when the chinese produce better software . 
  until then the system works . 
  yeah , right ... 
  well do n't you think that if the basis of the judicial system is not working whatever happens to the programming apis is the least of our concern ? 
  well it seems they were right . 
  the most popular languages this day are in fact managed . 
  also note that even with . net native they still use automatic memory management so in a way it is still managed . 
  j + + was an implementation of java . 
  ms extended j + + with extensions that only worked on the ms java vm ( yes ms had one ) and sun sued because according to the license ms bought they could not add anything to the language or remove anything from the language . 
  the lawsuit itself was similar to oracle vs google except that java was not open source at the time . 
  ms lost and they developed . net from scratch . 
  although . net is conceptually similar it is not an evolution of j + + or compatible with java on any level . 
  they are using the parts of the c++ compiler toolchain but i do n't know the details . 
  link to slashdot with a link to an ars technica article ... 
  i 'd say that 's more for portability than compatibility . 
  groovy happens to run on the same platform as the java language and happens to use the same apis that were found to be copyrighted . 
  i am laughing at anyone who thinks this decision would harm java 's position in the enterprise . 
  even if it had any implications there ( and i do n't think it does ) companies like ibm will happily pay the required fees to keep their enterprise offerings in the market . 
  let alone that even if everyone else drops java oracle will happily take their place and support the strength of java in the enterprise . 
  java in the enterprise will outlive us all . 
  i do n't know what a `` java language api '' is . 
  what is more the decision does not affect any `` java language api '' it affects parts of the java standard library which groovy surely uses . 
  is this guy even good . 
  first time i heard of him was the david kim email on esportsexpress and i had to ask who he was . 
  did he even do anything significant in any tournament ? 
  it 's not that it is written in java it is that any significant programs in groovy use the very apis that are the reason for this lawsuit . 
  so let me get this straight !, 
  you want to get into `` enterprise backend development '' and in the same time you are passionate about `` open source and such '' and you actually care about all the political bullshit ? 
  have you ever been into enterprise development ? 
  i have been on the sidelines and it seems to me that in the enterprise the most important thing is what is already there . 
  you work with what the higher ups already bought . 
  i have worked on the . net side and i had to integrate with sharepoint because the company that was our client already had sharepoint . 
  sharepoint integration did n't even make sense in our case but they wanted it anyway . 
  this is what the enterprise is like . 
  decisions are made much higher than where actual development happens . 
  it 's not like enterprise development is bad in general . 
  it has stability and quite often you are solving real world problems and not something just made up by some `` visionary '' like those startups do but if you are political the enterprise is not the place for you .
