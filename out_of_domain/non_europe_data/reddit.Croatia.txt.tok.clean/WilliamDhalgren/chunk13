  just find the news that these words are prosecutable there ( nowadays ? 
  so , what happens next , what 's the procedure ? 
   do y' all believe in a `` something '' above not necessarily god ? 
  nope ; no such `` something '' outside natural laws has been proven . 
  if it were , it would be simply a fact , in which case my opinion would be irrelevant . 
   do all atheist believe in solely a scientific approach to everything or maybe things happen due to luck or chance ? 
  i ca n't speak for what atheists in general believe - strictly speaking the only common thing we 'd need to agree on to be atheists , is not believing in a god . 
  how we got there is not part of the definition , 
  i think these are nevertheless fairly typical reasons for such disbelief though - and its just that there is no virtue in committing to a belief in claims that have not been thoroughly demonstrated . 
  and while millennia of idle speculation on the grand questions without a skeptical methodology of doing it , have merely given rise to hundreds of different opinions , as diverse as human cultures are , the systematic skepticism and regard for empirical , measurable evidence science has been practicing just a few centuries , have given us many conclusions nobody ( relevant ) doubts anymore , and which we basically test with every technology we use , which is based on them . 
  so , yeah , in matters of getting `` how to know something is true or not '' right , science has a much more plausible track record than any other approach , and i 'll generally stick to its conclusions . 
  to the extent it has reached conclusions . 
  in matters where we simply do n't know , i might think one option more plausible than another , but i would n't commit to believing it with any conviction , until it does get more solid support . 
  naturally i 'll take the theories which are more congruent with what we already know to be apriori more likely , but its just a heuristic that can turn out wrong . 
  re chance , sure - it plays a fundamental role in the laws of nature as best we understand them . 
  though even there , its an interesting balance , since chance events in aggregate obey statistical laws . 
  so , not everything need have some deep meaning . 
   what do yall think will happen when yall die ? 
  as far as i know , we 'll decompose . 
   what is y' alls take on moral stand points like the christian 10 commandments ? 
  as a rules of thumb , things like do n't steal , lie , murder are both beneficial and fairly universal across cultures . 
  obviously devotion requirements are not rules i 'd hold to , and more fundamentally , i 'd rather think of ethical actions in their actual context , judging the desirability of the outcomes of this or that action , than in terms of obeying a set of rules . 
  the latter approach is much more prone to lead people astray seems to me , especially when authoritative proclamations on which rules need to be followed are centralized in the hands of a specific hierarchy , and then one can get such moral aberrations as treating women as unequal , persecuting gays , and waging a battle against contraception in aids-ridden places in the world ( if you 'll allow me a slight jab at the organization you identify with  ), 
   it 's a no true scotsman fallacy . 
  be careful when and how you apply informal fallacies . 
  something is a no true scotsman iff its ad hoc reasoning , without reference to an objective criteria . 
  in other words , if the counterexample is deemed not a true representative precisely on the grounds of it violating the claim . 
  this is a form of begging the question , for the conclusion one wishes to reach is built back into the claim . 
  here it is clearly not the case ; 1 ) it is outside the standard ( ie an objective a priori criteria ) , 2 ) since unsafe * operations are there ** precisely ** to enable ignoring and breaking any rules of the language , a way for the programmer to state `` i know what i 'm doing , i 'm manually maintaining the relevant invariants even though i 'm unable to express this properly in the typesystem '' . 
  trivially breaking the haskell semantics is precisely why these functions are called unsafe - that 's their intended purpose !, 
  and that 's why one is not supposed to use them at all , if one 's a mere mortal . 
  moreover , and 3 ) , it is you who choose to define haskell as ghc haskell , and ghc haskell as including absolutely any ghc feature - a notion one need n't redefine mid-argument since one could hardly accept it to begin with . 
  your own title would make no sense if you honestly believed it - ghc 's implementation of < everything ghc can do  is semantically broken ? 
  you either have a notion of haskell distinct and hence more restricted than the ghc in your mind ( in which case , this haskell is properly implemented in ghc ) , or just insist it is advertised to have semantics it does n't actually have - in which case you just need to pay more attention to the fine print , 
  i 've had some impessive moments of clarity when meditating , and some farly complete questioning of what 's possible on shrooms . 
  apparently some people who invested more into such practices have experienced more impressive instances of such phenomena , for better or for worse . 
  as do some people with epilepsy . 
  i think the proper conclusion from it is that anecdotes should n't count for much more , when they happen to you , then to anyone else . 
  experiences are made of neurotransmitters and synaptic potentials , random glitches should not be more unexpected than say occasionally burping . 
  people are generally far too attached to the rational reconstruction story they tell themselves of how events happen in their lives , to notice just how much of our thinking instantiates various congitive failings . 
  hence why methodological skepticism , rather than just going with gut and impression , is so important in establishing truth . 
  surely you did n't think previously that so called spiritual experiences simply did n't exist , ie that people were just lying when describing such ecstasies , out of body experiences etcetc ? 
  if you did think so , well , you were just misinformed . 
  if on the other hand , you knew these were a part of the human experience , what extra information did you learn by having them happen to you rather than someone else ? 
  i think its an implementation detail , but not part of the language . 
  gadt , that 's something the standard will or at least could eventually include . 
  its an experimental extension of the haskell language . 
  unsafe * though ? 
  i 'll murder the committee members if they try :d, 
  exactly . 
  and to take more incidental things , i think the silk road and the trade along it had a lot to do with it too ; while europe was isolated , they had an influx of ideas from the far east , as well as preserving greek books . 
  possibly even the fact they had to make a pilgrimage to mecca aided the spread of ideas , the practical need for orientation etc. 
  but , i do n't think this idea that god hates those who are suffering is authentic for europe at the time . 
  thought christian thinking took such turn post-calvin ? 
  a friend who was into gnosticism , aliens , magic and all kind of weird shit mentioned them a few times , but that 's it . 
  i 'd have guessed , apart from what you said , ie to piss ppl of , also to a ) just generally sound , dark , dangerous and ( hence ) cool , and b ) out of actual paganism . 
  the idea of the latter being , a nordic rebellious young adult thinking , we never submitted to christianity , it was forced upon us by conquest . 
  now it should fuck off , and so we 'll proclaim our ( garbled ) notions of paganism that should have been victorious . 
  sounds like generic new age stuff to me . 
  superstitions like such seem very prevalent among the `` alternative '' folk . 
  why not directly - look i gave your literature a shot , twice/three times , it was just a pile of illogical/superstitious/archaic ( or whatever ) bullshit , i wo n't waste my time on such garbage anymore/how long do you expect i 'm supposed to continue to indulge you/tolerate your pushiness ? 
  i think its much simpler ( symmetric ) than that . 
  the burden of proof simply lies with the one making the claim . 
  or even better ( taking out the human from the sentence ) , for a claim of any kind to be believed , evidence needs to support it . 
  so yes , if i claim that the god does n't exist , i 'm supposed to prove it . 
  here 's the reasoning ( bayes ' occam 's razor ) , take a theory , then add a claim to it . 
  it could be , `` and goddidit '' or likewise `` and no goddidit '' . 
  if i accept either claim and nothing else changes with this addition in the likelihood of my theory being right given the evidence , then the likelihood of my theory being correct definitely just went down ; the theory could be wrong in one extra way ( say i added `` and goddidit '' when in fact `` no goddidit '' was true - or vice versa ) , while ( i posited ) , this extra claim did nothing to make my theory more likely given the evidence i have . 
  hence , any addition to the theory better pay off in terms of correct predictions it makes , otherwise accepting it can only make it less likely for me to be right . 
  so i do n't need to commit to the position that god does or does n't exist , i can simply treat either claim with skepticism if posited , and leave either claim out of my thinking otherwise . 
  just like with cosmic teapots , unicorns etc. 
  notice , its not justified to say that there is no cosmic teapot or unicorns , for by construction we can have no evidence to say so , but this is n't an option worth considering , for it offers no epistemic payoff . 
   c is that in case of id it takes two equal type parameters and can produce , apparently , ** any type whatsoever ** ? 
  what , no !, 
  it says id : : c x x . 
  that 's entire type , not an input type only ; and its c , not id , that takes 2 type parameters . 
  id is a ** value ** of such a parametrized type with two parameters , in the case where it has the same parameter for both of them . 
  if the parametrized type is the function type constructor ( -  ) , then id would need to be something that has the same type on both ends of that arrow , ie just return its argument :, 
  instance category ( -  ) where, 
  note that : : a -  a is just an infix form of : : ( -  ) a a, 
  another example implementation is for lenses . 
  the definition given in the data-lens package is a bit too advanced for me ( store monad transformer , pure ... ) , but ( those ) lenses have the form like age : : lens person int , so a view on some record , to be used in getters and setters as parameters like :, 
  data joe = person { ... }, 
  get age joe -- : : int, 
  set age 7 joe -- : : person , ie joe but at age 7, 
  the id lens would be something like id : : lens person person , being a `` view '' on the entire record . 
  get id joe -- giving joe back, 
  edit :, 
   if the only thing i know about c is that in case of id it takes two equal type parameters and can produce , apparently , any type whatsoever ? 
  the more interesting thing in that interface is the composition operator ( . 
  ) , and you need both to satisfy the interface . 
  well , all you get from it is composition , and you need to insure yourself that they form a monoid , ie that composition is neutral for id , so age.id is the same as just age , and that composition is associative . 
  but having c 's neatly compose can be fairly useful . 
  in a few decades , when linux has been long forgotten , it will still have been the coolest thing from the 00 ' and 10 ' , and hence an even better geek credentials reference :d imagine an older guy with some obscure pdp-10 reference tattoo for eg . 
  it does date your age though . 
  anyhow , i never quite understood the desire for having a tattoo , but otoh , why would it be so wrong to fiddle with the ( lack of ) stripes and colors we 're born with , and doing something different with one 's body ? 
  i thought let and const in js6 ( both usable today on chrome , nodejs and firefox , and transpilable by defsjs ) fixed the abominable scoping in javascript ? 
  talk on using it in production in this manner and why it matters http://vimeo.com/66501924, 
  < edit  well , i tried the current implementations , and they still do n't create a fresh variable in a loop , but rather for constructs introduce a block around the entire thing , which can give counterintuitive results with closures . 
  there 's a bug report to fix this though < / edit ,
