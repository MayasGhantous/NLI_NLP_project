  sure , but i suppose the vendor factored the cost of engineering and uncertainty of future orders into the quoted price as well . 
  whenever this story is told , i 've never seen it mentioned * how many units * spacex promised to buy . 
  the price for `` one unit , maybe more in the future '' is going to be a lot more than `` guaranteed minimum order of 100 or 1000 '' . 
  i sort of expected him to follow up with asking if the liquid oxygen for the fuel is extracted from pure american air , or whether there 's a chance it might have floated across the borders from other countries . 
  i 've been using it over 3 years for `` small sites '' , and it 's okay . 
  but more and more recently , i 've been noticing performance instabilities . 
  sometimes a page takes 20 seconds to load instead of the usual 200ms , sometimes writing to postgres fails , and so on . 
  i guess these are a fact of life on shared hosting where other customers might be doing whatever on the same machine . 
  but i 've been thinking of moving all my small sites to a vps with some minimum guaranteed slice of the cpu of the host . 
  how about something from 2015 instead : http://news.netcraft.com/archives/2015/04/20/april-2015-web-server-survey.html, 
  not sure how that particular song was recorded . 
  but yes : if you record each instrument separately , add the resulting waveforms with simple addition , then the resulting waveform will sound extremely close to all instruments playing together . 
  there are going to be small practical details that might make it sound just a little different :, 
  * more people in the room can slightly change its echo and sound absorption . 
  * if there is one microphone for the entire band , then some instruments will be placed further away ( quieter and delayed by a few milliseconds ) , compared to each instrument being right in front of the microphone . 
  * perhaps some timing issues or even emotional issues of getting their sound in sync when playing alone - when together , musicians can listen to each other live and adjust . 
  but for overlaying tracks , yes it 's just a simple addition of the waveforms . 
  and for fire escapes - base jumping ? 
  sure , you can get death threats online for pretty much anything . 
  but if people know you 're making $ 50k/day in a third-world country , then these death/kidnapping threats might actually turn out serious . 
  `` domain names are like partners - all the good ones are taken , but you can always buy one from a strange country . '', 
  -- not sure who , therefore michael scott . 
   i 'd love to join some projects but the barrier to entry is pretty high for those of us who ca n't look at a giant mess of code and know whats happening off the bat . 
  `` the architecture of open source applications '' vol 1 & 2 , and `` the performance of open source applications '' ( http://aosabook.org/en/index.html ) are three fantastic free books on this topic . 
  sure , a chapter there will be far too short to actually get started working with one of the reviewed projects , but it 's a great overview of how these applications are put together at a high level . 
  any genre ? 
  then robocode for windows/mac/linux : http://robowiki.net/, 
  you play the game by programming an ai for a robot tank : how to move , when to shoot , etc. 
  and then let your robot fight in an arena against other people 's ais . 
  it 's a lot of fun , and getting a basic ai working is not * too * difficult even without previous programming experience . 
  i do recommend it , it 's something that got me interested in programming back in the day !, 
  a suggestion - when first starting out , match your bots against the * previous * bots you wrote , or a bunch of the stupidest example demos . 
  there are some bots in the examples and online leaderboards that have been written by people with decades of ai research experience and which seem unbeatable . 
  it 's a lot more fun to match against similar-level bots , have a chance of winning , and keep track of your progress as you beat your previous ais or more and more of the simple demos . 
   can you give an example of documents or websites that use this ? 
  all estonian government websites , there is an index at https://www.eesti.ee/eng/services for example . 
  all estonian banks use it as the primary authentication method . 
  the desktop software is available at https://installer.id.ee/?lang=eng , and can be used to sign & encrypt documents . 
  all government agencies , and most businesses accept these in place of paper signatures . 
  but yeah , if you do not live in estonia , and do not want to run a business in estonia remotely , then there is almost no use for it . 
  you could still use the encryption & signatures software - but people outside of estonia would not know what to do when receiving them . 
  at least the videos will be shorter now . 
   * developers offering virtual goods or currencies within a game downloaded from google play must use google play 's in-app billing service as the method of payment . 
   * developers offering additional content , services or functionality within another category of app downloaded from google play must use google play 's in-app billing service as the method of payment , except :, 
  * where payment is primarily for physical goods or services ( e.g. , buying movie tickets , or buying a publication where the price also includes a hard copy subscription ) ; or, 
  * where payment is for digital content or goods that may be consumed outside of the app itself ( e.g. , buying songs that can be played on other music players ) . 
  you can use your own alternative payment method for physical goods without giving google a 30 % cut . 
  but since you have a virtual currency that can be traded between users in the middle ... not so sure . 
  is it a game ? 
  is there anything else people can do with the virtual currency besides buying the physical goods ? 
  if you let people buy and gift vouchers for real-world services ( like groupon ) , then i think that still fits into the allowed rules . 
  a movie ticket is also a voucher for a real-world service . 
  if you have a virtual currency in between , then it 's more difficult to say . 
  i think google might decide it in your favour if the only way to `` use up '' the currency is to convert it into these vouchers . 
  but if the users can also pay for virtual items with the same currency , then perhaps not . 
   i think that the changes would be so extensive as to amount to designing a new rocket . 
  yep , and if you change the engines and tanks , then there is n't really anything substantial of the old rocket left over . 
  the tanks are n't inside the airframe , they * are * the airframe . 
  it 's much lower this year : http://www.heavens-above.com/issheight.aspx, 
  and air density & drag increase exponentially as you get lower . 
  then again , some articles have said that the minimum `` safe '' altitude is 330km , and [ it spent all of year 2005 to 2009 below 360km ] ( http://en.wikipedia.org/wiki/file:internationale_raumstation_bahnh%c3%b6he_\\ ( dumb_version \\ ) . png ) . 
  so that leaves very approximately 700 days until reaching unsafe heights ( lows ? 
   point is , iss is safe from accidental deorbit for the time being, 
  yep , that was my point as well  according to information and numbers i found , it 's safe for about two years at the current loss of altitude rate and supposedly minimum safe heights . 
  everything under 10 % abv used to be a soft drink in russia , but they reclassified beer as alcohol a couple of years ago : http://www.bbc.com/news/world-europe-14232970, 
  well , we a have pretty good idea what a failed f9 landing would look like , since we have two of them on video . 
  somewhat impressive * boom * and a 10-30 meter wide fireball , with some bits of rocket thrown perhaps 500m away . 
  a lot less dangerous than a failure during launch . 
  the browser will not , but the download script will . 
   if the entire global software industry adopted rms 's ideal of making all software free software , i 'm pretty confident that software engineer salaries would plummet, 
  i 'm not convinced . 
  the part of the industry that sells downloadable software to the public , perhaps . 
  but that is a small fraction of the software industry . 
  most software engineers work for companies offering services * using * software , or companies using internal , never-released software . 
  neither of those would be impacted much by going full-rms . 
  for example , reddit source code is public , and you can set up `` your own copy '' . 
  but no copy has gotten close to the popularity of reddit itself . 
  facebook could publish all of their source code tomorrow , and still feel safe in being the only social network that matters . 
  i mean , * google * made it a top priority to compete with them , in my opinion built a social network with better design and usability , but still failed . 
  and i would guess that the majority of software engineers in the world do not work for companies whose software is public . 
  they work for banks , retailers , shipping companies , manufacturing companies , government agencies , and so on , writing internal tools to make the rest of their workforce more efficient . 
  if their software became public , it might be a slight advantage to competitors , but it 's usually far too specialised to the business processes to be useful to anyone else . 
  that 's an interesting point , but i 'm still not sure it matters much . 
  if you are small enough , then nobody but you will care enough about the software to take it , copy it , and release a better-maintained version . 
  and as you grow , you will also be growing your brand , user base , experience in what the users want , and all other advantages over someone who just has the sourcecode . 
  it is * possible * that you might release some great software , and a better funded or more enthusiastic and motivated team sees it , and `` takes it over '' ... but that seems unlikely . 
  if they bothered to do that , they could do it today as well , by just re-implementing the software based on the visible ui ( which is always a * lot * faster and cheaper than building it for the first time ) . 
  linda line ships are fast but very small . 
  they are cancelled due to weather much more often than tallink or viking line , and will feel like a puke machine in `` just barely not cancelled '' weather . 
  i would recommend deciding on the day or last night whether to take linda line based on how the wave heights look . 
  it sounds impossible for it to be pure lsd . 
  that 's not one hell of a trip ... that 's [ 7 billion trips ] ( https://www.wolframalpha.com/input/?i=3*+55+us+gallons+*+%281.2+g%2fcm3%29+%2f+100+micrograms ) . 
  i remember different analogy from some time ago from someone on reddit . 
  to them , sex seemed just like picking your partner 's nose . 
  sure , you can put your finger into their nose if it really makes them happy ... but it just seemed utterly pointless and a bit icky . 
  i 'm a freelance developer , and i have no problem with signing reasonable ndas . 
  these ndas cover customer databases , financial details , passwords , existing source code , and other similar things that i would have access to while working on the project . 
  i sign them after or as part of the main contract that includes `` you pay me x '' . 
  the unreasonable ndas most people are talking about in this thread are for just vague ideas , and expected to be signed before even deciding whether to work together . 
  these add a lot of legal risk without any tangible benefit to the developer .
