  every time . 
  low mmr players are n't stupid , they just suck mechanically and misevaluate how powerful heroes are . 
  they 'll split-push a lane and stay too long because they think they 'll survive . 
  they push the enemy base when they should n't , and wo n't when they should . 
  they 'll try to do roshan when they do n't have the team for it or enough vision . 
  these are all the same thing : thinking the other team or their own heroes are too strong or weak . 
  but they know that they should buy dust when the other team has a riki , ffs . 
  buying a million sentries is nearly as dumb as buying none . 
  that 's actually a bigger mistake new players make : buying * too much * detection , buying loads of sentries , wasting all their money , then not being able to deal with clinkz even when they can see him . 
  supporting is fucking boring at low mmr . 
  at low mmr , if you 're a farming hero , you get to farm all game . 
  you farm when your team is pushing , you farm when your team is fighting , you farm all day . 
  if you 're bad , then you do this on an lc and lose but have fun . 
  if you 're good , then you do this on an antimage , massively outfarm your opponents , 1v5 them and win and have fun . 
  at low mmr , supports are terrible . 
  they buy wards , stand behind a guy in lane that gets 1 last hit every wave . 
  they feed in lane , they get no items , they buy 50 sentries in a game against riki but never get dust , they fucking suck . 
  of course it 's boring supporting at low mmr , even if you are good , but especially if you are n't . 
  so they stop picking support . 
  at high mmr , you actually know how to play support , so of course it 's more fun . 
  high mmr supports pull properly so they get xp ( at low mmr they just stack-pull every single time and get garbage xp ) . 
  high mmr supports roam and gank . 
  high mmr supports get bounty runes and are n't super poor . 
  high mmr supports do n't have a jungle lc in half their games so their lanes do n't suck . 
  high mmr supports support carries that get all the last hits in lane . 
   it is my belief this is used in the matchmaking algorithm in a way where most games have players with low last hits and gpm who are judged to be more inclined to play support . 
  right now that 's you and if that 's not what you want to be doing then you should change those numbers . 
  that 's absolutely not the case . 
   teamfight . 
  at an mmr where everyone is playing some dumb farming hero , if you just have some teamfight it 'll go a long way to crushing your opponents in fights . 
  especially since many of them are likely to not build good items like bkb and will all be poorly farmed so your ultimate will go a long way for a long while . 
  totally agree . 
  even complete retards ( and not everyone at low mmr is a complete retard ) can kill people in a black hole or that have been ravaged . 
   do n't forget that rust has had less than three years as a stable language , which is less than a single c++ standards revision . 
  if rust was the same as c++ , we would have had zero accepted new features , but instead , we 've had many . 
  there are good reasons that c++ works the way that it does , but i think you 're comparing different lengths of times here . 
  except i 'm talking about rust 's current , bad process , not its older , more agile process . 
  it 's clearly slowed down over time . 
   some of the best results in rust 's development have happened when one of the teams makes a proposal , and other people poke holes in it , and we go back to the drawing board . 
  and the best actual results have happened when someone has said ` fuck it , this needs to actually get done ' and cuts the feature down to the minimum possible thing then implements it and it actually gets used by people . 
   there 's a number of pitfalls with this approach , but it is something that happens sometimes . 
  for example , it 's happening right now with coroutines . 
  there in fact are n't pitfalls with this approach . 
   this is simply not true . 
  from a high level ? 
  yes . 
  but there are a lot of edge cases in language design . 
  the fact that we had multiple rfcs with wildly different approaches for just this one feature is in of itself demonstration that it 's not that simple . 
  no , it 's a demonstration that you need to take advantage of ` git checkout - b ` and see which one is actually the best in practice . 
   this is pretty analogous to rust features that have gone through an rfc , but not yet stabilized , like specialization . 
  no , it 's analogous to features that are fully implemented on a branch or fork but have n't been proposed to the committee yet , because * that 's the correct order to do things * . 
  if you have root access you can break things , sure . 
  so do n't give root access . 
  if you have compromised security , then you have compromised security . 
  do n't let security get compromised . 
  a language does n't have to be fucking haskell to be ` acceptable to introduce in 2017 ' . 
   it supports safe navigation ( ? . ) . 
  you mean it supports terrible cascading null problems where it 's impossible to find the root cause of anything . 
  nevertheless you pay based on the amount of water you are using . 
  you are paying for the water . 
  paying for power partially pays for the lines . 
  it also pays for the generation . 
  there 's no real distinction . 
  or not , as well . 
  typescript is okay , but there are lots of reasons not to use it . 
  personally i think that the static typing craze is retarded . 
  guyon repeatedly asked stupid questions and interrupted him as he was trying to explain it . 
  ` staffer ' is n't a word . 
  no , because ` efficient tax system ' and ` government waste ' are neoliberal buzzwords . 
   it 's just that i do n't think labour/greens will do any better - our suicide rate is the same now as it was under the last labour government for example . 
  because it was n't really an issue then . 
  if labour/greens were in power now , and those issues became a public issue of debate , they 'd be resolved . 
  they 'd acknowledge the problem and work to fix it . 
  it 's not that national created these problems or anything . 
  it 's that they refuse to even acknowledge they exist . 
  it 's not ` all about jacinda rather than policies ' . 
  labour is the ** only ** party this election that has focused entirely on their policies and not name-calling bullshit . 
  it 's not the sole factor . 
  what a crock of shit . 
   do you build houses , or apartment complexes ? 
  both, 
   how many rooms will each house have ? 
  depends on the house . 
  build some with 3 , some with 4 , some with 5 . 
   imo we are past the point of giving a house to every one . 
  nope . 
   it 's time to consider more efficient accommodation , such as apartments and studios etc. 
  both, 
   as they were under labour, 
  the previous labour government introduced a load of measures to reduce wealth and income inequality . 
  it was also a completely different set of people with different policies than the current labour party . 
   so was labours ( although the issue was n't as well defined 12 + years ago as it is now ), 
  oh come on . 
  we know much more about climate change now than we did then . 
   because they had to from the gfc , and they also have increased efficiency in a lot of areas but they could be spending more now and are n't, 
  no they did not have to . 
  the best way to get out of a financial crisis is more government spending . 
   `` sat on the sidelines '' is an emotive term but they are presiding over policy that labour created, 
  they have been there for nearly a decade . 
  it 's well past the time they can claim anything is labour 's fault .
