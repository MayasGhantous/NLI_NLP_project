   i like homework assignment interviews . 
  as a remote developer it 's extremely analogous to how i actually work . 
  do you work for free ? 
  because otherwise , it 's not at all analogous to how you work . 
  no , he 's not doing it right . 
  he 's doing it wrong . 
  it 's * morally wrong * to expect people to work for free for you . 
  why would you want to be paid some tiny amount to work for a company in some vain hope of being hired by them when they should be the ones falling over backwards to hire you ? 
  no it is n't . 
  it 's morally and ethically appalling either way . 
  or just hire them . 
  if they are n't any good , then get rid of them . 
  it 's not at all hard to get rid of employees if they are n't matching expectations , even in countries with very strong labour laws . 
  there 's this myth that it 's hard to get rid of poorly performing staff : that 's a myth . 
   look , the test was given for a reason, 
  yes , to get work done for free in an unethical manner . 
   it 's vastly preferable to whiteboarding , as ~ ~ the problems can be larger and actually demonstrate coding style if using a nice open ended problem without a right answer and with design decisions ~ ~, 
  correction : it 's vastly preferable to whiteboarding as it 's an unethical way to get people to do work for you for fre . 
   considering that i want the job, 
  why would you want a job with someone that expects you to work for free ? 
  why would you want a job with someone that expects you to spend your time trying to impress them , when given the low supply of and high demand for qualified and competent software developers , they should be bending over backwards to impress us ? 
   i do better on homework assignments than whiteboarding, 
  i 'm sure you do better when you spend hours and hours of your own free time working on something . 
  that 's hardly the point . 
   plus yeah , there is potential to get paid ,, 
  there was already potential to get paid , but someone that does n't expect you to work for free or employ unethical methods to get people to work for them for free . 
   but i 'm talking more about the setup . 
  me at home on my computer coding something similar to what i 'd be working on with a deadline . 
  that 's how i work , that 's how i want to be tested . 
  it 's not similar if it 's for free . 
  it 's completely different . 
   a great company, 
  a company ca n't be ` great ' . 
  companies are just vessels to make money . 
  they do n't have human qualities like greatness . 
  what 's more , i would n't describe a company that exploits naive kids into doing free work ` great ' even if that were an appropriate sort of adjective to use on a company . 
  only in the sense that everyone is a criminal . 
  i think it 'd be hard to find someone that had made it to adulthood without breaking the law at least once , whether they had a beer at 16 at a party , or they once drove over 30km/h through completely empty roadworks , or they walked across the street other than at a pedestrian crossing . 
  what is ` yous ' meant to mean ? 
   it is n't work , it 's a like a math test . 
  no , it 's not . 
  it 's an assignment . 
  nobody has a problem with going to an interview and being expected to do a test . 
  i 've been to interviews and done tests , they were fine . 
  the issue is going to an interview and being expected to come back in a week with something done . 
  no , sorry , you can get fucked . 
  that 's unacceptable . 
   honest question : do you pay candidates for their time during interviews ? 
  if no , how is this different to not paying them to do a homework assignment ? 
  because the ` assignment ' is work : it 's assigned by a company to someone for them to work on , it benefits the company , it has a deadline , it 's the same thing they 'll be working on when they get to working there . 
   companies i 've seen who ask for homework assignments are handing out a standard exercise ; this is n't something the company expects to take , use , and make profit from . 
  it 's a way of assessing a candidate 's abilities , much the same as an in-person interview . 
  that 's not common . 
  usually it 's `` implement this thing according these specifications , which totally is n't actually a real contract we have or anything '' . 
  if it 's just a `` standard exercise '' that 's clearly much less offensive , but it 's still offensive to expect people to work in their own time for hours and hours and hours for the ` opportunity ' to work for you . 
  working for someone is n't an opportunity for the employee . 
  employees are equal partners in their employment contracts . 
  frankly , the only people that will be fooled into doing this are young kids . 
  so all you 're doing it filtering out people that are too savvy to work hours of their own time for free to ` impress ' some company given the low supply of and high demand for software workers . 
  that 's usually not true : it 's very often actual production software . 
  even if that is true ( and it usually is not : most companies doing this are doing it to get people to work for free ) , it 's still moronic . 
  you 're filtering out everyone with enough experience in the industry to know they do n't have to be fucked around like this . 
  you 're basically restricting your hiring process only to naive kids that think they have to ` impress ' companies . 
  oh can you just * stop * ? 
  rust is absolutely the opposite of python . 
  it 's mostly famous for its annoying advocates on reddit . 
   if unspecified , the array will be created above ( though in this context , prefix via @ at the least for ruby ; in python you have to carry explicit self all over everywhere which is an awful solution imo ) . 
  it 's been explained dozens and dozens of times why explicit ` self ` was a good idea . 
  no that 's false . 
  type annotations are n't legal javascript syntax . 
  but they are legal python syntax . 
  type checkers and static analysis tools work on top of existing python syntax . 
  typescript invents new syntax . 
  that 's totally different . 
   if you like things being more explicit , there are much better languages than python for that . 
  ` being explicit ' is a core principle of python . 
  it 's widely regarded as important by python 's community . 
  python is very explicit . 
   secondly , this is absolutely horrid . 
  what you 're showing here , most good languages accomplish with interfaces , protocols , traits or whatever they 've chosen to name it . 
  bad languages , you mean . 
   okay , mr instant down voter . 
  care to explain why polluting the base namespace with trash functions that act on and require specific state/behavior without any indication of that is a good idea ? 
  nobody is actually saying that you should write that code above , it 's just an example of how things work . 
   i know python itself breaks basic good design principles surrounding this , but that does n't make it a good idea . 
  no it does n't . 
  stop assuming that ` java does this ' and ` this is a good idea ' are synonyms . 
  then do so . 
  that 's * entirely * possible in python . 
   there 's no such myth . 
  are you thinking of union jobs , like teachers or police ? 
  there are countries other than the united states , if you were n't aware of that . 
  in those countries , firing people is seen as ` hard ' . 
  it 's not like the us where you can just say ` you 're fired ' and they have to leave . 
  you have to have a reason to fire someone , you have to warn them that they 're working in a way that will lead to them being fired , and you have to give them an opportunity to improve . 
  the only way you can fire someone on the spot in most countries is gross misconduct : things like physical or sexual abuse , theft , embezzlement , etc. 
   the reason people do n't want to hire the wrong candidate is it 's an expensive mistake . 
  does n't really matter if you think that . 
  the reality is that if you want to ` give someone a shot ' you should give them a shot , not get them to do unpaid work until you 're confident they 're worth paying . 
   a lot of people have a problem with doing a coding test in front of people .
