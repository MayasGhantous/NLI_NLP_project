  i get she 's really rude and crazy but how is public shaming allowed , should n't she have face covered on screenshots ? 
  teach me master, 
  this . 
  making restraints in languages and frameworks always had a purpose of keeping noobs in some borders of sanity , not making experienced devs uncomfortable for no reason . 
  yep it 's a plague in our modern internet , i have no idea how watching videos became easier than reading texts that take 10 times less time and have the same content . 
  i guess writing takes too much effort . 
  which compiler does that ? 
  genuine question . 
  i 'm sorry but this is a nonsense . 
  i ca n't comprehend amount of properly done css i would need to write in order to have some class names overlap . 
  this is some super edge case that does n't justify wrapping your entire codebase around it . 
  what if i do n't * want * the world to work ? 
  can you tl ; dw ? 
  i do n't really watch videos and i 'm interested in what it has to say . 
  yay let 's use another mysterious add-on that is n't included in framework because apparently * media queries and pseudoelements * are not that necessary ... 
  this is just not true , angular vs react vs ember vs vue is not some random people battle , it 's purely front-end devs ' battle . 
  they 're still separate technologies and i think it 's important to recognize that they are very different and handled by browsers in entirely different ways . 
  it lets you understand what will be efficient . 
  i thought the react way is specifically not to use ( much ) styles outside of components written in js . 
  lol i do n't know who are you working with but i certainly do n't see people who argue jquery is the best way to do frontend around here . 
  you can use css in js without a framework if you are really determined ... that 's not an argument , if react advises using css in js components and has some system that supports that , then it should also support media queries and everything ... 
  it 's not about keeping you from doing things you want to do . 
  it 's about keeping you from doing things nobody wants to do but you do n't know about that yet . 
  haha seriously , who even thought this kit is a good idea . 
  there 's no such item, 
  ( seriously though , this is correct , yasuo was n't that crazy popular last season i believe , it was all tank ekko and such ), 
  how is a few combos an `` insanely high skill cap '' ? 
  seriously we need to stop that bullshit , he has a zillion tools to make up for his and teammates mistakes , with r q combo he does n't even have to make effort to land his only skillshot , he has no mana to manage , his numbers are top tier , he is strong early game and snowballs . 
  what is so hard in this champ that ca n't be learned in half an hour custom ?? 
  remove lee sin from the game . 
  do you think the meta will suddenly change completely ? 
  if no , then what are you crying about ? 
  if yes , then how the fuck is his existence not a problem ? 
  go on, 
  for what it 's worth i also kind of agree , getting a gift like this would feel great but terrifying . 
  `` a concern '' is not always `` to render a thing that has some data and which will behave such and such '' . 
  it can be also `` pull some data for later use '' or `` compute some things in a way reusable in many parts of the app '' , this is the reason we invented services , factories etc. 
  i think it 's very shallow to assume the frontend is all about what renders and absolutely nothing else . 
  most apps will have some `` frontend backend '' part . 
  if you put all this logic to templates/components it will be a huge huge mess . 
  are there any service-like things in react ? 
  react or angular or ember, 
  mind you , it 's a very important question, 
  beeeep wrong answer , you will be forever alone sorry, 
  `` a concern '' is not always `` to render a view '' . 
  it 's also `` to be able to use abstract , html-less logic '' that helps to do similar things in many parts of application , this is why we invented services in the first place . 
  rails tried to go the same way , but server-side . 
  now did you try to develop anything bigger in rails ? 
  it 's a mess . 
  so without external libraries you ca n't actually do anything reasonable in react , can you ? 
  why is everybody treating it like angular/ember alternative then ? 
  you should not talk about react then , more like `` react ecosystem '' . 
  there is only react and jquery , no other ways . 
  css ( ok , tbh , with sass additional functionalities ) is an awesome language . 
  most people who complain about it do n't even know what they are exactly complaining about . 
  what is it then ? 
  `` a react component '' is not an answer . 
  yes this is normal to have a lot of developers who know different frameworks but all know html and css . 
  you can be great at js and still do n't understand a thing about react so if you suddenly need to change some view in the middle of the project you 'll be in trouble . 
  when i write components in ember , js code is not dependent on html in any way . 
  js computes some data . 
  html displays this data . 
  js does n't know anything about html . 
  html does n't know anything about js other than it has to get from it some data . 
  there is interface between html and js , yes , but they are in no way dependent on each other in terms other than sharing the same data . 
  it 's like saying frontend and api are somehow * dependent * on each other . 
  okay what has server-side and browser-side rendering to do with `` one file '' issue ? 
  i do n't get that point , server-side rendering is possible with react as well and considered better actually . 
  how is that difference between react and php `` one file '' problem important at all ?? 
  literally only difference between php or rails `` component '' and react component is server-side rendering and interactiveness . 
  which does n't have anything to do with code quality . 
  so as a developer i can have a concern `` to render something '' but for example `` to pull some data from api '' is already implementation detail ? 
  seems like a stretch . 
  you can make everything shallow , in this narration basically every concern of every app ever is only `` rendering some things and some data in some way '' . 
  this is just not true . 
  the only difference between webapp and website is increased interactiveness . 
  i am implementing web applications for a living . 
  i was working in pure server-side rails applications before . 
  this was considered a standard actually a few years ago . 
  or another example , not-single-page , zero-js online store , there 's like millions of them - would you consider them web applications ? 
  webapps ' interactiveness means only that data is saved and displayed accordingly to user 's actions . 
  it was possible 20 years ago in php and html forms already . 
  you could argue back then that `` styling and structure are meaningless on their own '' as well . 
  somehow people figured out exactly opposite thing . 
  and i think we should learn on their experiences . 
  and a great cover of scarborough fair . 
  how is this not clever ? 
  it does n't belong in this sub . 
  this is great stuff , thanks . 
  have you tried the internet archive ? 
  you know , i do n't think that 's true . 
  most complaints are legit . 
  i was really trying very hard to use the new client , but on my potato it takes 2-5 seconds to animate and load every page after clicking a button . 
  this is very uninteractive and feels awful . 
  also the new client once did n't allow me to pick a champ at all , and once did n't let me know i 'm dc and my team remaked . 
  i switched back to the old client not because it is old and i 'm used to it , but because it , like , actually works ( for me ) . 
  there 's a saying that a good user interface is the one that is transparent . 
  if after a few days of getting to know a new app there 's still something that 's annoying and abrupts your user flow , it means the app is in the wrong , not you . 
  we should n't pay for our space . 
  this will only teach billboard owners that it pays to steal space from us .
