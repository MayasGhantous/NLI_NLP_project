  the n900 did n't have any such restrictions , and i used it without a problem for 1 1/2 years . 
  i even bought it from a carrier , and they even advertised it as a modern media phone . 
  i 'm sorry , but i highly doubt the reason you stated . 
  to run whatever you want without having to root the device ? 
  almost certainly , at least judging by the impression i 've gotten of jolla and their planned devices . 
  i 'd be surprised if it does n't ship with a terminal emulator pre-installed -- after all , the earlier maemo devices did ( well , at least the n900/fremantle -- that 's the only maemo device i 've owned ) . 
  learn how to work around reddit 's markdown parser to fake continued enumerations . 
  [ why not both ? 
  ] ( https://github.com/alols/xcape ) -- works great for me . 
  also , & is appended and not prepended to background a process . 
  oh , okay , that 's a fair reason . 
  just pointed it out for the sake of complete ness . 
  that must be it . 
  awesome alliterations are awesome . 
  disgaea ds . 
  for collecting purposes , maybe the demo version of metroid prime : hunters ? 
  mr. driller : drill spirits is a pretty fun game , too . 
  than *, 
  and code golf . 
  but . . but . . how am i supposed to implement a vi clone now ? 
  ^ ^ just ^ ^ kidding . 
  ^ ^ sounds ^ ^ like ^ ^ pretty ^ ^ neat ^ ^ controls , ^ ^ actually . 
  i assume rufus_touchdown was referring to the [ original game ] ( http://en.wikipedia.org/wiki/cave_story ) by pixel , which is indeed free . 
  there 's also / r/touhoumusic ; they might appreciate it more than / r/gamemusic . 
  in addition to the replies you 've already gotten , [ wikipedia is your friend ] ( http://en.wikipedia.org/wiki/corrupted_blood_incident ) . 
  well , given that the dot pitch on the xl is larger ( thus , pixels appear bigger ) , it 'll look closer to what it 'd look like on a regular ds at least . 
  `` better '' is subjective ; for pixel art-heavy games you probably want the bigger pixels . 
  i think * we 're * supposed to ask the questions . 
  iv works solidly in wine , and i 've had success with v as well . 
  ii works after some fiddling . 
  ( though , i too would love a native linux version of civ . ), 
  well , depending on the language recursion could be a great tool and often very idiomatic . 
  though , maybe not in python ( do python optimize tail-calls ? 
  i 'm sort-of using a similar workflow with vim . 
  it happens very often that i live in the shell and occasionally ` vim somefile ` to do a quick edit and then ` : wq ` out of it . 
  that 's not to say that far manager does n't sound pretty cool -- it does -- but even with other editors i think you can actually have a similar workflow ( without having to do it `` from the editor '' , so to speak ) . 
  and i like the [ xor linked list ] ( http://en.wikipedia.org/wiki/xor_linked_list ) , probably for similar reasons . 
  not exactly a data structure per se , but rather a mathematical concept . 
  it looks to me like a [ triangular matrix ] ( http://en.wikipedia.org/wiki/triangular_matrix ) , and the index function basically allows us to pretend that it is instead a [ symmetric ( square ) matrix ] ( http://en.wikipedia.org/wiki/symmetric_matrix ) but still only store/update half of it . 
  neat , clever application of it !, 
  i 'll have to keep it in mind . 
  you usually use caret + uppercase letter for the control characters ( ascii 1-26 , sent with ctrl + [ a-z ] ) . 
  i think most terminals actually send the same sequence whether or not you use shift in that case , but in this case it 's just notation . 
  many keyboard layouts have keys like \u00b4 ` ~ \u00a8 ^ be '' [ dead ] ( http://en.wikipedia.org/wiki/dead_key ) '' , which means that if the same key is pressed twice , that character is produced , but you could also follow it by another key to produce letters such as \u00e1 \u00ef \u00ea and so on . 
  this is often the case even when the specific language that the keyboard layout is for does n't have any use of those diacritics . 
  i * think * the us-international layout is also like this , if you 'd like to try it out . 
  i thought the wiki article summarized it pretty well . 
  you could think of it like this : in order for software ( i.e. 
  3ds games and stuff downloaded from eshop ) to run , it must first be `` signed '' using a bunch of secret keys . 
  the 3ds firmware ( the `` os '' of the 3ds ) checks that all software is genuine by running a bunch of checks on it , such as checking that it 's signed with correct keys and so on . 
  we do n't know how this check works , so we do n't know how to make software seem genuine and therefore allow the 3ds to run it . 
  these things are likely implemented in hardware ( that is , not as ones and zeroes in some sort of memory , but instead as a bunch of hardwired logical gates ) , which makes it tricky to `` spy '' on it and figure out how it works ; that 's why we need this decapping process . 
  ( this is based on my somewhat crude understanding of the process , so i might be a bit off -- i 'm more of a software guy than a hardware guy , really . 
  hopefully it 'll help a bit ... ), 
  so , tl ; dr it 'd ( probably ? ), 
  allow us to write and then run custom software ( programs , games ; that is , [ homebrew ] ( http://en.wikipedia.org/wiki/homebrew_ ( video_games \\ ) ) ) , similarly to how anyone could write a program for a computer but with the difference that the 3ds provides a lot of cool , fancy and fun hardware . 
  oh , and maybe it should be mentioned that afaik there 's already homebrew scenes for all nintendo consoles older than the 3ds back to nes . 
  namely , in the first case the stress is on the second ` a ' , and in the second case it 's on the first ` a ' . 
  i 'd add some fancy ipa , but i 'm not proficient enough to do so and too lazy to look it up . 
  nice !, 
  i was thinking `` helix '' , but did n't realise how it would make sense . 
  i 've always been fascinated by the word '' [ archaeopteryx ] ( http://en.wikipedia.org/wiki/archaeopteryx ) '' and figured it must be etymotologically related to `` helicopter '' , so i figured the '' - pter '' part had to do with flying . 
  i think i did decently at least . 
  ( though , i did worse with `` archaeopteryx '' actually , thinking - aeo - was from `` aero '' ... ), 
  i have n't put my hands on the xl version . 
  the original fits my hands pretty well and i generally prefer smaller pixel pitch , so i 'll stick to my original one . 
  the issue here is `` torrent '' being used to mean both `` upload '' and `` download '' , which is unnecessarily confusing . 
  in this case it 'd be in the `` upload '' sense ( i.e. 
  to create a torrent ) . 
  extra bonus for me since the local commuter train service is called ... you guessed it , '' [ sl ] ( http://sl.se ) '' . 
  i think i 'll have to make a custom ` sl ` binary some day to fit their style ... 
  oh , and i seem to make the particular typo ls =  sl far too seldom , considering that i 've had ` sl ` installed for years and only seen it a few times . 
  ( i do make other typos more often though . 
  i created this one somewhat recently , but i use it way too seldom . 
  :( feel free to suggest a better alternative . 
  function mkdircd {, 
  mkdir `` $ @ '', 
  cd `` $ { @ [ $ # ] } '' # ( that is , last parameter ), 
  and this one 's occasionally useful for vimmers accidentally trying to use ` : h ` outside of vim :, 
  function : h {, 
   her family history is n't for the faint of heart , either [ ... ], 
  i would n't mind ( either of ) you to expand a bit on this ( assuming , of course , that you 're both fine with it ) . 
  well , the point is still valid since hashmaps allow for ( amortized ) contant-time lookup and insertion ( to my knowledge at least , albeit it 's a bit limited ) . 
  and , of course , a mapping using a dictionary would probably also lead to cleaner code . 
  with an array you do n't have `` direct '' lookups , so you 'd have to start at the first element , check if its word is the right word , and then continue down the array until you find the right word . 
  on average you 'll have to travel halfway down the array to find a given word . 
  hence , linear time ( that is , o ( n ) ) . 
  i 'm not sure what you mean by `` long lookup '' here . 
  fear not , for ` sl ` is , in fact , in the aur . 
  you * do * have an aur helper , do n't you ? 
  aha , i see what you mean . 
  since this depends on how python 's dictionaries and arrays are implemented , i 'm not sure if i can help you with this . 
  the thing you are talking about is the * insertion * cost , by the way . 
  now with 99.9999 % more hats !, 
  hey mp ? 
  twist yoshis !, 
  a mean lair : n hangs great goron . 
  ^ ^ i 'm ^ ^ no ^ ^ good ^ ^ at ^ ^ this . 
  ( om reddit l\u00e5ter en mata in ` input ` - element i sidebaren s\u00e5 finns det workarounds dock . . ), 
  fwiw i 'm looking forward to at least one non-nintendo title on the wii u ( ninja gaiden 3 ) .
