  i 'm pretty sure the amount of water compared to the amount of tea is also a factor . 
  at least , if i brew according to the `` correct '' brewing time and temperature i more-or-less get hot water , in my experience . 
  but then again , maybe i just prefer my ( black ) tea a bit more bitter . 
  part of it could be that the japanese and international cards have different backs . 
  rather than allowing other cards with the same backs but different languages but forbidding japanese cards , a rule forbidding all foreign cards might 've been easier . 
  am i the only one surprised that they laser a full keyboard at once like that ? 
  intuitively i 'd feel it 'd be more efficient to have one machine lasering a 's , one b 's and so on and then assemble the keyboard afterwards . 
  at least when producing keycaps in quantities like that . 
  i think that 's infeasible for technical reasons , unfortunately . 
  at least if my understanding of how streetpass works is correct . 
  i do n't think so ? 
  as i understand it streetpass works by having the 3ds host an access point with weird settings so that it does n't show up as one for most other devices , and periodically probe for access points in the vincinity . 
  i guess while it would technically * be possible * to host an access point , i 'm not sure if it 's common to support the modes that they use for streetpass . 
  i do n't think bluetooth would help ; i 'm pretty sure the 3ds does n't support it so it would n't be able to actually streetpass anyone . 
  that looks great and all , but it would be nice if i could scroll the website so i could read the rest of the text . 
  any ds game which does n't contain dsi features ( e.g. 
  not pok\u00e9mon b/w and b2/w2 , iirc ) . 
  for instance i 'm european but have a us copy of disgaea ds , and it works like a charm on the 3ds . 
   is it possible to have a package manager on it and use it like a typical distro ? 
  when you enable `` developer mode '' in settings , it installs a terminal emulator and some tools ( vim , ... ) . 
  there 's a command-line interface to the package manager via ` pkcon ` , and there 's also a ` mer-tools ` repo that 's easy to enable and provides various useful standard tools . 
  for instance , i installed gcc earlier in the spring and used the phone as a build server during a compiler construction project for a university course . 
  so i 'd say it 's usable more-or-less as a typical distro . 
  yeah . . 
  i 'd say something like 2-3x the goal would be more likely . 
  wah , colour me envious . 
  i wish we had something like this in stockholm . 
   and when you 're free to consume and to use, 
   we will service you with everything we produce, 
   take it or leave it but know this one truth, 
   we market this freedom for you, 
   live free or die, 
  i only found out today about lsattr and chattr . 
  thanks !, 
  an exception , apparently . 
  high five !, 
   i went to a swedish christmas market in rotterdam, 
  but then we * did * export that stuff , no ? 
  [ 1 ] : http://grycksbobox.se/image/cache/data/produkter/100-serien/l113-00%20frilagd_rsz-500x500.jpg, 
  i imagine to a large part the english proficiency is n't as good * because * the central-european countries insist on subtitling things ... 
  i know i picked up a lot of my english from video games/tv , at least . 
  seems to work for me , at least . 
  it could use user input and number of frames between key events as sources . 
  if it uses something like the joystick 's exact coordinates to add entropy , it 'd be pretty hard to abuse it , i imagine ( but then again , i know nothing about oot 's actual prng ) . 
  there 's also / r/touhoumusic , for more touhou arrangements . 
  i can also recommend [ gensokyo radio ] [ 1 ] and [ touhou radio ] [ 2 ] . 
  check out the [ schedule ] ( https://gamesdonequick.com/schedule ) on the official page . 
  maybe not so much on android , but for desktop emulators a good reason for aiming for perfect accuracy is tases and homebrew development . 
  in both cases it would be bad if something works in the emulator but not on the real hardware . 
  disgaea has plenty of pieces like that , for instance [ whisper of hell ] [ 1 ] , [ beautiful round dance ] [ 2 ] and [ disgaea ] [ 3 ] . 
  if you want to go that way , plenty of touhou ost has a bit of a classical feel as well . 
  [ 1 ] : https://www.youtube.com/watch?v=watgvzecbkw, 
  [ 2 ] : https://www.youtube.com/watch?v=cnosul-vdsu, 
  [ 3 ] : https://www.youtube.com/watch?v=e8g4hlzspsw, 
   one in particular sung in a constructed language, 
  on that note , the songs from ar tonelico sung in hymmnos have a very orchestral feel : https://www.youtube.com/watch?v=avuitvmshve, 
  curious , what is his connection to apl ? 
  i have n't heard about this before . 
  another neat one for pdfs is ` katarakt ` . 
  one note though , this is n't a disassembler ; this is a compiler . 
  it translates from a high-level language to a lower-level one . 
  i suppose you 're right . 
  based on the quote in / u/fgda 's reply , i guess dmd outputs an object file directly rather than going via assembly language . 
  still , i 'd say it 's more of a compiler than disassembler , but i really do n't want to start a terminology bikeshed ( especially when the terminology is a bit fuzzy sometimes ) so i 'm happy to settle with either . 
  how come these are different , if the initial state is the same ? 
  * [ encode : a ] ( https://www.reddit.com/r/codes/comments/2sysuk/followup_reddit_interface_to_challenge_cipher/cnwi80r ), 
  * [ encode : a ] ( https://www.reddit.com/r/codes/comments/2sysuk/followup_reddit_interface_to_challenge_cipher/cnurn3w ), 
  k\u00e4lla / intressant post p\u00e5 \u00e4mnet : [ 24/192 music downloads ] [ 1 ], 
  [ 1 ] : http://xiph.org/~xiphmont/demo/neil-young.html, 
  [ 1 ] : https://en.wikipedia.org/wiki/vacuous_truth, 
  sure . 
  i can play some less demanding games on my three-year-old , quite poorly-spec 'd laptop with intel 3000 graphics . 
  they 've made * a lot * of progress from around last summer , so i recommend giving it another try . 
  of course ymmv depending on how demanding the game is and such . 
  i like it ( visually ) simple . 
  * [ screenshot ] [ 1 ], 
  i should clean this up a bit . . but not tonight . 
  [ 1 ] : http://xen.firefly.nu/up/prompt.png, 
  [ 2 ] : https://bitbucket.org/firefly/dotfiles/src/tip/zshrc?at=default#cl-52, 
  [ 3 ] : https://bitbucket.org/firefly/dotfiles/src/tip/zshrc?at=default#cl-25, 
   tiling wms instead of floating wms, 
  i think this is mostly `` weird '' because it 's not what people are used to and familiar with . 
  like others have said , in part it is about maximizing screen space . 
  having windows that overlap seems wasteful , so instead of manually resizing windows to have them not overlap , why not have the computer do it for you ? 
  that 's roughly my take on it , anyway . 
   terminal apps instead of graphical apps, 
  i 'm a bit out of the norm here ; i do n't use only ( or even primarily ) terminal-based applications . 
  for instance , i use a graphical mail client ( though , it 's in part because i have n't bothered to teach myself mutt yet ) and for music i use a bit of ncmpcpp and a bit of of cantata ( both mpd clients , one curses-based and one graphical ) . 
  for me it 's mostly about maximizing utility -- if i find a graphical program does a better job , so be it . 
  on that note , * command-line * programs often provide better utility simply because they compose well with other tools . 
  for that reason i often end up in the shell when i want to inspect and manipulate data : i can easily form pipelines and shuffle the data around the way i want . 
   panels without launchers ( heck , how do you even start programs ? ), 
   windows without decorations ( how do you even close windows ? ), 
  others have answered these , but i want to add that `` runner '' programs like kdes krunner or the gtk-based gmrun are available in graphical environments as well . 
  iirc alt + f2 is a common shortcut to invoke it , though many tiling-wm environments tend to use win + r ( just like the kind-of-lousy windows `` run ... '' runner dialog ) . 
  i started to love runners long before deciding to try a tiling wm , so perhaps that 's a good starting point . 
  the core idea is quite similar : rely more on the keyboard and less on graphical icons -- write the first few characters of the program you want to start and press enter , instead of searching through a start menu for the right icon . 
   what kind of shortcomings are there in computing like this ? 
  it depends a lot on the tiling wm in point , of course , but some programs are inherently designed for floatingmode use , which can present a hassle . 
  the multi-window gimp interface is the canonical example , but even something as simple as popup dialogs can prove a hassle .
