  the course i took was relatively backend-heavy , so while we used parser generators for the parsing ( although we had to understand basic parsing theory ) we had to write our own backend and emitters ( emitting assembly to hand to gnu as ) from scratch . 
  it was a ton of fun , easily one of my favourite classes , but indeed quite hard . 
  can we settle with emacs being technically superior , but editing text with it requires at least three hands unless you install evil ? 
  it 's probably inspired by nuclear weapons and uranium ( well , it seems pretty straightforward ) , but i do n't think the parallel has any deep meaning to the story . 
  i think it 's important to distinguish between the case with basic pokemon in pokemon and creatures with a special effect magic . 
  in pokemon , the reason for starting play with cards already in play is closely tied to the `` primary '' winning condition ( in the sense that the game was presumably designed around it -- you lose if you do n't have any creature in play ) . 
  on the other hand , in magic it 's `` just '' a bonus . 
  i do n't think either case is necessarily bad , but i think it 's easier to motivate if it 's part of the core design rather than an `` extra '' thing bolted on top , so to speak . 
  i personally think it works out really well in pokemon , but it might just be nostalgia speaking/bias , since i grew up with it and it was the first tcg i played . 
  hmm , it 's too bad that there 's no way to update the firmware from os x or linux . 
  `` foo '' forces it nowadays ( in addition to being treated literally ) . 
  + foo specifies a google + page to search for or something , is the idea , but nobody uses it . 
  why do you want to run around with more cash than that ? 
  as a local , i tend to pay almost everything with debit card anyway , although if i do carry cash it 's usually less than 1000 sek . 
  alhoug then again , personal preference . . 
  [ 1 ] : http://www.gnu.org/fun/jokes/ed-msg.txt, 
  one ? 
  there 's dozens of them !, 
  dwb , qutebrowser , luakit , uzbl to mention a few . 
  vim is n't exactly minimal in that it has a whole lot of built-in functionality if you actually go looking for it , such as a built-in file browser plugin ( netrw ) or support for editing gzip/zip compressed files , or spell-checking related functionality . 
  i always liked the way vimgor puts it :, 
  < vimgor  in normal mode , all of these keys can move the cursor : ` # $ % ^ * ( ) 0 _ - + w w e e t, 
  < c-h  < c-i  < c-o  < c-t  < c-u  < c-y  - learn to use all of them . 
  note that op 's case is n't exactly rectangular , so there are n't num ^ order indices , and i do n't see how one could use modulus and division in this case . 
  the rectangular case is a bit interesting though , it turns out that `` flattening '' an index into a rectangular array , nested loops , and radix conversion with a mixed base are all essentially the same thing . 
  but i 'm going a bit off-topic here . 
  you 're missing something . 
  ` * ` is the `` next match '' command -- it repeats the previous search . 
  ` # ` is the `` previous match '' command -- it repeats the previous search , but in the opposite direction . 
  you could 've asked vim instead of me : ` : help # ` :-) ( while we 're at it , reading ` : help ` to learn how to navigate the help pages is very useful . 
  treat vim 's help as you 'd use manpages in the shell , basically . ), 
  i 'm not very extravagant or fancy , but i tend to consume a pot ( ~ 2l ) a day , usually earl grey . 
  i think i 'm addicted to tea too . . 
  2 , maybe it 's worth mentioning that initially the game was run by wizards of the coast . 
  the switch to tpc happened right before the ruby/sapphire sets , i believe . 
  while that is true , let 's not forget that there are lots of other parameters impacting performance other than clock frequency . 
  cache sizes and performance , new instruction set extensions and other architectural improvements probably do matter . 
  yeah , scotland as a whole probably would n't count . 
  shetland and orkney might be more similar than you 'd think -- for instance , they used to speak [ norn ] [ 1 ] which , if you look at the sample text , is n't too far off from our modern languages and quite comprehensible . 
  yes !, 
  i have a flat , thin piece of rock that i found almost 15 years ago on a beach in portugal , which has served as a coaster ever since . 
  well , you ca n't rename the existing functions , but as mentioned above you could design a new , separate standard library that is more modular and oop-oriented , and mark the old functions as deprecated . 
  which is basically improving it while retaining backwards compatibility ( with the old functions being an ugly wart , but . . 
  i guess it 's a necessary evil ) . 
  nice video , seems like it 'd serve as a good introduction to apl . 
  well , the idea is that you do n't strictly break compatibility with the ( `` old '' ) standard library , just heavily discourage it . 
  i agree that you basically get a new language in some sense , but with some luck there 's less resistance to use these new functions instead of the old , deprecated ones , than there is to move to a completely new language , for people who * do * write php code . 
  huh ? 
  [ 1 ] : https://en.wikipedia.org/wiki/markov_model, 
  [ * envy code r * ] [ 1 ] as monospaced font for code/terminal usage . 
  i like the shape of the letters , and perhaps most imporantly , the characters are well-hinted and stay sharp , which i find important personally . 
  boldface is also clearly distinguished from regular weight , while still being comfortably readable in a terminal . 
  [ * linux libertine * ] [ 2 ] is an all-around neat serif font , i think , with some very pretty ligatures . 
  i used to use the maemo ( fremantle ) distro on the nokia n900 , which ships with a proprietary nokia font called * nokia pure * ( i think ) which i thought was quite pretty for ui . 
  [ 1 ] : https://damieng.com/blog/2008/05/26/envy-code-r-preview-7-coding-font-released, 
  nod . 
  that , and lacking a few box-drawing characters ( rounded corners , thick lines ) are the only drawbacks , really . 
  one could still make a font with only the missing characters and make use of fallback for missing glyphs . 
  or , i assume , add the missing characters for personal use . 
  but yeah , it 'd be nice if one could distribute a fixed-up version of the font ... 
  `` small '' , heh ... j is a rather dense language , in the sense that something like conway 's game of life which is usually expressed in maybe 40-50 lines of code in a typical imperative language would fit comfortably in a oneliner . 
  with that in mind , without having dug any further into the code you posted i think it 's fair to say that the php would be fairly sizable . 
  the formatting is quite messed up . 
  it would be useful if you could fix that -- you want to insert four spaces before each line of code . 
  do you know/remember where you found the code ? 
  maybe that information would be useful as well if somebody wants to tackle this . 
  here 's a tip when searching for high-res images using google : when you do an image search you can select a minimum resolution under `` search options '' . 
  here 's what i found : [ ( u ) ] [ 1 ] [ ( e ) ] [ 2 ] . 
  i did n't have much luck with the back/spine , unfortunately . 
  edit : found some slightly higher-quality images ( less noticeable compression ) . 
  [ 1 ] : http://psvhome.ru/uploads/posts/2014-07/1405180778_atlus_disgaea4_vita_cover.jpg, 
  [ 2 ] : http://www.jcuri.com/wp-content/uploads/2015/03/2_d4apr_uk.jpg, 
  yeah , i believe that is the case . 
  although , i also think that if you * do * dump the game yourself , you should be completely in the clear . 
  nintendo does n't seem to think this is the case , though . 
  ( i do realise that it 's likely piracy is much more common than private dumping , though . . ), 
  well said , i agree completely . 
  i think it 's silly to make the distinction upon whether the audio is in-game audio or spoken over as to whether it is a derivative work or not , but you 're completely right that in the end what matters is the court 's interpretation of law . 
  nice catch . 
  it 's probably a lot easier to write a prolog interpreter in php from scratch ( although it 's beyond me why one would need this anyway ) than try to translate the j one either way , given the paradigm mismatch between them . 
   when you try different languages , it helps you think in very different ways , all the great programmers know more than just on language . 
  i second this , and would like to emphasize that it 's even moreso rewarding to learn different * types * of languages -- those belonging to completely separate paradigms . 
  try out a functional language , a concatenative one , maybe an array-oriented one , or why not try some logic programming ... 
  yeah . 
  i think the gem might 've been what surrounded his head , but i thought it was a bit weird too . 
  did you have less than 32 mb of ram ? 
  i think they were disabled by default then . 
  well yes , that 's the `` pretty straightforward '' or obvious part . 
  i also stumbled upon this updating an out-of-date system ( i know , i know ) . 
  for me , explicitly upgrading archlinux-keyring did the trick . 
  btw , should that really be ` pacman - r ` ? 
  i ca n't find that in the pacman ( 1 ) manpage ; it looks like you might 've meant ` pacman-key - d ` ? 
  multiple categories for one game , i think that 's fine if one of the categories is a really short run ( i enjoyed the sm64 0-start race this agdq , for instance ) . 
  ( i 'm really just a viewer though , i do n't speedrun anything myself , so i 'm not sure how valuable my input is . ), 
  i tend to do it quite frequently in vim using its ` virtualedit ' option ( can navigate outside of the actual buffer content , and inserts spaces on demand if you try to edit to the far right ) , ` r ` and ` r ` commands and ` ^ v ` visual-block mode to change e.g. 
  an entire border at once . 
  also copy-pasting in visual-block mode helps a lot , too . 
  for a moment i thought this was posted to / r/boardgames ... polandball + boardgames is probably one of the subreddit crossovers i 'd expect the least . 
  fun fact , if/then in the programming language j ( and possibly apl , i do n't know ) is sometimes indicated by raising a function to a power of 0 or 1 , mapping to false/true ( where function power is defined as repeated composition of a function with itself ) . 
  the identity of repeated composition is , well , the identity function , and thus ` f ^ :0 ` is identity and ` f ^ :1 ` is just f -- voil\u00e1 , a conditional !,
