  but you can make a form that submits to google or something ), 
  * some explanation of the more obscure tags , and when to use them ( definition lists , address , colgroups , etc ), 
  * some basic history , and information about doctypes ( html4 .01 vs xhtml vs html5 ) . 
  standards vs quirks mode/strict vs transitional . 
  include a recommendation of what to use day to day ( i 'd say html4 .01 strict since it does n't require any hacky things , but you might prefer html5 for its simplicity ) . 
  * what a complete page looks like ( covering doctype , head , meta tags , title , body tag , etc ), 
  move on to css :, 
  * css : what it looks like and what it does, 
  * a simplest-possible css `` hello world '' example, 
  * simple styling stuff ( text styling , colours , background colours , etc ), 
  * example of a simple page styled using basic selectors and simple styles, 
  * the box model : width , height , margin , padding , borders ( how that affects block vs inline tags ), 
  * more advanced stuff ( bg images , bg positioning , when to use bgs vs img tags ), 
  * external stylesheets ( how that affects relative urls ), 
  * example with an external stylesheet , table styling , background images , etc, 
  * more advanced selectors, 
  * specificity, 
  * float , clear , overflow , etc. 
  start with how floats were intended to to be used ( boxouts and stuff ) , moving on to using floats to create layouts . 
  * absolute positioning ( and how position : relative relates . 
  how to build layouts with abs positioning ), 
  * css3 and browser-specific stuff ( if you want to cover it ), 
  * organising stylesheets , import , media tags, 
  * * mention * hacks and css filters , at least ( maybe conditional comments for ie ), 
  * background image `` tricks '' ( multi-image rollovers , sprites , `` sliding doors '' , etc ), 
  from there you can go in whatever direction you 'd like , as they 'll have a basic grounding in how everything works , and at this point are unlikely to see anything they have n't encountered before . 
  i 'll admit this all depends how much time you 've got and what knowledge they 're expected to come out with . 
  but i still maintain understanding the underlying technologies is more useful than knowing what to paste to make a layout without really `` getting '' why . 
  you might not , actually . 
  modern led flashlights can be extremely bright , to the point where it can actually become a hindrance for some things . 
  they also chew through batteries ( and can generate quite a lot of heat ) at maximum settings , so being able to turn them down is pretty handy . 
  i came here to post that very thing . 
  totally not what i was expecting , but i loved it . 
  those are all * ace * posters . 
  i 'd love to buy some , but what 's the deal with kickstarter rather than a more-usual store ? 
  i do n't think judging it based on how close it is to the current trend of `` minimal movie posters '' is really fair . 
  i think it stands up as art in its own right , even without being especially clever or minimal . 
  the extra detail that precludes it from being classed as `` minimal '' is well-executed , and works given the subject matter . 
  to me , i think actually does a pretty good job of evoking the foreboding `` calm before the storm '' feeling before a battle ( something which a clever in-joke would be unlikely to achieve ) , and above all , i think it * looks good * . 
  hyperthreading would be a baffle that separates the hole at the top of your cowgrinder into two , but can move side-to-side to change the relative sizes of the ( now ) two holes . 
  it will help keep things flowing nicely if you 've got lots of small cows to process , but gets in the way a little bit when you 're trying to process big cows . 
  upload it to [ virustotal ] ( http://www.virustotal.com/ ) . 
  fusion ? 
  the bowl is generally pretty clean . 
  it gets clean water run over it regularly , is allowed to dry in between , and does n't have any little gaps in which bacteria can grow . 
  it 's not really the kind of warm , moist place evil things like to live . 
  your towels ( or other regular offenders : tea towels , dishcloths , etc ) are far more likely to harbour significant bacteria than a toilet bowl . 
  i did that for a bit when our toilet was leaking . 
  it 's great in theory , but sinks are much higher than toilets , and deceptively icy fucking cold first thing in the morning . 
  why yes , i do indeed use note taking applications for the purposes of taking notes . 
  it 's an entire company full of the geekiest of geeks , all geared to scaling complicated things to ridiculous sizes . 
  i ca n't see a situation where a company like would that produce something as simple ( and easily-hackable ) as a 404 page * without * optimising the nuts off it . 
  problem is , i ca n't see perl5 changing very much . 
  significant changes ( even ones proven to break only the craziest of code ) often get so bogged down in arguments about backwards compatibility and the `` darkpan '' that they never happen . 
  and because the changes that do happen are carefully designed to be backwards compatible , upgrades can be avoided for a very long time . 
  ( of course the obvious answer of incrementing the major version number in order to make changes that break backwards-compatibility is unfortunately not an option available to perl5  ), 
  the have it on [ thebox ] ( http://thebox.bz/signup.php ) , 13 seeders . 
  signups are currently open , too . 
  it 's a good site to be on if you want obscure british tv , 
  yeah , they do . 
  2 seeders , 1 leecher . 
  i 'm betting that 's you , 
  i know it 's not what you 're asking , but it 'd actually be possible to make the browser remember which nodes are collapsed without too much trouble . 
  input elements remember their state when going back ( in most browsers ) , so implementing the tree stuff with checkboxes or something ( does n't have to * look * like checkboxes , the actual element can be hidden ) would mean that state is recorded by the browser . 
  probably have to add some js to find all the unticked checkboxes and apply the relevant tree changes on page load . 
  definitely possible , though . 
  might have performance implications , mind . 
  i find it 's better to explain tax brackets properly , as they 're actually quite a fair way of doing things ( otherwise i end up getting embroiled in conversations about `` x % being more for people with higher incomes , so charging everyone the same percentage must be the fairest way '' ) . 
  here in the uk , the first ~ # 7k is tax free , 20 % up to ~ # 38k , and 40 % over that . 
  the important point being that even rich people earning loads pay no tax on their first 7k , and only 20 % tax up to 38 , etc. 
  so , while someone very poor is earning under # 7k is paying no ( income ) tax at all , this is still perfectly fair , as everyone ( even those earning loads ) gets exactly the same benefit . 
  i realise you all probably grasp the concept of tax bands already , but i 've found that most people whining about taxes do n't actually understand it properly . 
  the reason many companies are still using ie6 is because their intranets were built with ie6 ( and * only * ie6 ) in mind . 
  they wo n't work on anything else , as they 're full of proprietary ie-only features . 
  features that ms put there purely so people will use them when developing their intranet , unwittingly locking themselves into microsoft 's software platform . 
  later , ms decided they were sick of having their browser laughed at while it rapidly lost ground to the competition , so they quickly reinstated the ie team ( who had been effectively disbanded since ie6 ) , and developed new browsers that were slightly less shit , but different enough to break these only-ever-tested-in-ie6 intranets . 
  then , despite the technology being available , they refused to produce a standalone ie6 renderer that could be used as an intranet-only app that would give these companies some means to upgrade their primary browser to something vaguely decent and secure . 
  i 'd say ms have got to take * some * blame there . 
  the problem with that is most places simply wo n't install a 3rd party browser . 
  and you ca n't install ie6 alongside another version of ie ( at least , not in a way that can be properly managed with ms 's policy stuff ) . 
  38k is a pretty healthy living . 
  if you 're an it manager , you 're going to at least * start * with the browser provided by the system , particularly if it 's well-integrated into the system 's update process . 
  and if you 're an os developer , you 're going to want to ship a browser with your system . 
  users expect their os to come with a browser , you ca n't really blame ms for doing that . 
  apple bundle safari , that does n't make them evil , does it ? 
  and , just for the record : if you get downvoted , i imagine it 'll be because your post flits between supporting and defending ms without really making a solid point , not because of some mythical `` ms apologists '' ( who really do n't exist on reddit . 
  apple apologists , yes . 
  but ms ? 
  not really . 
  you saw the hotmail ama bloodbath , right ? ), 
  my ssid has been `` we can hear you having sex '' for several years . 
  the uk 's nhs is one of the biggest ( if not * the * biggest ) it contracts in the world . 
  they 're still using ie6 . 
  [ here ] ( http://www.hmg.gov.uk/epetition-responses/petition-view.aspx?epref=ie6upgrade ) is the uk government 's response to a petition to get the nhs to upgrade from ie6 to something vaguely modern . 
  here 's the relevant bit :, 
  `` to test all the web applications currently used by hmg departments can take months at significant potential cost to the taxpayer . '', 
  ie4 was the first version after ms realised quite how important web browsers were going to be , and decided to take away netscape 's market . 
  that was 1997 . 
  this was also the first release that began heavily integrating ie with the rest of the system ( possibly pre-empting the anti-trust problems they were to encounter later ) . 
  ie6 was released in 2001 , long after they 'd established ie as a platform and successfully destroyed netscape .
